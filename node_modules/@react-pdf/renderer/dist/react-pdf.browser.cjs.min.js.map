{"version":3,"file":"react-pdf.browser.cjs.min.js","sources":["../src/utils/styles.js","../src/elements/Root.js","../src/font/standard.js","../src/utils/font.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/wordHyphenation/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/bestFit.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/elements/Document.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/elements/Base.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/mixins/ruler.js","../src/elements/Page.js","../src/elements/View.js","../src/utils/url.js","../src/utils/capitalize.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n","import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  removeChild() {\n    this.document = null;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import fetch from 'isomorphic-fetch';\n\nexport const fetchFont = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(arrayBuffer => Buffer.from(arrayBuffer));\n};\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport standardFonts from './standard';\nimport { fetchFont } from '../utils/font';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = fonts[fontFamily];\n\n  // We cache the font to avoid fetching it many times\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const data = await fetchFont(font.src);\n      font.data = fontkit.create(data);\n    } else {\n      if (BROWSER) {\n        throw new Error(\n          `Invalid font url: ${\n            font.src\n          }. If you use relative url please replace it with absolute one (ex. /font.ttf -> http://localhost:3000/font.ttf)`,\n        );\n      }\n\n      font.data = await new Promise((resolve, reject) =>\n        fontkit.open(font.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we add it.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be reset after the document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    font.loading = false;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fontCache = {};\n    }\n\n    get fallbackFont() {\n      return this.getOrCreateFont('Helvetica');\n    }\n\n    getOrCreateFont(name) {\n      if (this.fontCache[name]) return this.fontCache[name];\n\n      const font = new StandardFont(name);\n      this.fontCache[name] = font;\n\n      return font;\n    }\n\n    shouldFallbackToFont(codePoint, font) {\n      return (\n        !font.hasGlyphForCodePoint(codePoint) &&\n        this.fallbackFont.hasGlyphForCodePoint(codePoint)\n      );\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        const defaultFont =\n          typeof run.attributes.font === 'string'\n            ? this.getOrCreateFont(run.attributes.font)\n            : run.attributes.font;\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          const font = this.shouldFallbackToFont(codePoint, defaultFont)\n            ? this.fallbackFont\n            : defaultFont;\n\n          // If the default font does not have a glyph and the fallback font does, we use it\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","import english from 'hyphenation.en-us';\nimport Hypher from 'hypher';\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst hypher = new Hypher(english);\n\nexport default ({ hyphenationCallback }) => () =>\n  class {\n    constructor() {\n      this.cache = {};\n    }\n\n    calculateParts(word) {\n      return word.includes(SOFT_HYPHEN_HEX)\n        ? word.split(SOFT_HYPHEN_HEX)\n        : hypher.hyphenate(word);\n    }\n\n    hyphenateWord(word) {\n      if (this.cache[word]) return this.cache[word];\n\n      const parts = hyphenationCallback\n        ? hyphenationCallback(word)\n        : this.calculateParts(word);\n\n      this.cache[word] = parts;\n\n      return parts;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, value, stretch, shrink) => ({\n  type: 'glue',\n  value,\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","const INFINITY = 10000;\n\nconst getNextBreakpoint = (subnodes, widths, lineNumber) => {\n  let position = null;\n  let minimumBadness = Infinity;\n\n  const sum = { width: 0, stretch: 0, shrink: 0 };\n  const lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n\n  const calculateRatio = node => {\n    if (sum.width < lineLength) {\n      return sum.stretch - node.stretch > 0\n        ? (lineLength - sum.width) / sum.stretch\n        : INFINITY;\n    } else if (sum.width > lineLength) {\n      return sum.shrink - node.shrink > 0\n        ? (lineLength - sum.width) / sum.shrink\n        : INFINITY;\n    }\n\n    return 0;\n  };\n\n  for (let i = 0; i < subnodes.length; i++) {\n    const node = subnodes[i];\n\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    }\n\n    if (sum.width - sum.shrink > lineLength) break;\n\n    if (node.type === 'penalty' || node.type === 'glue') {\n      const ratio = calculateRatio(node);\n      const penalty = node.type === 'penalty' ? node.penalty : 0;\n      const badness = 100 * Math.pow(Math.abs(ratio), 3) + penalty;\n\n      if (minimumBadness >= badness) {\n        position = i;\n        minimumBadness = badness;\n      }\n    }\n  }\n\n  return sum.width - sum.shrink > lineLength ? position : null;\n};\n\nconst applyBestFit = (nodes, widths) => {\n  let count = 0;\n  let lineNumber = 0;\n  let subnodes = nodes;\n  const breakpoints = [{ position: 0 }];\n\n  while (subnodes.length > 0) {\n    const breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n\n    if (breakpoint) {\n      count += breakpoint;\n      breakpoints.push({ position: count });\n      subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n      count++;\n      lineNumber++;\n    } else {\n      subnodes = [];\n    }\n  }\n\n  return breakpoints;\n};\n\nexport default applyBestFit;\n","import linebreak from './linebreak';\nimport bestFit from './bestFit';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_STEPS = 5;\nconst TOLERANCE_LIMIT = 50;\n\nconst opts = {\n  width: 3,\n  stretch: 6,\n  shrink: 9,\n};\n\nexport default ({ penalty } = {}) => () => {\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    getNodes(glyphString, syllables, { align }) {\n      let start = 0;\n      const hyphenWidth = 5;\n      const hyphenPenalty = penalty || (align === 'justify' ? 100 : 600);\n\n      const result = syllables.reduce((acc, s, index) => {\n        const glyphStart = glyphString.glyphIndexForStringIndex(start);\n        const glyphEnd = glyphString.glyphIndexForStringIndex(start + s.length);\n        const syllable = glyphString.slice(glyphStart, glyphEnd);\n\n        if (syllable.string.trim() === '') {\n          const width = syllable.advanceWidth;\n          const stretch = (width * opts.width) / opts.stretch;\n          const shrink = (width * opts.width) / opts.shrink;\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.glue(width, value, stretch, shrink));\n        } else {\n          const hyphenated = syllables[index + 1] !== ' ';\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.box(syllable.advanceWidth, value, hyphenated));\n\n          if (syllables[index + 1] && hyphenated) {\n            acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        }\n\n        start += s.length;\n\n        return acc;\n      }, []);\n\n      result.push(linebreak.glue(0, null, linebreak.infinity, 0));\n      result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n\n      return result;\n    }\n\n    breakLines(glyphString, nodes, breaks) {\n      let start = 0;\n      let end = null;\n\n      const lines = breaks.reduce((acc, breakPoint) => {\n        const node = nodes[breakPoint.position];\n        const prevNode = nodes[breakPoint.position - 1];\n\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint.position === nodes.length - 1) return acc;\n\n        let line;\n        if (node.type === 'penalty') {\n          end = glyphString.glyphIndexForStringIndex(prevNode.value.end);\n          line = glyphString.copy().slice(start, end);\n          line.insertGlyph(line.length, HYPHEN);\n        } else {\n          end = glyphString.glyphIndexForStringIndex(node.value.end);\n          line = glyphString.copy().slice(start, end);\n        }\n\n        start = end;\n        return [...acc, line];\n      }, []);\n\n      const lastLine = glyphString.slice(start, glyphString.length);\n      lines.push(lastLine);\n\n      return lines;\n    }\n\n    suggestLineBreak(glyphString, syllables, availableWidths, paragraphStyle) {\n      const nodes = this.getNodes(glyphString, syllables, paragraphStyle);\n      let tolerance = this.tolerance;\n      let breaks = linebreak(nodes, availableWidths, { tolerance });\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        tolerance += TOLERANCE_STEPS;\n        breaks = linebreak(nodes, availableWidths, { tolerance });\n      }\n\n      if (\n        breaks.length === 0 ||\n        (breaks.length === 1 && breaks[0].position === 0)\n      ) {\n        breaks = bestFit(nodes, availableWidths);\n      }\n\n      return this.breakLines(glyphString, nodes, breaks.slice(1));\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport wordHyphenation from './wordHyphenation';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback, hyphenationPenalty }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      wordHyphenation: wordHyphenation({ hyphenationCallback }),\n      lineBreaker: lineBreaker({ penalty: hyphenationPenalty }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  const cache = {};\n  const keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport path from 'path';\nimport url from 'url';\nimport fetch from 'isomorphic-fetch';\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nexport const isDangerousLocalPath = (\n  filename,\n  { safePath = './public' } = {},\n) => {\n  if (BROWSER) {\n    throw new Error(\n      'Cannot check dangerous local path in client-side environemnt',\n    );\n  }\n  const absoluteSafePath = path.resolve(safePath);\n  const absoluteFilePath = path.resolve(filename);\n  return !absoluteFilePath.startsWith(absoluteSafePath);\n};\n\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      if (\n        !allowDangerousPaths &&\n        isDangerousLocalPath(absolutePath, { safePath })\n      ) {\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) => {\n        if (err) {\n          return reject(err);\n        }\n        return resolve(data);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst imagesCache = createCache({ limit: 30 });\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = src =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(src);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = src => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(src);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async (src, options) => {\n  let body;\n  if (!BROWSER && getAbsoluteLocalPath(src)) {\n    body = await fetchLocalFile(src, options);\n  } else {\n    const response = await fetch(src);\n    const buffer = await (response.buffer\n      ? response.buffer()\n      : response.arrayBuffer());\n    body = await (buffer.constructor.name === 'Buffer'\n      ? buffer\n      : Buffer.from(buffer));\n  }\n\n  const extension = getImageFormat(body);\n\n  return getImage(body, extension);\n};\n\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src;\n\n  if (cache && imagesCache.get(cacheKey)) {\n    return imagesCache.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    imagesCache.set(cacheKey, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\nconst fetchEmojiImage = reflect(resolveImage);\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n\n      promises.push(\n        fetchEmojiImage(emojiUrl).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import wrapPages from 'page-wrapping';\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(c => c.getLayoutData()),\n    };\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        page.height = page.size.height;\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    this.subpages = await this.wrapPages();\n\n    for (let j = 0; j < this.subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      this.subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: this.subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await this.subpages[j].render();\n    }\n\n    return this.subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout';\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout[percentMethod](percent.value);\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPositionPercent(edge, percent.value);\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPaddingPercent(edge, percent.value);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setMarginPercent(edge, percent.value);\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","export const isBorderStyle = (key, value) =>\n  key.match(/^border/) && typeof value === 'string';\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values\nexport const processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand margin and padding values\nexport const processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst matchObjectPosition = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand objectPosition values\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nimport { isBorderStyle, processBorders } from './borders';\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n      case 'objectPosition':\n        {\n          const expandedProps = styleShorthands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n\n    let resolved;\n    if (isBorderStyle(key, value)) {\n      resolved = processBorders(key, value);\n    } else if (isBoxModelStyle(key, value)) {\n      resolved = processBoxModel(key, value);\n    } else if (isObjectPositionStyle(key, value)) {\n      resolved = processObjectPosition(key, value);\n    } else {\n      resolved = value;\n    }\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      const s = Array.isArray(style) ? flatten(style) : style;\n\n      Object.keys(s).forEach(key => {\n        if (s[key] !== null && s[key] !== undefined) {\n          acc[key] = s[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n\n    this.root.instance.restore();\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  const { instance } = this.root;\n  const layout = this.getAbsoluteLayout();\n\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = this;\n\n  const {\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = this.getComputedStyles();\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const { width, height } = layout;\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  instance.save();\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nexport default { drawBorders };\n","// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst Clipping = {\n  clip() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n    } = this.getComputedStyles();\n\n    // Border top\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA);\n\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(\n      left + width - ctr,\n      top,\n      left + width,\n      top + ctr,\n      left + width,\n      top + rtr,\n    );\n\n    // Border right\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(\n      left + width,\n      top + height - cbr,\n      left + width - cbr,\n      top + height,\n      left + width - rbr,\n      top + height,\n    );\n\n    // Border bottom\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(\n      left + cbl,\n      top + height,\n      left,\n      top + height - cbl,\n      left,\n      top + height - rbl,\n    );\n\n    // Border left\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(\n      left,\n      top + ctl,\n      left + ctl,\n      top,\n      left + rtl,\n      top,\n    );\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  },\n};\n\nexport default Clipping;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform) => {\n  const { left, top, width, height } = element.getAbsoluteLayout();\n  const origin = [left + width / 2, top + height / 2];\n\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0]);\n    }\n  },\n};\n\nexport default Transformations;\n","import toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\nimport Node from './Node';\nimport pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport warning from 'fbjs/lib/warning';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Clipping from '../mixins/clipping';\nimport Transform from '../mixins/transform';\nimport upperFirst from '../utils/upperFirst';\nimport { inheritedProperties } from '../utils/styles';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    const { size, orientation } = this.page;\n\n    this.style = StyleSheet.resolve(this.props.style, {\n      width: size.width,\n      height: size.height,\n      orientation: orientation,\n    });\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) {\n        child.applyProps();\n      }\n    });\n  }\n\n  applyStyle(attribute, value) {\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getComputedStyles() {\n    let element = this.parent;\n    let inheritedStyles = {};\n\n    while (element && element.parent) {\n      inheritedStyles = {\n        ...element.parent.style,\n        ...element.style,\n        ...inheritedStyles,\n      };\n      element = element.parent;\n    }\n\n    return {\n      ...pick(inheritedStyles, inheritedProperties),\n      ...this.style,\n    };\n  }\n\n  getLayoutData() {\n    const layout = this.getAbsoluteLayout();\n\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      height: layout.height,\n      style: this.getComputedStyles(),\n      children: this.children.map(c => {\n        return c.getLayoutData();\n      }),\n    };\n  }\n\n  drawBackgroundColor() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n    const styles = this.getComputedStyles();\n\n    if (styles.backgroundColor) {\n      this.root.instance.save();\n\n      this.clip();\n\n      this.root.instance\n        .fillColor(styles.backgroundColor)\n        .rect(left, top, width, height)\n        .fill()\n        .restore();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  getLayoutData() {\n    return this.value;\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent._container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","import matchPercent from '../utils/matchPercent';\n\nconst RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport Ruler from '../mixins/ruler';\nimport { createInstance } from './index';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    orientation: 'portrait',\n    style: {},\n    wrap: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    const match = matchPercent(value);\n\n    if (match) {\n      this.layout.setPadding(edge, dimension * match.percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","const PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)\\:\\/\\//i;\n\nexport const isURL = value => {\n  return typeof value === 'string' && !!value.match(PROTOCOL_REGEXP);\n};\n\nexport const getURL = value => {\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","const capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nexport default capitalize;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport capitalize from './capitalize';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n  } = instance.getComputedStyles();\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont(fontFamily);\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          fontSize,\n          backgroundColor,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout';\nimport createPDFRenderer from '@textkit/pdf-renderer';\nimport Base from './Base';\nimport Font from '../font';\nimport { getURL } from '../utils/url';\nimport { LayoutEngine, Rect, Path, Container } from '../layout';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n    this.computed = false;\n    this._container = null;\n    this._attributedString = null;\n    this._layoutEngine = null;\n    this.renderCallback = props.render;\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get attributedString() {\n    if (!this._attributedString) {\n      this._attributedString = getAttributedString(this);\n    }\n    return this._attributedString;\n  }\n\n  set attributedString(value) {\n    this._attributedString = value;\n  }\n\n  get container() {\n    const lines = this._container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n\n    return {\n      ...this._container,\n      blocks: [{ lines: lines.splice(this.start, this.end) }],\n    };\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n  }\n\n  get linesHeight() {\n    if (!this._container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this._container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  get layoutEngine() {\n    if (!this._layoutEngine) {\n      const { hyphenationPenalty } = this.props;\n      const hyphenationCallback = Font.getHyphenationCallback();\n      this._layoutEngine = new LayoutEngine({\n        hyphenationCallback,\n        hyphenationPenalty,\n      });\n    }\n\n    return this._layoutEngine;\n  }\n\n  set layoutEngine(instance) {\n    this._layoutEngine = instance;\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n\n      if (counter + line.height > height) {\n        return i;\n      }\n\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    // IF height null or NaN, we take some liberty on layout height\n    const containerHeight = height || this.page.size.height;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this._container || this.props.render) {\n      const path = new Path().rect(0, 0, width, containerHeight);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.layoutEngine.layout(attributedString, [container]);\n      this._container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this._container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.computed = true;\n    this.end = this.props.maxLines || linesCount + 1;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  getComputedStyles() {\n    const styles = super.getComputedStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (!this.props.render && !this.props.fixed) {\n      text._container = this._container;\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    const padding = this.padding;\n    const { top, left } = this.getAbsoluteLayout();\n\n    // We translate lines based on Yoga container\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x = left + padding.left;\n      line.rect.y += top + padding.top - initialX;\n    });\n\n    const renderer = new PDFRenderer(this.root.instance, {\n      outlineLines: false,\n    });\n\n    renderer.render(this.container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import matchPercent from './matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n","import Yoga from 'yoga-layout';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport { resolveImage } from '../utils/image';\nimport { resolveObjectFit } from '../utils/objectFit';\n\nconst SAFETY_HEIGHT = 10;\n\n// We manage two bounding boxes in this class:\n//  - Yoga node: Image bounding box. Adjust based on image and page size\n//  - Image node: Real image container. In most cases equals Yoga node, except if image is bigger than page\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n    style: {},\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.getComputedStyles().flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height),\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height,\n        };\n      }\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  async fetch() {\n    const { src, cache, safePath, allowDangerousPaths } = this.props;\n    try {\n      this.image = await resolveImage(src, {\n        cache,\n        safePath,\n        allowDangerousPaths,\n      });\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  renderImage() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n    const { objectPositionX, objectPositionY } = this.getComputedStyles();\n\n    this.root.instance.save();\n\n    // Clip path to keep image inside border radius\n    this.clip();\n\n    if (this.image.data) {\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\n        this.props.style.objectFit,\n        this.width - padding.left - padding.right,\n        this.height - padding.top - padding.bottom,\n        this.image.width,\n        this.image.height,\n        objectPositionX,\n        objectPositionY,\n      );\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance.image(\n          this.image.data,\n          left + padding.left + xOffset,\n          top + padding.top + yOffset,\n          { width, height },\n        );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.renderImage();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import Root from './Root';\nimport Document from './Document';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","const propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport emptyObject from 'fbjs/lib/emptyObject';\nimport { createInstance } from './elements';\nimport propsEqual from './utils/propsEqual';\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      const layoutData = container.document.getLayoutData();\n      container.document.props.onRender({ ...params, layoutData });\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          callOnRender({ blob });\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    callOnRender();\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          callOnRender({ string: result });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport warning from 'fbjs/lib/warning';\nimport { flatStyles } from './utils/styles';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n  Document as PDFDocument,\n} from './index';\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  state = { blob: null, url: null, loading: true, error: null };\n\n  constructor(props) {\n    super(props);\n\n    // Create new root container for this render\n    this.instance = pdf();\n  }\n\n  componentDidMount() {\n    this.renderDocument();\n    this.onDocumentUpdate();\n  }\n\n  componentDidUpdate() {\n    this.renderDocument();\n\n    if (this.instance.isDirty() && !this.state.error) {\n      this.onDocumentUpdate();\n    }\n  }\n\n  renderDocument() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  onDocumentUpdate() {\n    const oldBlobUrl = this.state.url;\n\n    this.instance\n      .toBlob()\n      .then(blob => {\n        this.setState(\n          { blob, url: URL.createObjectURL(blob), loading: false },\n          () => URL.revokeObjectURL(oldBlobUrl),\n        );\n      })\n      .catch(error => {\n        this.setState({ error });\n        console.error(error);\n        throw error;\n      });\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({\n  className,\n  style,\n  children,\n  innerRef,\n  ...props\n}) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          ref={innerRef}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  PDFRenderer,\n  BlobProvider,\n  createInstance,\n  PDFDownloadLink,\n};\n"],"names":["inheritedProperties","flatStyles","stylesArray","reduce","acc","style","Root","isDirty","document","instance","appendChild","child","removeChild","markDirty","render","PDFDocument","autoFirstPage","this","fetch","src","then","response","buffer","arrayBuffer","Buffer","from","fonts","emojiSource","hyphenationCallback","register","family","otherOptions","registerHyphenationCallback","callback","registerEmojiSource","url","format","getRegisteredFonts","_Object$keys","getFont","getEmojiSource","getHyphenationCallback","load","fontFamily","doc","font","data","loading","isUrl","fetchFont","fontkit","create","Error","resolve","reject","open","err","loaded","registerFont","standardFonts","includes","reset","hasOwnProperty","clear","StandardFont","name","PDFFont","layout","str","encode","encoded","positions","map","_","i","g","glyph","_this","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fontCache","getOrCreateFont","shouldFallbackToFont","fallbackFont","getRuns","string","runs","res","lastFont","lastIndex","index","run","defaultFont","attributes","length","push","slice","start","end","char","codePointAt","SOFT_HYPHEN_HEX","hypher","Hypher","english","cache","calculateParts","word","split","hyphenate","hyphenateWord","parts","Node","prev","next","toString","LinkedList","head","tail","listSize","isLinked","node","isEmpty","size","first","last","toArray","result","forEach","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","remove","pop","shift","linebreak","nodes","lines","settings","options","demerits","line","flagged","fitness","tolerance","activeNodes","sum","lineLengths","breaks","tmp","Infinity","breakpoint","position","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","width","stretch","shrink","lineLength","type","infinity","computeSum","breakPointIndex","penalty","mainLoop","candidates","badness","tmpSum","currentClass","candidate","Math","pow","abs","undefined","reverse","glue","value","box","INFINITY","getNextBreakpoint","subnodes","widths","lineNumber","minimumBadness","min","calculateRatio","applyBestFit","count","breakpoints","HYPHEN","TOLERANCE_STEPS","TOLERANCE_LIMIT","opts","getNodes","glyphString","syllables","align","hyphenPenalty","s","glyphStart","glyphIndexForStringIndex","glyphEnd","syllable","trim","hyphenated","breakLines","breakPoint","prevNode","copy","insertGlyph","lastLine","suggestLineBreak","availableWidths","paragraphStyle","bestFit","shrinkWhitespaceFactor","before","after","LayoutEngine","hyphenationPenalty","engines","scriptItemizer","textDecorationEngine","fontSubstitutionEngine","wordHyphenation","lineBreaker","justificationEngine","_BaseLayoutEngine","BaseLayoutEngine","PNG","isValid","e","MARKERS","JPEG","height","readUInt16BE","marker","pos","isBuffer","createCache","limit","keys","key","getAbsoluteLocalPath","isDangerousLocalPath","filename","safePath","fetchLocalFile","allowDangerousPaths","imagesCache","isValidFormat","lower","toLowerCase","guessFormat","isCompatibleBase64","test","getImage","body","extension","resolveBase64Image","match","exec","resolveImageFromData","_JSON$stringify","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","constructor","resolveImage","cacheKey","get","image","set","emojis","regex","emojiRegex","reflect","promise","v","fetchEmojiImage","getCodePoints","_Array$from","join","buildEmojiUrl","Font","emoji","fetchEmojis","promises","emojiUrl","embedEmojis","fragments","fragment","emojiSize","fontSize","chunk","replace","Attachment","CHARACTER","floor","String","fromCharCode","Document","root","props","children","subpages","parent","indexOf","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","loadFonts","listToExplore","childNode","_Promise","all","loadEmojis","loadImages","loadAssets","applyProps","update","newProps","getLayoutData","c","wrapPages","page","paddingBottom","wrap","wrapArea","pageCount","pages","renderPages","j","renderDynamicNodes","defaultProps","upperFirst","charAt","toUpperCase","isPercent","matchPercent","parseFloat","percent","computed","Yoga","createDefault","insertChild","getChildCount","appendChildBefore","beforeChild","splice","removeAllChilds","setDimension","attr","fixedMethod","percentMethod","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","getAbsoluteLayout","parentLayout","left","top","copyStyle","calculateLayout","onAppendDynamically","getPositionType","POSITION_TYPE_ABSOLUTE","setPositionType","POSITION_TYPE_RELATIVE","getComputedTop","EDGE_TOP","getComputedLeft","EDGE_LEFT","getComputedRight","EDGE_RIGHT","getComputedBottom","EDGE_BOTTOM","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","getComputedMargin","getComputedBorder","paddingTop","paddingRight","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseValue","unit","parseScalar","scalar","isBorderStyle","matchBorderShorthand","processBorders","isBoxModelStyle","matchBoxModel","processBoxModel","isObjectPositionStyle","matchObjectPosition","processObjectPosition","Object","prototype","styleShorthands","expandStyles","propsArray","resolvedStyle","verticalAlign","expandedProps","propName","call","transformStyles","expandedStyles","resolved","styles","flatten","Array","isArray","input","resolveMediaQueries","container","matchMedia","absoluteFillObject","Debug","padding","margin","save","debugContent","debugPadding","debugMargin","debugText","restore","roundedWidth","round","right","roundedHeight","bottom","opacity","fillColor","text","max","rect","fill","KAPPA","sqrt","drawBorders","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","getComputedStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTopColor","borderTopStyle","borderLeftColor","borderLeftStyle","borderRightColor","borderRightStyle","borderBottomColor","borderBottomStyle","rtr","rtl","rbr","rbl","clipBorderTop","ctx","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","fillBorderTop","strokeColor","lineWidth","dash","space","stroke","undash","clipBorderRight","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","clipBorderBottom","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","Clipping","ctr","cbr","cbl","ctl","getRotation","transform","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","origin","rotate","scale","translate","Transformations","re","Base","_Node","merge","orientation","StyleSheet","attribute","applyStyle","setter","isFunction","inheritedStyles","pick","drawBackgroundColor","backgroundColor","clone","onNodeSplit","renderChildren","filter","absolute","nonAbsoluteChilds","absoluteChilds","break","fixed","minPresenceAhead","_Object$assign","Borders","Transform","TextInstance","_container","PAGE_SIZES","getPageSize","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","ceil","matchPercentage","Ruler","ruler","horizontalRuler","verticalRuler","horizontalRulerSteps","rulerSteps","percentage","hasVerticalRuler","verticalRulerSteps","hasHorizontalRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","getHorizontalSteps","step","vRange","getVerticalSteps","_this2","Page","_Base","_size","resetMargins","rulerWidth","getRulerWidth","dimension","addDynamicChild","elements","Fragment","createInstance","cb","nodeWillWrap","addPage","debug","renderRuler","View","applyTransformations","PROTOCOL_REGEXP","getURL","capitalize","l","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","transformText","transformation","getFragments","color","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","getAttributedString","AttributedString","fromFragments","PDFRenderer","createPDFRenderer","Rect","Text","_attributedString","_layoutEngine","renderCallback","setMeasureFunc","measureText","bind","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","containerHeight","path","Path","Container","attributedString","layoutEngine","linesCount","blocks","block","maxLines","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","y","x","initialX","href","Link","link","Note","note","isNumeric","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","yOffset","xOffset","applyNoneObjectFit","applyCoverObjectFit","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","SAFETY_HEIGHT","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","warn","_context","message","renderImage","objectPositionX","objectPositionY","objectFit","constructors","propsEqual","a","b","oldPropsKeys","newPropsKeys","_typeof","shouldReplaceLink","ReactFiberReconciler","parentInstance","internalInstanceHandle","rootContainerInstance","oldProps","emptyObject","Date","now","textInstance","oldText","newText","updatePayload","pdf","pipe","BlobStream","on","blob","stream","toBlob","error","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","React","InternalBlobProvider","_React$PureComponent","state","componentDidMount","renderDocument","onDocumentUpdate","componentDidUpdate","oldBlobUrl","setState","URL","createObjectURL","revokeObjectURL","catch","PureComponent","BlobProvider","PDFViewer","className","innerRef","PDFDownloadLink","fileName","window","navigator","msSaveBlob"],"mappings":"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"}