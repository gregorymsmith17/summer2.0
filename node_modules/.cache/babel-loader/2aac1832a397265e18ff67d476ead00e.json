{"ast":null,"code":"import _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/monthlySamples.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Button, ResponsiveEmbed, ButtonToolbar, Form, Grid, Row, FormGroup, Tab, Tabs, Col, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport { LineChart, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nvar styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  }\n};\n\nvar ColoredLine = function ColoredLine(_ref) {\n  var color = _ref.color;\n  return React.createElement(\"hr\", {\n    style: {\n      color: color,\n      backgroundColor: color,\n      height: .8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n};\n\nvar monthlySamples =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(monthlySamples, _Component);\n\n  function monthlySamples() {\n    var _this;\n\n    _classCallCheck(this, monthlySamples);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(monthlySamples).call(this));\n\n    _this.writeStates = function (itemId) {\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/dailySamples/\".concat(user.uid, \"/\").concat(_this.state.id));\n        sampleRef.child(\"startDate\").set(_this.state.startDate);\n        sampleRef.child(\"endDate\").set(_this.state.endDate);\n        sampleRef.child(\"area\").set(_this.state.area);\n        sampleRef.child(\"description\").set(_this.state.description);\n        sampleRef.child(\"responsibility\").set(_this.state.responsibility);\n        sampleRef.child(\"id\").set(_this.state.id);\n        sampleRef.child(\"sampleDate\").set(_this.state.sampleDate);\n        sampleRef.child(\"sampleTime\").set(_this.state.sampleTime);\n        sampleRef.child(\"operator\").set(_this.state.operator);\n        sampleRef.child(\"sampleLocation\").set(_this.state.sampleLocation);\n        sampleRef.child(\"temperatureResult\").set(_this.state.temperatureResult);\n        sampleRef.child(\"conductivityResult\").set(_this.state.conductivityResult);\n        sampleRef.child(\"pHResult\").set(_this.state.pHResult);\n        sampleRef.child(\"DOResult\").set(_this.state.DOResult);\n        sampleRef.child(\"nitrateResult\").set(_this.state.nitrateResult);\n        sampleRef.child(\"nitriteResult\").set(_this.state.nitriteResult);\n        sampleRef.child(\"ammoniaResult\").set(_this.state.ammoniaResult);\n        sampleRef.child(\"totalInorganicNitrogen\").set(_this.state.totalInorganicNitrogen);\n        sampleRef.child(\"turbidityResult\").set(_this.state.turbidityResult);\n        sampleRef.child(\"TSSResult\").set(_this.state.TSSResult);\n      });\n    };\n\n    _this.handleBtnClick = function () {\n      var order = 'desc';\n\n      if (order === 'desc') {\n        _this.refs.table.handleSort('asc', 'name');\n\n        order = 'asc';\n      } else {\n        _this.refs.table.handleSort('desc', 'name');\n\n        order = 'desc';\n      }\n    };\n\n    _this.exportPDF = function () {\n      _this.resume.save();\n    };\n\n    _this.ammoniaOn = function () {\n      var ammonia = \"ammoniaResult\";\n\n      _this.setState({\n        ammoniaPlot: ammonia\n      });\n    };\n\n    _this.ammoniaOff = function () {\n      var ammonia = \"null\";\n\n      _this.setState({\n        ammoniaPlot: ammonia\n      });\n    };\n\n    _this.DOSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.DOResult - b.DOResult;\n      } else {\n        return b.DOResult - a.DOResult;\n      }\n    };\n\n    _this.pHSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.pHResult - b.pHResult;\n      } else {\n        return b.pHResult - a.pHResult;\n      }\n    };\n\n    _this.nitrateSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.nitrateResult - b.nitrateResult;\n      } else {\n        return b.nitrateResult - a.nitrateResult;\n      }\n    };\n\n    _this.nitriteSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.nitriteResult - b.nitriteResult;\n      } else {\n        return b.nitriteResult - a.nitriteResult;\n      }\n    };\n\n    _this.ammoniaSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.ammoniaResult - b.ammoniaResult;\n      } else {\n        return b.ammoniaResult - a.ammoniaResult;\n      }\n    };\n\n    _this.turbiditySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.turbidityResult - b.turbidityResult;\n      } else {\n        return b.turbidityResult - a.turbidityResult;\n      }\n    };\n\n    _this.tssSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.TSSResult - b.TSSResult;\n      } else {\n        return b.TSSResult - a.TSSResult;\n      }\n    };\n\n    _this.filter = function (url) {\n      domtoimage.toBlob(document.getElementById('my-node')).then(function (blob) {\n        console.log(blob);\n        var blobUrl = URL.createObjectURL(blob);\n        console.log(blobUrl);\n\n        _this.setState({\n          blobUrl: blobUrl\n        });\n      });\n    };\n\n    _this.state = {\n      sampleData: '',\n      sampleTaker: '',\n      temp: '',\n      do: '',\n      conductivity: '',\n      tds: '',\n      salinity: '',\n      pH: '',\n      turbidity: '',\n      nitrogen: '',\n      phosphorus: '',\n      totalHardness: '',\n      tss: '',\n      id: '',\n      key: 1,\n      idKey: '',\n      page: '',\n      area: '',\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      ammoniaPlot: 'ammoniaResult' //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.writeData = _this.writeData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //event triggered when text boxes of forms, values are changed\n\n\n  _createClass(monthlySamples, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      var filter = this.state.filter;\n      var dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n          return String(value);\n        }).find(function (value) {\n          return value.includes(filter);\n        });\n      });\n      var newState = [];\n    } //event triggered when form is submitted\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          sampleData: _this2.state.sampleData,\n          sampleTaker: _this2.state.sampleTaker,\n          temp: _this2.state.temp,\n          do: _this2.state.do,\n          conductivity: _this2.state.conductivity,\n          tds: _this2.state.tds,\n          salinity: _this2.state.salinity,\n          pH: _this2.state.pH,\n          turbidity: _this2.state.turbidity,\n          nitrogen: _this2.state.nitrogen,\n          phosphorus: _this2.state.phosphorus,\n          totalHardness: _this2.state.totalHardness,\n          tss: _this2.state.tss,\n          id: _this2.state.id\n        };\n        samplesRef.push(sample); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this2.setState({\n          sampleData: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: ''\n        });\n      });\n    } //this function is constantly running after the initial render.  Snapshot is used to look into the database.\n    //[] indicates an array value\n    //.map(Number) changes an array of strings to an array of integers\n    //snapshot.foreach(ss => {...}) **this looks in each \"Sample\" for the child of \"user\"**\n    //child of user can be child of BOD or child of tss or whatever.  It finds the value that is a child to that label.\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        samplesRef.on('value', function (snapshot) {\n          var dataList = snapshot.val();\n          var filter = [];\n          var orders = snapshot.val();\n          var orders2 = snapshot.val();\n          var newState = [];\n          var newState2 = [];\n          var newState3 = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleData: orders[order].sampleData,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss\n            });\n          }\n\n          for (var order2 in orders2) {\n            newState2.push({\n              sampleDate: orders2[order2].sampleDate,\n              DOResult: orders2[order2].DOResult,\n              nitrateResult: orders2[order2].nitrateResult,\n              nitriteResult: orders2[order2].nitriteResult,\n              ammoniaResult: orders2[order2].ammoniaResult\n            });\n          }\n\n          newState2.sort(function (a, b) {\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n          });\n          newState.sort(function (a, b) {\n            if (b.sampleDate === a.sampleDate) {\n              return 0;\n            }\n\n            return b.sampleDate > a.sampleDate ? 1 : -1;\n          });\n\n          _this3.setState({\n            orders: newState,\n            orders2: newState2,\n            dataList: newState\n          });\n\n          console.log(_this3.state.dataList);\n        });\n      });\n    } //totally honest...not sure how this knows exactly the right one to remove.\n    //something to do with the SampleID, but I think .remove() is a fire standard function.\n\n  }, {\n    key: \"fillStates\",\n    value: function fillStates(itemId) {\n      var _this4 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/dailySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          _this4.setState({\n            startDate: '',\n            endDate: '',\n            area: '',\n            responsibility: '',\n            description: '',\n            sampleDate: '',\n            sampleTime: '',\n            operator: '',\n            sampleLocation: '',\n            temperatureResult: '',\n            conductivityResult: '',\n            pHResult: '',\n            DOResult: '',\n            nitrateResult: '',\n            nitriteResult: '',\n            ammoniaResult: '',\n            totalInorganicNitrogen: '',\n            turbidityResult: '',\n            TSSResult: ''\n          });\n\n          var orders = snapshot.val();\n          var id = fire.database().ref().child(\"/dailySamples/\".concat(user.uid, \"/\").concat(itemId)).key;\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              area: orders[order].area,\n              startDate: orders[order].startDate,\n              endDate: orders[order].endDate,\n              description: orders[order].description,\n              responsibility: orders[order].responsibility,\n              sampleDate: orders[order].sampleDate,\n              sampleTime: orders[order].sampleTime,\n              operator: orders[order].operator,\n              sampleLocation: orders[order].sampleLocation,\n              temperatureResult: orders[order].temperatureResult,\n              conductivityResult: orders[order].conductivityResult,\n              pHResult: orders[order].pHResult,\n              DOResult: orders[order].DOResult,\n              nitrateResult: orders[order].nitrateResult,\n              nitriteResult: orders[order].nitriteResult,\n              ammoniaResult: orders[order].ammoniaResult,\n              totalInorganicNitrogen: orders[order].totalInorganicNitrogen,\n              turbidityResult: orders[order].turbidityResult,\n              TSSResult: orders[order].TSSResult\n            });\n          }\n\n          _this4.setState({\n            area: snapshot.child('area').val(),\n            responsibility: snapshot.child('responsibility').val(),\n            startDate: snapshot.child('startDate').val(),\n            endDate: snapshot.child('endDate').val(),\n            description: snapshot.child('description').val(),\n            id: id,\n            key: 3,\n            sampleDate: snapshot.child('sampleDate').val(),\n            sampleTime: snapshot.child('sampleTime').val(),\n            operator: snapshot.child('operator').val(),\n            sampleLocation: snapshot.child('sampleLocation').val(),\n            temperatureResult: snapshot.child('temperatureResult').val(),\n            conductivityResult: snapshot.child('conductivityResult').val(),\n            pHResult: snapshot.child('pHResult').val(),\n            DOResult: snapshot.child('DOResult').val(),\n            nitrateResult: snapshot.child('nitrateResult').val(),\n            nitriteResult: snapshot.child('nitriteResult').val(),\n            ammoniaResult: snapshot.child('ammoniaResult').val(),\n            totalInorganicNitrogen: snapshot.child('totalInorganicNitrogen').val(),\n            turbidityResult: snapshot.child('turbidityResult').val(),\n            TSSResult: snapshot.child('TSSResult').val()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"fillEmpty\",\n    value: function fillEmpty(itemId) {\n      var _this5 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/dailySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              area: orders[order].area,\n              startDate: orders[order].startDate,\n              endDate: orders[order].endDate,\n              description: orders[order].description,\n              responsibility: orders[order].responsibility,\n              sampleDate: orders[order].sampleDate,\n              sampleTime: orders[order].sampleTime,\n              operator: orders[order].operator,\n              sampleLocation: orders[order].sampleLocation,\n              temperatureResult: orders[order].temperatureResult,\n              conductivityResult: orders[order].conductivityResult,\n              pHResult: orders[order].pHResult,\n              DOResult: orders[order].DOResult,\n              nitrateResult: orders[order].nitrateResult,\n              nitriteResult: orders[order].nitriteResult,\n              ammoniaResult: orders[order].ammoniaResult,\n              totalInorganicNitrogen: orders[order].totalInorganicNitrogen,\n              turbidityResult: orders[order].turbidityResult,\n              TSSResult: orders[order].TSSResult\n            });\n          }\n\n          _this5.setState({\n            area: '',\n            responsibility: '',\n            startDate: '',\n            endDate: '',\n            description: '',\n            id: '',\n            key: 3,\n            sampleDate: '',\n            sampleTime: '',\n            operator: '',\n            sampleLocation: '',\n            temperatureResult: '',\n            conductivityResult: '',\n            pHResult: '',\n            DOResult: '',\n            nitrateResult: '',\n            nitriteResult: '',\n            ammoniaResult: '',\n            totalInorganicNitrogen: '',\n            turbidityResult: '',\n            TSSResult: ''\n          });\n        });\n      });\n    }\n  }, {\n    key: \"createNewWorkOrder\",\n    value: function createNewWorkOrder(itemId) {\n      var _this6 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/dailySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              area: orders[order].area,\n              startDate: orders[order].startDate,\n              endDate: orders[order].endDate,\n              description: orders[order].description,\n              responsibility: orders[order].responsibility,\n              sampleDate: orders[order].sampleDate,\n              sampleTime: orders[order].sampleTime,\n              operator: orders[order].operator,\n              sampleLocation: orders[order].sampleLocation,\n              temperatureResult: orders[order].temperatureResult,\n              conductivityResult: orders[order].conductivityResult,\n              pHResult: orders[order].pHResult,\n              DOResult: orders[order].DOResult,\n              nitrateResult: orders[order].nitrateResult,\n              nitriteResult: orders[order].nitriteResult,\n              ammoniaResult: orders[order].ammoniaResult,\n              totalInorganicNitrogen: orders[order].totalInorganicNitrogen,\n              turbidityResult: orders[order].turbidityResult,\n              TSSResult: orders[order].TSSResult\n            });\n          }\n\n          _this6.setState({\n            area: snapshot.child('area').val(),\n            responsibility: snapshot.child('responsibility').val(),\n            startDate: snapshot.child('startDate').val(),\n            endDate: snapshot.child('endDate').val(),\n            description: snapshot.child('description').val(),\n            id: snapshot.child('id').val(),\n            key: 3,\n            sampleDate: snapshot.child('sampleDate').val(),\n            sampleTime: snapshot.child('sampleTime').val(),\n            operator: snapshot.child('operator').val(),\n            sampleLocation: snapshot.child('sampleLocation').val(),\n            temperatureResult: snapshot.child('temperatureResult').val(),\n            conductivityResult: snapshot.child('conductivityResult').val(),\n            pHResult: snapshot.child('pHResult').val(),\n            DOResult: snapshot.child('DOResult').val(),\n            nitrateResult: snapshot.child('nitrateResult').val(),\n            nitriteResult: snapshot.child('nitriteResult').val(),\n            ammoniaResult: snapshot.child('ammoniaResult').val(),\n            totalInorganicNitrogen: snapshot.child('totalInorganicNitrogen').val(),\n            turbidityResult: snapshot.child('turbidityResult').val(),\n            TSSResult: snapshot.child('TSSResult').val()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"removesample\",\n    value: function removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/dailySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.remove();\n      });\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(key) {\n      this.setState({\n        key: key\n      });\n    }\n  }, {\n    key: \"writeData\",\n    value: function writeData(e) {\n      var _this7 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"dailySamples/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/dailySamples/\".concat(user.uid, \"/\").concat(_this7.state.id));\n        var newCheckboxKey = firebase.database().ref().child('checkbox').push().key;\n        var id = newCheckboxKey;\n        var box = id;\n        var sample = {\n          id: _this7.state.id,\n          area: _this7.state.area,\n          responsibility: _this7.state.responsibility,\n          description: _this7.state.description,\n          startDate: _this7.state.startDate,\n          endDate: _this7.state.endDate,\n          checkbox: '<button id=\"buttonTest\" onClick={buttonTest}>Test<button>',\n          sampleDate: _this7.state.sampleDate,\n          sampleTime: _this7.state.sampleTime,\n          operator: _this7.state.operator,\n          sampleLocation: _this7.state.sampleLocation,\n          temperatureResult: _this7.state.temperatureResult,\n          conductivityResult: _this7.state.conductivityResult,\n          pHResult: _this7.state.pHResult,\n          DOResult: _this7.state.DOResult,\n          nitrateResult: _this7.state.nitrateResult,\n          nitriteResult: _this7.state.nitriteResult,\n          ammoniaResult: _this7.state.ammoniaResult,\n          totalInorganicNitrogen: _this7.state.totalInorganicNitrogen,\n          turbidityResult: _this7.state.turbidityResult,\n          TSSResult: _this7.state.TSSResult\n        };\n        samplesRef.child(_this7.state.id).set(sample); //this.setState is used to clear the text boxes after the form has been submitted.\n      });\n    }\n  }, {\n    key: \"rawMarkup\",\n    value: function rawMarkup() {\n      var rawMarkup = this.props.content;\n      return {\n        __html: rawMarkup\n      };\n    }\n  }, {\n    key: \"onClickProductSelected\",\n    value: function onClickProductSelected(row, isSelected, e) {\n      var rowStr = '';\n      var id = \"datafield='id'\";\n\n      for (var prop in row) {\n        rowStr += id;\n      }\n\n      alert(\"is selected: \".concat(id, \", \").concat(rowStr));\n    }\n  }, {\n    key: \"cellButton\",\n    value: function cellButton(row, isSelected, e, id) {\n      var _this8 = this;\n\n      return React.createElement(TiPencil, {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this8.fillStates(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759\n        },\n        __self: this\n      }, \"Click me\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      function buttonFormatter(cell, row) {\n        return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 6,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        },\n        __self: this\n      }, \"Daily Sample Logs\")), React.createElement(Col, {\n        xs: 6,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        style: styles.topPad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this9.fillEmpty();\n        },\n        eventKey: 3,\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        },\n        __self: this\n      }, \"+ Create New Sample Log\")))), React.createElement(Col, {\n        xs: 12,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this9.pdfExportComponent.save();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815\n        },\n        __self: this\n      }, \"Export PDF\"), React.createElement(Tabs, {\n        activeKey: this.state.key,\n        onSelect: this.handleSelect,\n        defaultActiveKey: 1,\n        id: \"uncontrolled-tab-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: 1,\n        title: \"+ Daily Samples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: styles.topPad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.dataList,\n        pagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"sampleDate\",\n        isKey: true,\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838\n        },\n        __self: this\n      }, \"Sample Date\"), React.createElement(TableHeaderColumn, {\n        dataField: \"operator\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839\n        },\n        __self: this\n      }, \"Operator\"), React.createElement(TableHeaderColumn, {\n        dataField: \"DOResult\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.DOSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840\n        },\n        __self: this\n      }, \"DO\"), React.createElement(TableHeaderColumn, {\n        dataField: \"pHResult\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.pHSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841\n        },\n        __self: this\n      }, \"pH\"), React.createElement(TableHeaderColumn, {\n        dataField: \"nitrateResult\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.nitrateSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842\n        },\n        __self: this\n      }, \"Nitrate\"), React.createElement(TableHeaderColumn, {\n        dataField: \"nitriteResult\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.nitriteSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843\n        },\n        __self: this\n      }, \"Nitrite\"), React.createElement(TableHeaderColumn, {\n        dataField: \"ammoniaResult\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.ammoniaSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844\n        },\n        __self: this\n      }, \"Ammonia\"), React.createElement(TableHeaderColumn, {\n        dataField: \"turbidityResult\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.turbiditySort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      }, \"Turbidity\"), React.createElement(TableHeaderColumn, {\n        dataField: \"TSSResult\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.tssSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846\n        },\n        __self: this\n      }, \"TSS\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.cellButton.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847\n        },\n        __self: this\n      })))))), React.createElement(Tab, {\n        eventKey: 2,\n        title: \"+ Graphs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this9.filter();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871\n        },\n        __self: this\n      }, \"Test\"), React.createElement(\"div\", {\n        id: \"my-node\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        width: 600,\n        height: 200,\n        data: this.state.orders2,\n        syncId: \"anyId\",\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"DOResult\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"nitrateResult\",\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"nitriteResult\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.ammoniaPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890\n        },\n        __self: this\n      }, \"Maybe some other content\"), React.createElement(LineChart, {\n        width: 600,\n        height: 200,\n        data: this.state.orders2,\n        syncId: \"anyId\",\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"DOResult\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"nitrateResult\",\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898\n        },\n        __self: this\n      }), React.createElement(Brush, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899\n        },\n        __self: this\n      })), React.createElement(AreaChart, {\n        width: 600,\n        height: 200,\n        data: this.state.orders2,\n        syncId: \"anyId\",\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        },\n        __self: this\n      }), React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"DOResult\",\n        stroke: \"##8884d8\",\n        fill: \"##8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      }), React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"nitrateResult\",\n        stroke: \"#82ca9d\",\n        fill: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: this.ammoniaOn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914\n        },\n        __self: this\n      }, \"Ammonia On\"), React.createElement(\"button\", {\n        onClick: this.ammoniaOff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915\n        },\n        __self: this\n      }, \"Ammonia Off\")), React.createElement(Tab, {\n        eventKey: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"add-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935\n        },\n        __self: this\n      }, \"Daily Sample Log\")), React.createElement(Col, {\n        xs: 6,\n        sm: 6,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"operator\",\n        placeholder: \"Operator Name?\",\n        onChange: this.handleChange,\n        value: this.state.operator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 947\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948\n        },\n        __self: this\n      }, \"Sample Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949\n        },\n        __self: this\n      }, \"Sample Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950\n        },\n        __self: this\n      }, \"Sample Location\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        name: \"sampleDate\",\n        placeholder: \"Date of Sample\",\n        onChange: this.handleChange,\n        value: this.state.sampleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"time\",\n        name: \"sampleTime\",\n        placeholder: \"Time of Sample\",\n        onChange: this.handleChange,\n        value: this.state.sampleTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        title: this.state.sampleLocation,\n        id: \"dropdown-size-medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 960\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        eventKey: \"1\",\n        onSelect: this.sampleInfluent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961\n        },\n        __self: this\n      }, \"Influent\"), React.createElement(MenuItem, {\n        eventKey: \"2\",\n        onSelect: this.sampleEffluent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962\n        },\n        __self: this\n      }, \"Effluent\"))))))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981\n        },\n        __self: this\n      }, \"Temperature (C)\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987\n        },\n        __self: this\n      }, \"Results (C)\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"temperatureResult\",\n        placeholder: \"Result\",\n        onChange: this.handleChange,\n        value: this.state.temperatureResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        xsOffset: 1,\n        smOffset: 1,\n        mdOffset: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002\n        },\n        __self: this\n      }, \"Conductivity (M/CM)\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008\n        },\n        __self: this\n      }, \"Results (M/CM)\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"conductivityResult\",\n        placeholder: \"Result\",\n        onChange: this.handleChange,\n        value: this.state.conductivityResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015\n        },\n        __self: this\n      }))))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028\n        },\n        __self: this\n      }, \"pH\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034\n        },\n        __self: this\n      }, \"Results\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"pHResult\",\n        placeholder: \"Result\",\n        onChange: this.handleChange,\n        value: this.state.pHResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        xsOffset: 1,\n        smOffset: 1,\n        mdOffset: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }, \"DO (mg/L)\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055\n        },\n        __self: this\n      }, \"Results (mg/L)\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1058\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1059\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"DOResult\",\n        placeholder: \"Result\",\n        onChange: this.handleChange,\n        value: this.state.DOResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062\n        },\n        __self: this\n      }))))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1071\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1072\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073\n        },\n        __self: this\n      }, \"Nitrogen Samples\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079\n        },\n        __self: this\n      }, \"Nitrate (mg/L)\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1082\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085\n        },\n        __self: this\n      }, \"Results (mg/L)\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"nitrateResult\",\n        placeholder: \"Result\",\n        onChange: this.handleChange,\n        value: this.state.nitrateResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        xsOffset: 1,\n        smOffset: 1,\n        mdOffset: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1100\n        },\n        __self: this\n      }, \"Nitrite (mg/L)\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, \"Results (mg/L)\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"nitriteResult\",\n        placeholder: \"Result\",\n        onChange: this.handleChange,\n        value: this.state.nitriteResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      }))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124\n        },\n        __self: this\n      }, \"Ammonia (mg/L)\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }, \"Results (mg/L)\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"ammoniaResult\",\n        placeholder: \"Result\",\n        onChange: this.handleChange,\n        value: this.state.ammoniaResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        xsOffset: 1,\n        smOffset: 1,\n        mdOffset: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145\n        },\n        __self: this\n      }, \"Total Inorganic Nitrogen (mg/L)\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151\n        },\n        __self: this\n      }, \"Results (mg/L)\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158\n        },\n        __self: this\n      }, \" \", this.state.totalInorganicNitrogen)))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176\n        },\n        __self: this\n      }, \"Turbidity (NTU)\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1177\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1178\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1179\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182\n        },\n        __self: this\n      }, \"Results (NTU)\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1186\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"turbidityResult\",\n        placeholder: \"Result\",\n        onChange: this.handleChange,\n        value: this.state.turbidityResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        xs: 5,\n        md: 5,\n        xsOffset: 1,\n        smOffset: 1,\n        mdOffset: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197\n        },\n        __self: this\n      }, \"TSSResult (mg/L)\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1203\n        },\n        __self: this\n      }, \"Results (mg/L)\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"TSSResult\",\n        placeholder: \"Result\",\n        onChange: this.handleChange,\n        value: this.state.TSSResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210\n        },\n        __self: this\n      }))))))), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1226\n        },\n        __self: this\n      }, \"Add sample\"))), React.createElement(\"button\", {\n        onClick: this.writeData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229\n        },\n        __self: this\n      }, \"Overwrite Data\"))))), React.createElement(Tab, {\n        eventKey: 5,\n        title: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235\n        },\n        __self: this\n      }, React.createElement(PDFExport, {\n        fileName: this.state.roundDate + ' ' + 'Maintenance Round',\n        title: \"\",\n        style: {\n          padding: '100px'\n        },\n        paperSize: 'Letter',\n        forcePageBreak: \".page-break\",\n        ref: function ref(component) {\n          return _this9.pdfExportComponent = component;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.blobUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1245\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return monthlySamples;\n}(Component);\n\nexport { monthlySamples as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/monthlySamples.jsx"],"names":["React","Component","Navbar","Nav","NavItem","Button","ResponsiveEmbed","ButtonToolbar","Form","Grid","Row","FormGroup","Tab","Tabs","Col","Table","Popover","ControlLabel","MenuItem","DropdownButton","FormControl","Checkbox","Link","firebase","PDFExport","fire","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiArrowSortedUp","TiPencil","TiTrash","domtoimage","fileDownload","LineChart","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","styles","topPad","paddingTop","ColoredLine","color","backgroundColor","height","monthlySamples","writeStates","itemId","removeAuthListener","auth","onAuthStateChanged","user","sampleRef","database","ref","uid","state","id","child","set","startDate","endDate","area","description","responsibility","sampleDate","sampleTime","operator","sampleLocation","temperatureResult","conductivityResult","pHResult","DOResult","nitrateResult","nitriteResult","ammoniaResult","totalInorganicNitrogen","turbidityResult","TSSResult","handleBtnClick","order","refs","table","handleSort","exportPDF","resume","save","ammoniaOn","ammonia","setState","ammoniaPlot","ammoniaOff","DOSort","a","b","dataList","pHSort","nitrateSort","nitriteSort","ammoniaSort","turbiditySort","tssSort","filter","url","toBlob","document","getElementById","then","blob","console","log","blobUrl","URL","createObjectURL","sampleData","sampleTaker","temp","do","conductivity","tds","salinity","pH","turbidity","nitrogen","phosphorus","totalHardness","tss","key","idKey","page","samples","orders","orders2","handleChange","bind","handleSubmit","handleSelect","writeData","e","target","name","value","item","Object","values","map","String","find","includes","newState","preventDefault","samplesRef","orderID","sample","push","on","snapshot","val","newState2","newState3","order2","sort","remove","newCheckboxKey","box","checkbox","rawMarkup","props","content","__html","row","isSelected","rowStr","prop","alert","fillStates","buttonFormatter","cell","fillEmpty","pdfExportComponent","type","delay","cellButton","top","right","left","bottom","r","sampleInfluent","sampleEffluent","roundDate","padding","component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Button, ResponsiveEmbed, ButtonToolbar, Form, Grid, Row, FormGroup, Tab, Tabs, Col, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\n\n\nimport { LineChart, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  },\n};\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: .8\n        }}\n    />\n);\n\n\n\nexport default class monthlySamples extends Component {\n\n\n    constructor() {\n        super();\n        this.state = {\n          sampleData: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n\n          id: '',\n          key: 1,\n          idKey: '',\n          page: '',\n          area: '',\n\n\n\n          samples: [],\n          orders: [],\n          orders2: [],\n          dataList: [],\n          filter: \"\",\n          blobUrl: null,\n\n          ammoniaPlot: 'ammoniaResult',\n\n\n\n        }\n        //these are triggered events.  handleChange is for text box changes\n        //handlesubmit is for the form being submitted.\n        //every event trigger needs to be bound like is below with .bind\n        //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.writeData = this.writeData.bind(this);\n\n\n\n\n      }\n\n      //event triggered when text boxes of forms, values are changed\n      handleChange(e) {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n        let filter = this.state.filter;\n        let dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n        return String(value);\n              }).find(function (value) {\n                   return value.includes(filter);\n        });\n\n        });\n        let newState = [];\n\n\n\n\n\n      }\n      //event triggered when form is submitted\n      handleSubmit(e) {\n        e.preventDefault();\n        //fire.database().ref('samples') refers to the main title of the fire database.\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n        const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n        const orderID = fire.database().ref(`/monthlySamples/${user.uid}/${orderID}`);\n\n\n        const sample = {\n\n          sampleData: this.state.sampleData,\n          sampleTaker: this.state.sampleTaker,\n          temp: this.state.temp,\n          do: this.state.do,\n          conductivity: this.state.conductivity,\n          tds: this.state.tds,\n          salinity: this.state.salinity,\n          pH: this.state.pH,\n          turbidity: this.state.turbidity,\n          nitrogen: this.state.nitrogen,\n          phosphorus: this.state.phosphorus,\n          totalHardness: this.state.totalHardness,\n          tss: this.state.tss,\n\n          id: this.state.id,\n        }\n\n\n\n\n        samplesRef.push(sample);\n        //this.setState is used to clear the text boxes after the form has been submitted.\n        this.setState({\n          sampleData: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n\n\n\n        });\n      });\n    }\n\n\n\n\n\n      //this function is constantly running after the initial render.  Snapshot is used to look into the database.\n      //[] indicates an array value\n      //.map(Number) changes an array of strings to an array of integers\n      //snapshot.foreach(ss => {...}) **this looks in each \"Sample\" for the child of \"user\"**\n      //child of user can be child of BOD or child of tss or whatever.  It finds the value that is a child to that label.\n\n      componentDidMount() {\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n          const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n          samplesRef.on('value', (snapshot) => {\n\n\n            let dataList = snapshot.val();\n            let filter = [];\n\n\n\n          let orders = snapshot.val();\n          let orders2 = snapshot.val();\n\n          let newState = [];\n          let newState2 = [];\n          let newState3 = [];\n\n          for (let order in orders) {\n            newState.push({\n              id: order,\n              sampleData: orders[order].sampleData,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n\n              \n\n            });\n          }\n          for (let order2 in orders2) {\n            newState2.push({\n\n\n              sampleDate: orders2[order2].sampleDate,\n\n              DOResult: orders2[order2].DOResult,\n              nitrateResult: orders2[order2].nitrateResult,\n              nitriteResult: orders2[order2].nitriteResult,\n              ammoniaResult: orders2[order2].ammoniaResult,\n\n\n\n            });\n          }\n          newState2.sort(function(a, b) {\n\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n        });\n        newState.sort(function(a, b) {\n\n          if (b.sampleDate === a.sampleDate) {\n            return 0;\n          }\n          return b.sampleDate > a.sampleDate ? 1 : -1;\n      });\n\n\n\n          this.setState({\n            orders: newState,\n            orders2: newState2,\n            dataList: newState,\n          });\n\n\n\n\n          console.log(this.state.dataList);\n\n\n\n\n\n        });\n\n      });\n\n\n    }\n\n\n\n\n\n    //totally honest...not sure how this knows exactly the right one to remove.\n    //something to do with the SampleID, but I think .remove() is a fire standard function.\n\n    fillStates(itemId) {\n      let area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/dailySamples/${user.uid}/${itemId}`);\n\n      sampleRef.on('value', (snapshot) => {\n\n        this.setState({\n          startDate: '',\n          endDate: '',\n          area: '',\n          responsibility: '',\n          description: '',\n          sampleDate: '',\n          sampleTime: '',\n          operator: '',\n          sampleLocation: '',\n          temperatureResult: '',\n          conductivityResult: '',\n          pHResult: '',\n          DOResult: '',\n          nitrateResult: '',\n          nitriteResult: '',\n          ammoniaResult: '',\n          totalInorganicNitrogen: '',\n          turbidityResult: '',\n          TSSResult: '',\n\n        });\n\n      let orders = snapshot.val();\n      let id = fire.database().ref().child(`/dailySamples/${user.uid}/${itemId}`).key;\n\n      let newState = [];\n      for (let order in orders) {\n        newState.push({\n          id: order,\n\n          area: orders[order].area,\n          startDate: orders[order].startDate,\n          endDate: orders[order].endDate,\n          description: orders[order].description,\n          responsibility: orders[order].responsibility,\n\n          sampleDate: orders[order].sampleDate,\n          sampleTime: orders[order].sampleTime,\n          operator: orders[order].operator,\n          sampleLocation: orders[order].sampleLocation,\n          temperatureResult: orders[order].temperatureResult,\n          conductivityResult: orders[order].conductivityResult,\n          pHResult: orders[order].pHResult,\n          DOResult: orders[order].DOResult,\n          nitrateResult: orders[order].nitrateResult,\n          nitriteResult: orders[order].nitriteResult,\n          ammoniaResult: orders[order].ammoniaResult,\n          totalInorganicNitrogen: orders[order].totalInorganicNitrogen,\n          turbidityResult: orders[order].turbidityResult,\n          TSSResult: orders[order].TSSResult,\n\n        });\n      }\n      this.setState({\n        area: snapshot.child('area').val(),\n        responsibility: snapshot.child('responsibility').val(),\n        startDate: snapshot.child('startDate').val(),\n        endDate: snapshot.child('endDate').val(),\n        description: snapshot.child('description').val(),\n        id: id,\n        key: 3,\n\n        sampleDate: snapshot.child('sampleDate').val(),\n        sampleTime: snapshot.child('sampleTime').val(),\n        operator: snapshot.child('operator').val(),\n        sampleLocation: snapshot.child('sampleLocation').val(),\n        temperatureResult: snapshot.child('temperatureResult').val(),\n        conductivityResult: snapshot.child('conductivityResult').val(),\n        pHResult: snapshot.child('pHResult').val(),\n        DOResult: snapshot.child('DOResult').val(),\n        nitrateResult: snapshot.child('nitrateResult').val(),\n        nitriteResult: snapshot.child('nitriteResult').val(),\n        ammoniaResult: snapshot.child('ammoniaResult').val(),\n        totalInorganicNitrogen: snapshot.child('totalInorganicNitrogen').val(),\n        turbidityResult: snapshot.child('turbidityResult').val(),\n        TSSResult: snapshot.child('TSSResult').val(),\n\n\n\n\n      })\n\n\n\n\n});\n\n    });\n  }\n\n\n  writeStates = (itemId) => {\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/dailySamples/${user.uid}/${this.state.id}`);\n\n    sampleRef.child(\"startDate\").set(this.state.startDate);\n    sampleRef.child(\"endDate\").set(this.state.endDate);\n    sampleRef.child(\"area\").set(this.state.area);\n    sampleRef.child(\"description\").set(this.state.description);\n    sampleRef.child(\"responsibility\").set(this.state.responsibility);\n    sampleRef.child(\"id\").set(this.state.id);\n\n\n    sampleRef.child(\"sampleDate\").set(this.state.sampleDate);\n    sampleRef.child(\"sampleTime\").set(this.state.sampleTime);\n    sampleRef.child(\"operator\").set(this.state.operator);\n    sampleRef.child(\"sampleLocation\").set(this.state.sampleLocation);\n    sampleRef.child(\"temperatureResult\").set(this.state.temperatureResult);\n    sampleRef.child(\"conductivityResult\").set(this.state.conductivityResult);\n    sampleRef.child(\"pHResult\").set(this.state.pHResult);\n    sampleRef.child(\"DOResult\").set(this.state.DOResult);\n    sampleRef.child(\"nitrateResult\").set(this.state.nitrateResult);\n    sampleRef.child(\"nitriteResult\").set(this.state.nitriteResult);\n    sampleRef.child(\"ammoniaResult\").set(this.state.ammoniaResult);\n    sampleRef.child(\"totalInorganicNitrogen\").set(this.state.totalInorganicNitrogen);\n    sampleRef.child(\"turbidityResult\").set(this.state.turbidityResult);\n    sampleRef.child(\"TSSResult\").set(this.state.TSSResult);\n\n\n  });\n\n\n  }\n\n\n\n\n\n\n\n\n  fillEmpty(itemId) {\n    let area = '';\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/dailySamples/${user.uid}/${itemId}`);\n\n\n    sampleRef.on('value', (snapshot) => {\n\n    let orders = snapshot.val();\n\n    let newState = [];\n    for (let order in orders) {\n      newState.push({\n        id: order,\n\n        area: orders[order].area,\n        startDate: orders[order].startDate,\n        endDate: orders[order].endDate,\n        description: orders[order].description,\n        responsibility: orders[order].responsibility,\n\n        sampleDate: orders[order].sampleDate,\n        sampleTime: orders[order].sampleTime,\n        operator: orders[order].operator,\n        sampleLocation: orders[order].sampleLocation,\n        temperatureResult: orders[order].temperatureResult,\n        conductivityResult: orders[order].conductivityResult,\n        pHResult: orders[order].pHResult,\n        DOResult: orders[order].DOResult,\n        nitrateResult: orders[order].nitrateResult,\n        nitriteResult: orders[order].nitriteResult,\n        ammoniaResult: orders[order].ammoniaResult,\n        totalInorganicNitrogen: orders[order].totalInorganicNitrogen,\n        turbidityResult: orders[order].turbidityResult,\n        TSSResult: orders[order].TSSResult,\n\n      });\n    }\n    this.setState({\n      area: '',\n      responsibility: '',\n      startDate: '',\n      endDate: '',\n      description: '',\n      id: '',\n      key: 3,\n      sampleDate: '',\n      sampleTime: '',\n      operator: '',\n      sampleLocation: '',\n      temperatureResult: '',\n      conductivityResult: '',\n      pHResult: '',\n      DOResult: '',\n      nitrateResult: '',\n      nitriteResult: '',\n      ammoniaResult: '',\n      totalInorganicNitrogen: '',\n      turbidityResult: '',\n      TSSResult: '',\n\n\n\n    })\n\n\n});\n  });\n}\n\n  createNewWorkOrder (itemId) {\n\n      let area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/dailySamples/${user.uid}/${itemId}`);\n\n      sampleRef.on('value', (snapshot) => {\n\n      let orders = snapshot.val();\n\n      let newState = [];\n      for (let order in orders) {\n        newState.push({\n          id: order,\n\n          area: orders[order].area,\n          startDate: orders[order].startDate,\n          endDate: orders[order].endDate,\n          description: orders[order].description,\n          responsibility: orders[order].responsibility,\n          sampleDate: orders[order].sampleDate,\n          sampleTime: orders[order].sampleTime,\n          operator: orders[order].operator,\n          sampleLocation: orders[order].sampleLocation,\n          temperatureResult: orders[order].temperatureResult,\n          conductivityResult: orders[order].conductivityResult,\n          pHResult: orders[order].pHResult,\n          DOResult: orders[order].DOResult,\n          nitrateResult: orders[order].nitrateResult,\n          nitriteResult: orders[order].nitriteResult,\n          ammoniaResult: orders[order].ammoniaResult,\n          totalInorganicNitrogen: orders[order].totalInorganicNitrogen,\n          turbidityResult: orders[order].turbidityResult,\n          TSSResult: orders[order].TSSResult,\n\n        });\n      }\n      this.setState({\n        area: snapshot.child('area').val(),\n        responsibility: snapshot.child('responsibility').val(),\n        startDate: snapshot.child('startDate').val(),\n        endDate: snapshot.child('endDate').val(),\n        description: snapshot.child('description').val(),\n        id: snapshot.child('id').val(),\n        key: 3,\n\n        sampleDate: snapshot.child('sampleDate').val(),\n        sampleTime: snapshot.child('sampleTime').val(),\n        operator: snapshot.child('operator').val(),\n        sampleLocation: snapshot.child('sampleLocation').val(),\n        temperatureResult: snapshot.child('temperatureResult').val(),\n        conductivityResult: snapshot.child('conductivityResult').val(),\n        pHResult: snapshot.child('pHResult').val(),\n        DOResult: snapshot.child('DOResult').val(),\n        nitrateResult: snapshot.child('nitrateResult').val(),\n        nitriteResult: snapshot.child('nitriteResult').val(),\n        ammoniaResult: snapshot.child('ammoniaResult').val(),\n        totalInorganicNitrogen: snapshot.child('totalInorganicNitrogen').val(),\n        turbidityResult: snapshot.child('turbidityResult').val(),\n        TSSResult: snapshot.child('TSSResult').val(),\n\n\n\n      })\n\n\n});\n    });\n\n\n\n\n  }\n\n    removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/dailySamples/${user.uid}/${itemId}`);\n      sampleRef.remove();\n    });\n    }\n\n    handleSelect(key) {\n\n  this.setState({key});\n}\n\n\nwriteData (e) {\n  e.preventDefault();\n  //fire.database().ref('samples') refers to the main title of the fire database.\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const samplesRef = fire.database().ref(`dailySamples/${user.uid}`);\n  const orderID = fire.database().ref(`/dailySamples/${user.uid}/${this.state.id}`);\n  const newCheckboxKey = firebase.database().ref().child('checkbox').push().key;\n\n  let id = newCheckboxKey;\n  let box = id;\n\n\n  const sample = {\n\n    id: this.state.id,\n    area: this.state.area,\n    responsibility: this.state.responsibility,\n    description: this.state.description,\n    startDate: this.state.startDate,\n    endDate: this.state.endDate,\n    checkbox: '<button id=\"buttonTest\" onClick={buttonTest}>Test<button>',\n\n    sampleDate: this.state.sampleDate,\n    sampleTime: this.state.sampleTime,\n    operator: this.state.operator,\n    sampleLocation: this.state.sampleLocation,\n    temperatureResult: this.state.temperatureResult,\n    conductivityResult: this.state.conductivityResult,\n    pHResult: this.state.pHResult,\n    DOResult: this.state.DOResult,\n    nitrateResult: this.state.nitrateResult,\n    nitriteResult: this.state.nitriteResult,\n    ammoniaResult: this.state.ammoniaResult,\n    totalInorganicNitrogen: this.state.totalInorganicNitrogen,\n    turbidityResult: this.state.turbidityResult,\n    TSSResult: this.state.TSSResult,\n  }\n\n  samplesRef.child(this.state.id).set(sample);\n\n\n\n\n\n\n  //this.setState is used to clear the text boxes after the form has been submitted.\n\n});\n}\n\n\n\nhandleBtnClick = () => {\n\n  let order = 'desc';\n  if (order === 'desc') {\n    this.refs.table.handleSort('asc', 'name');\n    order = 'asc';\n  } else {\n    this.refs.table.handleSort('desc', 'name');\n    order = 'desc';\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexportPDF = () => {\n  this.resume.save();\n}\n\nrawMarkup(){\n  var rawMarkup = this.props.content\n  return { __html: rawMarkup };\n}\n\n\nammoniaOn = () => {\n  let ammonia = \"ammoniaResult\";\n  this.setState({\n    ammoniaPlot: ammonia,\n\n  })\n}\n\nammoniaOff = () => {\n  let ammonia = \"null\";\n  this.setState({\n    ammoniaPlot: ammonia,\n\n  })\n\n}\n\n DOSort = (a, b, order) => {\n   let dataList = this.state.dataList;   // order is desc or asc\n  if (order === 'desc') {\n    return a.DOResult - b.DOResult;\n  } else {\n    return b.DOResult - a.DOResult;\n  }\n}\n\npHSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.pHResult - b.pHResult;\n } else {\n   return b.pHResult - a.pHResult;\n }\n}\nnitrateSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.nitrateResult - b.nitrateResult;\n } else {\n   return b.nitrateResult - a.nitrateResult;\n }\n}\nnitriteSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.nitriteResult - b.nitriteResult;\n } else {\n   return b.nitriteResult - a.nitriteResult;\n }\n}\nammoniaSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.ammoniaResult - b.ammoniaResult;\n } else {\n   return b.ammoniaResult - a.ammoniaResult;\n }\n}\nturbiditySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.turbidityResult - b.turbidityResult;\n } else {\n   return b.turbidityResult - a.turbidityResult;\n }\n}\ntssSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.TSSResult - b.TSSResult;\n } else {\n   return b.TSSResult - a.TSSResult;\n }\n}\n\nonClickProductSelected(row, isSelected, e) {\n  let rowStr = '';\n  let id = \"datafield='id'\";\n  for (const prop in row) {\n    rowStr += id;\n  }\n\n  alert(`is selected: ${id}, ${rowStr}`);\n}\n\ncellButton(row, isSelected, e, id) {\n  return (\n    <TiPencil type=\"button\"\n    onClick={() => this.fillStates(`${isSelected.id}`)}>\n      Click me\n    </TiPencil>\n  )\n}\n\nfilter = (url) => {\n\n\n\n  domtoimage.toBlob(document.getElementById('my-node'))\n      .then((blob) => {\n\n          console.log(blob);\n          const blobUrl = URL.createObjectURL(blob);\n\n          console.log(blobUrl);\n\n          this.setState({\n            blobUrl: blobUrl,\n          })\n\n      });\n\n\n}\n\n\n\n\n\n\n\n\n      render() {\n        function buttonFormatter(cell, row){\n  return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n}\n        return (\n    <div>\n\n      <Grid>\n        <Row>\n          <Row>\n            <Col xs={6} md={6}>\n          <h3>Daily Sample Logs</h3>\n\n          </Col>\n          <Col xs={6} md={6}>\n            <ButtonToolbar style={styles.topPad}>\n          <Button  onClick={() => this.fillEmpty()} eventKey={3} bsSize=\"large\">+ Create New Sample Log</Button>\n        </ButtonToolbar>\n          </Col>\n          </Row>\n          <Col xs={12} md={8}>\n            <button onClick={() => { this.pdfExportComponent.save(); }}>\n                            Export PDF\n                        </button>\n\n      <Tabs activeKey={this.state.key} onSelect={this.handleSelect} defaultActiveKey={1} id=\"uncontrolled-tab-example\">\n\n\n        <Tab eventKey={1} title=\"+ Daily Samples\">\n          <Grid>\n\n          <Row style={styles.topPad}>\n\n\n            <Col xs={10} md={10}>\n\n\n\n              <BootstrapTable\n              data={ this.state.dataList }\n\n\n              pagination>\n\n              <TableHeaderColumn dataField='sampleDate' isKey filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Sample Date</TableHeaderColumn>\n              <TableHeaderColumn dataField='operator' filter={ { type: 'RegexFilter', delay: 1000 }  }dataSort>Operator</TableHeaderColumn>\n              <TableHeaderColumn dataField='DOResult' filter={ { type: 'RegexFilter', delay: 1000 }  }dataSort sortFunc={ this.DOSort }>DO</TableHeaderColumn>\n              <TableHeaderColumn dataField='pHResult' filter={ { type: 'RegexFilter', delay: 1000 }  }dataSort sortFunc={ this.pHSort }>pH</TableHeaderColumn>\n              <TableHeaderColumn dataField='nitrateResult' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.nitrateSort }>Nitrate</TableHeaderColumn>\n              <TableHeaderColumn dataField='nitriteResult' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.nitriteSort }>Nitrite</TableHeaderColumn>\n              <TableHeaderColumn dataField='ammoniaResult' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.ammoniaSort }>Ammonia</TableHeaderColumn>\n              <TableHeaderColumn dataField='turbidityResult' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.turbiditySort }>Turbidity</TableHeaderColumn>\n              <TableHeaderColumn dataField='TSSResult' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.tssSort }>TSS</TableHeaderColumn>\n              <TableHeaderColumn\n              dataField='button'\n              dataFormat={this.cellButton.bind(this)}\n              />\n\n\n              </BootstrapTable>\n\n\n\n\n\n\n\n\n\n\n            </Col>\n          </Row>\n        </Grid>\n          </Tab>\n\n          <Tab eventKey={2} title=\"+ Graphs\">\n\n            <button onClick={(e) => this.filter()}>Test</button>\n\n\n\n\n            <div id=\"my-node\">\n            <LineChart\n              width={600} height={200} data={this.state.orders2} syncId=\"anyId\"\n              margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n          <CartesianGrid strokeDasharray=\"3 3\"/>\n          <XAxis dataKey=\"sampleDate\"/>\n          <YAxis/>\n          <Tooltip/>\n\n            <Line type=\"monotone\" dataKey=\"DOResult\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n         <Line type=\"monotone\" dataKey=\"nitrateResult\" stroke=\"#82ca9d\" />\n           <Line type=\"monotone\" dataKey=\"nitriteResult\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n        <Line type=\"monotone\" dataKey={this.state.ammoniaPlot} stroke=\"#82ca9d\" />\n        </LineChart>\n        <p>Maybe some other content</p>\n        <LineChart width={600} height={200} data={this.state.orders2} syncId=\"anyId\"\n              margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n          <CartesianGrid strokeDasharray=\"3 3\"/>\n          <XAxis dataKey=\"sampleDate\"/>\n          <YAxis/>\n          <Tooltip/>\n            <Line type=\"monotone\" dataKey=\"DOResult\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n         <Line type=\"monotone\" dataKey=\"nitrateResult\" stroke=\"#82ca9d\" />\n          <Brush />\n\n\n        </LineChart>\n        <AreaChart width={600} height={200} data={this.state.orders2} syncId=\"anyId\"\n              margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n          <CartesianGrid strokeDasharray=\"3 3\"/>\n          <XAxis dataKey=\"sampleDate\"/>\n          <YAxis/>\n          <Tooltip/>\n          <Area type='monotone' dataKey='DOResult' stroke='##8884d8' fill='##8884d8' />\n          <Area type='monotone' dataKey='nitrateResult' stroke='#82ca9d' fill='#82ca9d' />\n        </AreaChart>\n        </div>\n\n        <button onClick={this.ammoniaOn}>Ammonia On</button>\n        <button onClick={this.ammoniaOff}>Ammonia Off</button>\n\n\n\n\n\n\n          </Tab>\n\n\n\n\n      <Tab eventKey={3} >\n        <Grid>\n          <Row>\n            <Col xs={10} md={10}>\n        <section className='add-item'>\n          <form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col xs={4} sm={4} md={4}>\n                <h2>Daily Sample Log</h2>\n                </Col>\n                <Col xs={6} sm={6} md={6}>\n                <input  type=\"text\" name=\"operator\" placeholder=\"Operator Name?\" onChange={this.handleChange} value={this.state.operator} />\n                </Col>\n                </Row>\n                <hr></hr>\n                <Row>\n                  <Col xs={8} sm={8} md={8}>\n\n                    <Table striped bordered condensed hover>\n                    <thead>\n                    <tr>\n                    <th>Sample Date</th>\n                    <th>Sample Time</th>\n                    <th>Sample Location</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n\n                    <td><input type=\"date\" name=\"sampleDate\" placeholder=\"Date of Sample\" onChange={this.handleChange} value={this.state.sampleDate} />\n                    </td>\n                    <td><input type=\"time\" name=\"sampleTime\" placeholder=\"Time of Sample\" onChange={this.handleChange} value={this.state.sampleTime} /></td>\n                    <td><ButtonToolbar>\n                      <DropdownButton title={this.state.sampleLocation} id=\"dropdown-size-medium\">\n                        <MenuItem eventKey=\"1\" onSelect={this.sampleInfluent}>Influent</MenuItem>\n                        <MenuItem eventKey=\"2\" onSelect={this.sampleEffluent}>Effluent</MenuItem>\n                      </DropdownButton>\n                    </ButtonToolbar></td>\n                    </tr>\n\n                    </tbody>\n                    </Table>\n\n\n\n                </Col>\n\n\n\n\n                  </Row>\n                  <hr></hr>\n                    <Row>\n                      <Col xs={5} md={5}>\n                        <strong>Temperature (C)</strong>\n                        <Table striped bordered condensed hover>\n                      <thead>\n                        <tr>\n\n\n                          <th>Results (C)</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n\n\n                          <td><input type=\"number\" name=\"temperatureResult\" placeholder=\"Result\" onChange={this.handleChange} value={this.state.temperatureResult} /></td>\n                        </tr>\n\n\n                      </tbody>\n                    </Table>\n                    </Col>\n                    <Col xs={5} md={5} xsOffset={1} smOffset={1} mdOffset={1}>\n                      <strong>Conductivity (M/CM)</strong>\n                      <Table striped bordered condensed hover>\n                    <thead>\n                      <tr>\n\n\n                        <th>Results (M/CM)</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n\n\n                        <td><input type=\"number\" name=\"conductivityResult\" placeholder=\"Result\" onChange={this.handleChange} value={this.state.conductivityResult} /></td>\n                      </tr>\n\n\n                    </tbody>\n                  </Table>\n                  </Col>\n\n                      </Row>\n\n                      <hr></hr>\n                        <Row>\n                          <Col xs={5} md={5}>\n                            <strong>pH</strong>\n                            <Table striped bordered condensed hover>\n                          <thead>\n                            <tr>\n\n\n                              <th>Results</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr>\n\n\n                              <td><input type=\"number\" name=\"pHResult\" placeholder=\"Result\" onChange={this.handleChange} value={this.state.pHResult} /></td>\n                            </tr>\n\n\n                          </tbody>\n                        </Table>\n                        </Col>\n                        <Col xs={5} md={5} xsOffset={1} smOffset={1} mdOffset={1}>\n                          <strong>DO (mg/L)</strong>\n                          <Table striped bordered condensed hover>\n                        <thead>\n                          <tr>\n\n\n                            <th>Results (mg/L)</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n\n\n                            <td><input type=\"number\" name=\"DOResult\" placeholder=\"Result\" onChange={this.handleChange} value={this.state.DOResult} /></td>\n                          </tr>\n\n\n                        </tbody>\n                      </Table>\n                      </Col>\n\n                          </Row>\n                          <hr></hr>\n                            <Row>\n                              <Col xs={5} md={5}><h3>Nitrogen Samples</h3></Col>\n                            </Row>\n                              <Row>\n\n                              <Col xs={5} md={5}>\n\n                                <strong>Nitrate (mg/L)</strong>\n                                <Table striped bordered condensed hover>\n                              <thead>\n                                <tr>\n\n\n                                  <th>Results (mg/L)</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr>\n\n\n                                  <td><input type=\"number\" name=\"nitrateResult\" placeholder=\"Result\" onChange={this.handleChange} value={this.state.nitrateResult} /></td>\n                                </tr>\n\n\n                              </tbody>\n                            </Table>\n                            </Col>\n                            <Col xs={5} md={5} xsOffset={1} smOffset={1} mdOffset={1}>\n                              <strong>Nitrite (mg/L)</strong>\n                              <Table striped bordered condensed hover>\n                            <thead>\n                              <tr>\n\n\n                                <th>Results (mg/L)</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr>\n\n\n                                <td><input type=\"number\" name=\"nitriteResult\" placeholder=\"Result\" onChange={this.handleChange} value={this.state.nitriteResult} /></td>\n                              </tr>\n\n\n                            </tbody>\n                          </Table>\n                          </Col>\n\n                              </Row>\n                              <Row>\n                                <Col xs={5} md={5}>\n                                  <strong>Ammonia (mg/L)</strong>\n                                  <Table striped bordered condensed hover>\n                                <thead>\n                                  <tr>\n\n\n                                    <th>Results (mg/L)</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr>\n\n\n                                    <td><input type=\"number\" name=\"ammoniaResult\" placeholder=\"Result\" onChange={this.handleChange} value={this.state.ammoniaResult} /></td>\n                                  </tr>\n\n\n                                </tbody>\n                              </Table>\n                              </Col>\n                              <Col xs={5} md={5} xsOffset={1} smOffset={1} mdOffset={1}>\n                                <strong>Total Inorganic Nitrogen (mg/L)</strong>\n                                <Table striped bordered condensed hover>\n                              <thead>\n                                <tr>\n\n\n                                  <th>Results (mg/L)</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr>\n\n\n                                  <td> {this.state.totalInorganicNitrogen}</td>\n                                </tr>\n\n\n                              </tbody>\n                            </Table>\n                            </Col>\n\n                                </Row>\n\n\n\n\n                      <hr></hr>\n\n\n                        <Row>\n                          <Col xs={5} md={5}>\n                            <strong>Turbidity (NTU)</strong>\n                            <Table striped bordered condensed hover>\n                          <thead>\n                            <tr>\n\n\n                              <th>Results (NTU)</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr>\n\n\n                              <td><input type=\"number\" name=\"turbidityResult\" placeholder=\"Result\" onChange={this.handleChange} value={this.state.turbidityResult} /></td>\n                            </tr>\n\n\n                          </tbody>\n                        </Table>\n                        </Col>\n                        <Col xs={5} md={5} xsOffset={1} smOffset={1} mdOffset={1}>\n                          <strong>TSSResult (mg/L)</strong>\n                          <Table striped bordered condensed hover>\n                        <thead>\n                          <tr>\n\n\n                            <th>Results (mg/L)</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n\n\n                            <td><input type=\"number\" name=\"TSSResult\" placeholder=\"Result\" onChange={this.handleChange} value={this.state.TSSResult} /></td>\n                          </tr>\n\n\n                        </tbody>\n                      </Table>\n                      </Col>\n\n                          </Row>\n\n\n\n\n\n\n\n                <button>Add sample</button>\n              </form>\n        </section>\n        <button onClick={this.writeData}>Overwrite Data</button>\n        </Col>\n        </Row>\n\n        </Grid>\n      </Tab>\n      <Tab eventKey={5} title=\"test\">\n        <PDFExport          fileName={this.state.roundDate +' ' + 'Maintenance Round'}\n                            title=\"\"\n                            style={{\n\n                                padding: '100px'}}\n                            paperSize={'Letter'}\n                            forcePageBreak=\".page-break\"\n                            ref={(component) => this.pdfExportComponent = component}\n                        >\n                        <img src={this.state.blobUrl} />\n\n                      </PDFExport>\n\n\n        </Tab>\n\n\n\n    </Tabs>\n\n\n    </Col>\n    </Row>\n    </Grid>\n\n    </div>\n        )\n            }\n          }\n"]},"metadata":{},"sourceType":"module"}