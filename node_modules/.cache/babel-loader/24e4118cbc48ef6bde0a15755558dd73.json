{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, FormGroup, Checkbox, Grid, PageHeader, Jumbotron, NavItem, Modal, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { ChromePicker } from 'react-color';\nimport GoogleMapReact from 'google-map-react';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport { LineChart, LabelList, ResponsiveContainer, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Row, Col, Tabs, Card, Drawer, Menu, Icon, Button, Layout, Carousel } from 'antd';\n\nvar AnyReactComponent = function AnyReactComponent(_ref) {\n  var text = _ref.text;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, text);\n};\n\nvar TabPane = Tabs.TabPane;\nvar tabListNoTitle = [{\n  key: 'article',\n  tab: 'article'\n}, {\n  key: 'app',\n  tab: 'app'\n}, {\n  key: 'project',\n  tab: 'project'\n}];\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.imageFormatter = function (cell, row) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907\n        },\n        __self: this\n      }));\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    _this.tempColorChange = function (color) {\n      console.log(_this.state.color);\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"colors/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/colors/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          tempColor: color.hex\n        };\n        samplesRef.set(sample);\n\n        _this.setState({\n          tempColor: color.hex\n        });\n      });\n    };\n\n    _this.onTabChange = function (key, type) {\n      console.log(key, type);\n\n      _this.setState(_defineProperty({}, type, key));\n    };\n\n    _this.state = (_this$state = {\n      //The data that goes into the table showing weather data\n      weatherData: [],\n      iconData: [],\n      id: '',\n      key: 1,\n      currentCity: '',\n      currentTemp: '',\n      currentIcon: '',\n      currentDescription: '',\n      currentHumidity: '',\n      //checkbox status\n      checkboxState: true,\n      checkboxState1: true,\n      checkboxStatenitrogen: true,\n      checkboxStatephosphorus: true,\n      checkboxStatetds: true,\n      checkboxStatepH: true,\n      checkboxStatetss: true,\n      checkboxStatesalinity: true,\n      checkboxStateconductivity: true,\n      checkboxStatehardness: true,\n      checkboxStateturbidity: true,\n      checkboxStatedo: true,\n      //these are for the graphs\n      tempPlot: 'temp',\n      doPlot: 'do',\n      conductivityPlot: 'conductivity',\n      tdsPlot: 'tds',\n      salinityPlot: 'salinity',\n      pHPlot: 'pH',\n      turbidityPlot: 'turbidity',\n      nitrogenPlot: 'nitrogen',\n      phosphorusPlot: 'phosphorus',\n      totalHardnessPlot: 'totalHardness',\n      tssPlot: 'tss',\n      //this is the object array for the table\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      //averages\n      nitrogenAverage: [],\n      nitrogenAvg: '',\n      nitrogenLatest: '',\n      nitrogenGraph: [],\n      phosphorusAverage: [],\n      phosphorusAvg: '',\n      phosphorusGraph: [],\n      phoshporusLatest: '',\n      dissolvedOxygenAverage: [],\n      dissolvedOxygenAvg: '',\n      dissolvedOxygenGraph: [],\n      dissolvedOxygenLatest: '',\n      turbidityLatest: '',\n      turbidityAverage: [],\n      turbidityAvg: '',\n      turbidityGraph: [],\n      tssLatest: '',\n      tssAverage: [],\n      tssAvg: '',\n      tssGraph: [],\n      salinityLatest: '',\n      salinityAverage: [],\n      salinityAvg: '',\n      salinityGraph: []\n    }, _defineProperty(_this$state, \"key\", 'tab1'), _defineProperty(_this$state, \"noTitleKey\", 'app'), _defineProperty(_this$state, \"lakeName\", ''), _defineProperty(_this$state, \"locationCity\", ''), _defineProperty(_this$state, \"locationState\", ''), _defineProperty(_this$state, \"managementContact\", ''), _defineProperty(_this$state, \"hoaContact\", ''), _defineProperty(_this$state, \"managementContactNumber\", ''), _defineProperty(_this$state, \"hoaContactNumber\", ''), _defineProperty(_this$state, \"latitude\", ''), _defineProperty(_this$state, \"longitude\", ''), _this$state);\n    return _this;\n  } //async allows await to be used for API calls.  Without ASYNC an error will be called saying that await is a reserved word.\n  //ComponentDidMount runs over and over again\n\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var weatherData, city, temp, icon, description, humidity, api_callWeather, weatherResponse, symbol;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n                  var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n                  samplesRef.on('value', function (snapshot) {\n                    var dataList = snapshot.val();\n                    var filter = [];\n                    var orders = snapshot.val();\n                    var orders2 = snapshot.val();\n                    var orders3 = [snapshot.val()];\n                    console.log(orders3);\n                    var newState = [];\n                    var newState2 = [];\n                    var newState3 = [];\n                    var nitrogenAverage = [];\n                    var phosphorusAverage = [];\n                    var dissolvedOxygenAverage = [];\n                    var tssAverage = [];\n                    var turbidityAverage = [];\n                    var salinityAverage = [];\n\n                    for (var order in orders) {\n                      newState.push({\n                        id: order,\n                        sampleDate: orders[order].sampleDate,\n                        sampleTaker: orders[order].sampleTaker,\n                        temp: orders[order].temp,\n                        do: orders[order].do,\n                        conductivity: orders[order].conductivity,\n                        tds: orders[order].tds,\n                        salinity: orders[order].salinity,\n                        pH: orders[order].pH,\n                        turbidity: orders[order].turbidity,\n                        nitrogen: orders[order].nitrogen,\n                        phosphorus: orders[order].phosphorus,\n                        totalHardness: orders[order].totalHardness,\n                        tss: orders[order].tss,\n                        sampleNotes: orders[order].sampleNotes\n                      });\n                      newState2.push({\n                        id: order,\n                        sampleDate: orders[order].sampleDate,\n                        sampleTaker: orders[order].sampleTaker,\n                        temp: orders[order].temp,\n                        do: orders[order].do,\n                        conductivity: orders[order].conductivity,\n                        tds: orders[order].tds,\n                        salinity: orders[order].salinity,\n                        pH: orders[order].pH,\n                        turbidity: orders[order].turbidity,\n                        nitrogen: orders[order].nitrogen,\n                        phosphorus: orders[order].phosphorus,\n                        totalHardness: orders[order].totalHardness,\n                        tss: orders[order].tss,\n                        sampleNotes: orders[order].sampleNotes\n                      });\n                    }\n\n                    newState2.sort(function (a, b) {\n                      if (a.sampleDate === b.sampleDate) {\n                        return 0;\n                      }\n\n                      return a.sampleDate > b.sampleDate ? 1 : -1;\n                    });\n                    newState.sort(function (a, b) {\n                      if (b.sampleDate === a.sampleDate) {\n                        return 0;\n                      }\n\n                      return b.sampleDate > a.sampleDate ? 1 : -1;\n                    });\n\n                    _this2.setState({\n                      orders: newState,\n                      orders2: newState2,\n                      dataList: newState,\n                      color: _this2.state.color\n                    });\n\n                    console.log(orders2);\n                    snapshot.forEach(function (ss) {\n                      nitrogenAverage.push({\n                        nitrogen: ss.child('nitrogen').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      nitrogenAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        nitrogenAverage: nitrogenAverage\n                      });\n                    });\n                    console.log(nitrogenAverage);\n\n                    if (nitrogenAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (nitrogenAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var nitrogenData = [];\n\n                      for (var i = 0; i < nitrogenAverage.length; i++) {\n                        //push send this data to the back of the chartData variable above.\n                        nitrogenData.push(parseFloat(nitrogenAverage[i].nitrogen));\n                      }\n\n                      var nitrogenReverse2 = nitrogenAverage.reverse();\n                      var nitrogenGraph = [{\n                        nitrogen: nitrogenReverse2[0].nitrogen,\n                        date: nitrogenReverse2[0].date\n                      }];\n                      console.log(nitrogenGraph);\n                      var nitrogenReverse = nitrogenData.reverse();\n                      var nitrogen = ([nitrogenReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(nitrogenReverse[0]);\n\n                      _this2.setState({\n                        nitrogenLatest: nitrogenReverse[0],\n                        nitrogenAvg: nitrogen,\n                        nitrogenGraph: nitrogenGraph\n                      });\n                    }\n\n                    if (nitrogenAverage.length == 2) {\n                      var _nitrogenData = [];\n\n                      for (var _i = 0; _i < nitrogenAverage.length; _i++) {\n                        //push send this data to the back of the chartData variable above.\n                        _nitrogenData.push(parseFloat(nitrogenAverage[_i].nitrogen));\n                      }\n\n                      var _nitrogenReverse = nitrogenAverage.reverse();\n\n                      var _nitrogenGraph = [{\n                        nitrogen: _nitrogenReverse[1].nitrogen,\n                        date: _nitrogenReverse[1].date\n                      }, {\n                        nitrogen: _nitrogenReverse[0].nitrogen,\n                        date: _nitrogenReverse[0].date\n                      }];\n                      console.log(_nitrogenGraph);\n\n                      var _nitrogenReverse2 = _nitrogenData.reverse();\n\n                      var _nitrogen = ([_nitrogenReverse2[0], _nitrogenReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_nitrogenReverse2[0]);\n\n                      _this2.setState({\n                        nitrogenLatest: _nitrogenReverse2[0],\n                        nitrogenAvg: _nitrogen,\n                        nitrogenGraph: _nitrogenGraph\n                      });\n                    }\n\n                    if (nitrogenAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _nitrogenData2 = [];\n\n                      for (var _i2 = 0; _i2 < nitrogenAverage.length; _i2++) {\n                        //push send this data to the back of the chartData variable above.\n                        _nitrogenData2.push(parseFloat(nitrogenAverage[_i2].nitrogen));\n                      }\n\n                      var _nitrogenReverse3 = nitrogenAverage.reverse();\n\n                      var _nitrogenGraph2 = [{\n                        nitrogen: _nitrogenReverse3[2].nitrogen,\n                        date: _nitrogenReverse3[2].date\n                      }, {\n                        nitrogen: _nitrogenReverse3[1].nitrogen,\n                        date: _nitrogenReverse3[1].date\n                      }, {\n                        nitrogen: _nitrogenReverse3[0].nitrogen,\n                        date: _nitrogenReverse3[0].date\n                      }];\n                      console.log(_nitrogenGraph2);\n\n                      var _nitrogenReverse4 = _nitrogenData2.reverse();\n\n                      var _nitrogen2 = ([_nitrogenReverse4[0], _nitrogenReverse4[1], _nitrogenReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_nitrogenReverse4[0]);\n\n                      _this2.setState({\n                        nitrogenLatest: _nitrogenReverse4[0],\n                        nitrogenAvg: _nitrogen2,\n                        nitrogenGraph: _nitrogenGraph2\n                      });\n                    }\n\n                    snapshot.forEach(function (ss) {\n                      phosphorusAverage.push({\n                        phosphorus: ss.child('phosphorus').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      phosphorusAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        phosphorusAverage: phosphorusAverage\n                      });\n                    });\n                    console.log(phosphorusAverage);\n\n                    if (phosphorusAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (phosphorusAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var phosphorusData = [];\n\n                      for (var _i3 = 0; _i3 < phosphorusAverage.length; _i3++) {\n                        //push send this data to the back of the chartData variable above.\n                        phosphorusData.push(parseFloat(phosphorusAverage[_i3].phosphorus));\n                      }\n\n                      var phosphorusReverse2 = phosphorusAverage.reverse();\n                      var phosphorusGraph = [{\n                        phosphorus: phosphorusReverse2[0].phosphorus,\n                        date: phosphorusReverse2[0].date\n                      }];\n                      console.log(phosphorusGraph);\n                      var phosphorusReverse = phosphorusData.reverse();\n                      var phosphorus = ([phosphorusReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(phosphorusReverse[0]);\n\n                      _this2.setState({\n                        phosphorusLatest: phosphorusReverse[0],\n                        phosphorusAvg: phosphorus,\n                        phosphorusGraph: phosphorusGraph\n                      });\n                    }\n\n                    if (phosphorusAverage.length == 2) {\n                      var _phosphorusData = [];\n\n                      for (var _i4 = 0; _i4 < phosphorusAverage.length; _i4++) {\n                        //push send this data to the back of the chartData variable above.\n                        _phosphorusData.push(parseFloat(phosphorusAverage[_i4].phosphorus));\n                      }\n\n                      var _phosphorusReverse = phosphorusAverage.reverse();\n\n                      var _phosphorusGraph = [{\n                        phosphorus: _phosphorusReverse[1].phosphorus,\n                        date: _phosphorusReverse[1].date\n                      }, {\n                        phosphorus: _phosphorusReverse[0].phosphorus,\n                        date: _phosphorusReverse[0].date\n                      }];\n                      console.log(_phosphorusGraph);\n\n                      var _phosphorusReverse2 = _phosphorusData.reverse();\n\n                      var _phosphorus = ([_phosphorusReverse2[0], _phosphorusReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_phosphorusReverse2[0]);\n\n                      _this2.setState({\n                        phosphorusLatest: _phosphorusReverse2[0],\n                        phosphorusAvg: _phosphorus,\n                        phosphorusGraph: _phosphorusGraph\n                      });\n                    }\n\n                    if (phosphorusAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _phosphorusData2 = [];\n\n                      for (var _i5 = 0; _i5 < phosphorusAverage.length; _i5++) {\n                        //push send this data to the back of the chartData variable above.\n                        _phosphorusData2.push(parseFloat(phosphorusAverage[_i5].phosphorus));\n                      }\n\n                      var _phosphorusReverse3 = phosphorusAverage.reverse();\n\n                      var _phosphorusGraph2 = [{\n                        phosphorus: _phosphorusReverse3[2].phosphorus,\n                        date: _phosphorusReverse3[2].date\n                      }, {\n                        phosphorus: _phosphorusReverse3[1].phosphorus,\n                        date: _phosphorusReverse3[1].date\n                      }, {\n                        phosphorus: _phosphorusReverse3[0].phosphorus,\n                        date: _phosphorusReverse3[0].date\n                      }];\n                      console.log(_phosphorusGraph2);\n\n                      var _phosphorusReverse4 = _phosphorusData2.reverse();\n\n                      var _phosphorus2 = ([_phosphorusReverse4[0], _phosphorusReverse4[1], _phosphorusReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_phosphorusReverse4[0]);\n\n                      _this2.setState({\n                        phosphorusLatest: _phosphorusReverse4[0],\n                        phosphorusAvg: _phosphorus2,\n                        phosphorusGraph: _phosphorusGraph2\n                      });\n                    }\n\n                    snapshot.forEach(function (ss) {\n                      dissolvedOxygenAverage.push({\n                        do: ss.child('do').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      dissolvedOxygenAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        dissolvedOxygenAverage: dissolvedOxygenAverage\n                      });\n                    });\n                    console.log(dissolvedOxygenAverage);\n\n                    if (dissolvedOxygenAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (dissolvedOxygenAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var dissolvedoxygenData = [];\n\n                      for (var _i6 = 0; _i6 < dissolvedOxygenAverage.length; _i6++) {\n                        //push send this data to the back of the chartData variable above.\n                        dissolvedoxygenData.push(parseFloat(dissolvedOxygenAverage[_i6].do));\n                      }\n\n                      var dissolvedOxygenReverse2 = dissolvedOxygenAverage.reverse();\n                      var dissolvedOxygenGraph = [{\n                        do: dissolvedOxygenReverse2[0].do,\n                        date: dissolvedOxygenReverse2[0].date\n                      }];\n                      console.log(dissolvedOxygenGraph);\n                      var dissolvedOxygenReverse = dissolvedoxygenData.reverse();\n                      var dissolvedOxygen = ([dissolvedOxygenReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(dissolvedOxygenReverse[0]);\n\n                      _this2.setState({\n                        dissolvedOxygenLatest: dissolvedOxygenReverse[0],\n                        dissolvedOxygenAvg: dissolvedOxygen,\n                        dissolvedOxygenGraph: dissolvedOxygenGraph\n                      });\n                    }\n\n                    if (dissolvedOxygenAverage.length == 2) {\n                      console.log(\"do two things\");\n                      var _dissolvedoxygenData = [];\n\n                      for (var _i7 = 0; _i7 < dissolvedOxygenAverage.length; _i7++) {\n                        //push send this data to the back of the chartData variable above.\n                        _dissolvedoxygenData.push(parseFloat(dissolvedOxygenAverage[_i7].do));\n                      }\n\n                      var _dissolvedOxygenReverse = dissolvedOxygenAverage.reverse();\n\n                      var _dissolvedOxygenGraph = [{\n                        do: _dissolvedOxygenReverse[0].do,\n                        date: _dissolvedOxygenReverse[0].date\n                      }, {\n                        do: _dissolvedOxygenReverse[1].do,\n                        date: _dissolvedOxygenReverse[1].date\n                      }];\n                      console.log(_dissolvedOxygenGraph);\n\n                      var _dissolvedOxygenReverse2 = _dissolvedoxygenData.reverse();\n\n                      var _dissolvedOxygen = ([_dissolvedOxygenReverse2[0], _dissolvedOxygenReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_dissolvedOxygenReverse2[0]);\n\n                      _this2.setState({\n                        dissolvedOxygenLatest: _dissolvedOxygenReverse2[0],\n                        dissolvedOxygenAvg: _dissolvedOxygen,\n                        dissolvedOxygenGraph: _dissolvedOxygenGraph\n                      });\n                    }\n\n                    if (phosphorusAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _dissolvedoxygenData2 = [];\n\n                      for (var _i8 = 0; _i8 < dissolvedOxygenAverage.length; _i8++) {\n                        //push send this data to the back of the chartData variable above.\n                        _dissolvedoxygenData2.push(parseFloat(dissolvedOxygenAverage[_i8].do));\n                      }\n\n                      var _dissolvedOxygenReverse3 = dissolvedOxygenAverage.reverse();\n\n                      var _dissolvedOxygenGraph2 = [{\n                        do: _dissolvedOxygenReverse3[0].do,\n                        date: _dissolvedOxygenReverse3[0].date\n                      }, {\n                        do: _dissolvedOxygenReverse3[1].do,\n                        date: _dissolvedOxygenReverse3[1].date\n                      }, {\n                        do: _dissolvedOxygenReverse3[2].do,\n                        date: _dissolvedOxygenReverse3[2].date\n                      }];\n                      console.log(_dissolvedOxygenGraph2);\n\n                      var _dissolvedOxygenReverse4 = _dissolvedoxygenData2.reverse();\n\n                      var _dissolvedOxygen2 = ([_dissolvedOxygenReverse4[0], _dissolvedOxygenReverse4[1], _dissolvedOxygenReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_dissolvedOxygenReverse4[0]);\n\n                      _this2.setState({\n                        dissolvedOxygenLatest: _dissolvedOxygenReverse4[0],\n                        dissolvedOxygenAvg: _dissolvedOxygen2,\n                        dissolvedOxygenGraph: _dissolvedOxygenGraph2\n                      });\n                    }\n\n                    snapshot.forEach(function (ss) {\n                      salinityAverage.push({\n                        salinity: ss.child('salinity').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      salinityAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        salinityAverage: salinityAverage\n                      });\n                    });\n                    console.log(salinityAverage);\n\n                    if (salinityAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (salinityAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var salinityData = [];\n\n                      for (var _i9 = 0; _i9 < salinityAverage.length; _i9++) {\n                        //push send this data to the back of the chartData variable above.\n                        salinityData.push(parseFloat(salinityAverage[_i9].salinity));\n                      }\n\n                      var salinityReverse2 = salinityAverage.reverse();\n                      var salinityGraph = [{\n                        salinity: salinityReverse2[0].salinity,\n                        date: salinityReverse2[0].date\n                      }];\n                      console.log(salinityGraph);\n                      var salinityReverse = salinityData.reverse();\n                      var salinity = ([salinityReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(salinityReverse[0]);\n\n                      _this2.setState({\n                        salinityLatest: salinityReverse[0],\n                        salinityAvg: salinity,\n                        salinityGraph: salinityGraph\n                      });\n                    }\n\n                    if (salinityAverage.length == 2) {\n                      var _salinityData = [];\n\n                      for (var _i10 = 0; _i10 < salinityAverage.length; _i10++) {\n                        //push send this data to the back of the chartData variable above.\n                        _salinityData.push(parseFloat(salinityAverage[_i10].salinity));\n                      }\n\n                      var _salinityReverse = salinityAverage.reverse();\n\n                      var _salinityGraph = [{\n                        salinity: _salinityReverse[1].salinity,\n                        date: _salinityReverse[1].date\n                      }, {\n                        salinity: _salinityReverse[0].salinity,\n                        date: _salinityReverse[0].date\n                      }];\n                      console.log(_salinityGraph);\n\n                      var _salinityReverse2 = _salinityData.reverse();\n\n                      var _salinity = ([_salinityReverse2[0], _salinityReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_salinityReverse2[0]);\n\n                      _this2.setState({\n                        salinityLatest: _salinityReverse2[0],\n                        salinityAvg: _salinity,\n                        salinityGraph: _salinityGraph\n                      });\n                    }\n\n                    if (salinityAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _salinityData2 = [];\n\n                      for (var _i11 = 0; _i11 < salinityAverage.length; _i11++) {\n                        //push send this data to the back of the chartData variable above.\n                        _salinityData2.push(parseFloat(salinityAverage[_i11].salinity));\n                      }\n\n                      var _salinityReverse3 = salinityAverage.reverse();\n\n                      var _salinityGraph2 = [{\n                        salinity: _salinityReverse3[2].salinity,\n                        date: _salinityReverse3[2].date\n                      }, {\n                        salinity: _salinityReverse3[1].salinity,\n                        date: _salinityReverse3[1].date\n                      }, {\n                        salinity: _salinityReverse3[0].salinity,\n                        date: _salinityReverse3[0].date\n                      }];\n                      console.log(_salinityGraph2);\n\n                      var _salinityReverse4 = _salinityData2.reverse();\n\n                      var _salinity2 = ([_salinityReverse4[0], _salinityReverse4[1], _salinityReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_salinityReverse4[0]);\n\n                      _this2.setState({\n                        salinityLatest: _salinityReverse4[0],\n                        salinityAvg: _salinity2,\n                        salinityGraph: _salinityGraph2\n                      });\n                    }\n\n                    snapshot.forEach(function (ss) {\n                      turbidityAverage.push({\n                        turbidity: ss.child('turbidity').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      turbidityAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        turbidityAverage: turbidityAverage\n                      });\n                    });\n                    console.log(turbidityAverage);\n\n                    if (turbidityAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (turbidityAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var turbidityData = [];\n\n                      for (var _i12 = 0; _i12 < turbidityAverage.length; _i12++) {\n                        //push send this data to the back of the chartData variable above.\n                        turbidityData.push(parseFloat(turbidityAverage[_i12].turbidity));\n                      }\n\n                      var turbidityReverse2 = turbidityAverage.reverse();\n                      var turbidityGraph = [{\n                        turbidity: turbidityReverse2[0].turbidity,\n                        date: turbidityReverse2[0].date\n                      }];\n                      console.log(turbidityGraph);\n                      var turbidityReverse = turbidityData.reverse();\n                      var turbidity = ([turbidityReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(turbidityReverse[0]);\n\n                      _this2.setState({\n                        turbidityLatest: turbidityReverse[0],\n                        turbidityAvg: turbidity,\n                        turbidityGraph: turbidityGraph\n                      });\n                    }\n\n                    if (turbidityAverage.length == 2) {\n                      var _turbidityData = [];\n\n                      for (var _i13 = 0; _i13 < turbidityAverage.length; _i13++) {\n                        //push send this data to the back of the chartData variable above.\n                        _turbidityData.push(parseFloat(turbidityAverage[_i13].turbidity));\n                      }\n\n                      var _turbidityReverse = turbidityAverage.reverse();\n\n                      var _turbidityGraph = [{\n                        turbidity: _turbidityReverse[1].turbidity,\n                        date: _turbidityReverse[1].date\n                      }, {\n                        turbidity: _turbidityReverse[0].turbidity,\n                        date: _turbidityReverse[0].date\n                      }];\n                      console.log(_turbidityGraph);\n\n                      var _turbidityReverse2 = _turbidityData.reverse();\n\n                      var _turbidity = ([_turbidityReverse2[0], _turbidityReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_turbidityReverse2[0]);\n\n                      _this2.setState({\n                        turbidityLatest: _turbidityReverse2[0],\n                        turbidityAvg: _turbidity,\n                        turbidityGraph: _turbidityGraph\n                      });\n                    }\n\n                    if (turbidityAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _turbidityData2 = [];\n\n                      for (var _i14 = 0; _i14 < turbidityAverage.length; _i14++) {\n                        //push send this data to the back of the chartData variable above.\n                        _turbidityData2.push(parseFloat(turbidityAverage[_i14].turbidity));\n                      }\n\n                      var _turbidityReverse3 = turbidityAverage.reverse();\n\n                      var _turbidityGraph2 = [{\n                        turbidity: _turbidityReverse3[2].turbidity,\n                        date: _turbidityReverse3[2].date\n                      }, {\n                        turbidity: _turbidityReverse3[1].turbidity,\n                        date: _turbidityReverse3[1].date\n                      }, {\n                        turbidity: _turbidityReverse3[0].turbidity,\n                        date: _turbidityReverse3[0].date\n                      }];\n                      console.log(_turbidityGraph2);\n\n                      var _turbidityReverse4 = _turbidityData2.reverse();\n\n                      var _turbidity2 = ([_turbidityReverse4[0], _turbidityReverse4[1], _turbidityReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_turbidityReverse4[0]);\n\n                      _this2.setState({\n                        turbidityLatest: _turbidityReverse4[0],\n                        turbidityAvg: _turbidity2,\n                        turbidityGraph: _turbidityGraph2\n                      });\n                    }\n\n                    snapshot.forEach(function (ss) {\n                      tssAverage.push({\n                        tss: ss.child('tss').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      tssAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        tssAverage: tssAverage\n                      });\n                    });\n                    console.log(tssAverage);\n\n                    if (tssAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (tssAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var tssData = [];\n\n                      for (var _i15 = 0; _i15 < tssAverage.length; _i15++) {\n                        //push send this data to the back of the chartData variable above.\n                        tssData.push(parseFloat(tssAverage[_i15].tss));\n                      }\n\n                      var tssReverse2 = tssAverage.reverse();\n                      var tssGraph = [{\n                        tss: tssReverse2[0].tss,\n                        date: tssReverse2[0].date\n                      }];\n                      console.log(tssGraph);\n                      var tssReverse = tssData.reverse();\n                      var tss = ([tssReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(tssReverse[0]);\n\n                      _this2.setState({\n                        tssLatest: tssReverse[0],\n                        tssAvg: tss,\n                        tssGraph: tssGraph\n                      });\n                    }\n\n                    if (tssAverage.length == 2) {\n                      var _tssData = [];\n\n                      for (var _i16 = 0; _i16 < tssAverage.length; _i16++) {\n                        //push send this data to the back of the chartData variable above.\n                        _tssData.push(parseFloat(tssAverage[_i16].tss));\n                      }\n\n                      var _tssReverse = tssAverage.reverse();\n\n                      var _tssGraph = [{\n                        tss: _tssReverse[1].tss,\n                        date: _tssReverse[1].date\n                      }, {\n                        tss: _tssReverse[0].tss,\n                        date: _tssReverse[0].date\n                      }];\n                      console.log(_tssGraph);\n\n                      var _tssReverse2 = _tssData.reverse();\n\n                      var _tss = ([_tssReverse2[0], _tssReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_tssReverse2[0]);\n\n                      _this2.setState({\n                        tssLatest: _tssReverse2[0],\n                        tssAvg: _tss,\n                        tssGraph: _tssGraph\n                      });\n                    }\n\n                    if (tssAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _tssData2 = [];\n\n                      for (var _i17 = 0; _i17 < tssAverage.length; _i17++) {\n                        //push send this data to the back of the chartData variable above.\n                        _tssData2.push(parseFloat(tssAverage[_i17].tss));\n                      }\n\n                      var _tssReverse3 = tssAverage.reverse();\n\n                      var _tssGraph2 = [{\n                        tss: _tssReverse3[2].tss,\n                        date: _tssReverse3[2].date\n                      }, {\n                        tss: _tssReverse3[1].tss,\n                        date: _tssReverse3[1].date\n                      }, {\n                        tss: _tssReverse3[0].tss,\n                        date: _tssReverse3[0].date\n                      }];\n                      console.log(_tssGraph2);\n\n                      var _tssReverse4 = _tssData2.reverse();\n\n                      var _tss2 = ([_tssReverse4[0], _tssReverse4[1], _tssReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_tssReverse4[0]);\n\n                      _this2.setState({\n                        tssLatest: _tssReverse4[0],\n                        tssAvg: _tss2,\n                        tssGraph: _tssGraph2\n                      });\n                    }\n                  });\n                  var profileRef = fire.database().ref(\"profileInformation/\".concat(user.uid));\n                  profileRef.on('value', function (snapshot) {\n                    _this2.setState({\n                      lakeName: snapshot.child('lakeName').val(),\n                      locationCity: snapshot.child('locationCity').val(),\n                      locationState: snapshot.child('locationState').val(),\n                      managementContact: snapshot.child('managementContact').val(),\n                      hoaContact: snapshot.child('hoaContact').val(),\n                      managementContactNumber: snapshot.child('managementContactNumber').val(),\n                      hoaContactNumber: snapshot.child('hoaContactNumber').val(),\n                      latitude: snapshot.child('latitude').val(),\n                      longitude: snapshot.child('longitude').val()\n                    });\n                  });\n                  var colorsRef = fire.database().ref(\"colors/\".concat(user.uid));\n                  colorsRef.on('value', function (snapshot) {\n                    var colorList = snapshot.val();\n                    console.log(colorList);\n\n                    _this2.setState({\n                      tempColor: snapshot.child('tempColor').val()\n                    });\n                  });\n                });\n                weatherData = [];\n                city = '';\n                temp = '';\n                icon = '';\n                description = '';\n                humidity = '';\n                _context.next = 9;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(this.state.latitude, \"&lon=\").concat(this.state.longitude, \"&units=\", 'imperial', \"&appid=\", '30573b68170d7f4400c7ac9c1c671ccf'));\n\n              case 9:\n                api_callWeather = _context.sent;\n                _context.next = 12;\n                return api_callWeather.json();\n\n              case 12:\n                weatherResponse = _context.sent;\n                symbol = weatherResponse.weather[0].icon;\n                console.log(weatherResponse);\n                this.setState({\n                  currentCity: weatherResponse.name,\n                  currentTemp: weatherResponse.main.temp,\n                  currentIcon: 'http://openweathermap.org/img/w/' + weatherResponse.weather[0].icon + '.png',\n                  currentDescription: weatherResponse.weather[0].main,\n                  currentHumidity: weatherResponse.main.humidity\n                });\n                this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n                  var samplesRef = fire.database().ref(\"dailySamples/\".concat(user.uid));\n                  samplesRef.on('value', function (snapshot) {});\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"toggleNitrogen\",\n    value: function toggleNitrogen(event) {\n      this.setState({\n        checkboxState: !this.state.checkboxState\n      });\n      var checkboxState = this.state.checkboxState;\n\n      if (checkboxState) {\n        this.setState({\n          nitrogenPlot: ''\n        });\n      } else {\n        this.setState({\n          nitrogenPlot: 'nitrogen'\n        });\n      }\n    }\n  }, {\n    key: \"togglePhosphorus\",\n    value: function togglePhosphorus(event) {\n      this.setState({\n        checkboxStatephosphorus: !this.state.checkboxStatephosphorus\n      });\n      var checkboxState = this.state.checkboxStatephosphorus;\n\n      if (checkboxState) {\n        this.setState({\n          phosphorusPlot: ''\n        });\n      } else {\n        this.setState({\n          phosphorusPlot: 'phosphorus'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTemp\",\n    value: function toggleTemp(event) {\n      this.setState({\n        checkboxStatenitrogen: !this.state.checkboxStatenitrogen\n      });\n      var checkboxState = this.state.checkboxStatenitrogen;\n\n      if (checkboxState) {\n        this.setState({\n          tempPlot: ''\n        });\n      } else {\n        this.setState({\n          tempPlot: 'temp'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTDS\",\n    value: function toggleTDS(event) {\n      this.setState({\n        checkboxStatetds: !this.state.checkboxStatetds\n      });\n      var checkboxState = this.state.checkboxStatetds;\n\n      if (checkboxState) {\n        this.setState({\n          tdsPlot: ''\n        });\n      } else {\n        this.setState({\n          tdsPlot: 'tds'\n        });\n      }\n    }\n  }, {\n    key: \"togglepH\",\n    value: function togglepH(event) {\n      this.setState({\n        checkboxStatepH: !this.state.checkboxStatepH\n      });\n      var checkboxState = this.state.checkboxStatepH;\n\n      if (checkboxState) {\n        this.setState({\n          pHPlot: ''\n        });\n      } else {\n        this.setState({\n          pHPlot: 'pH'\n        });\n      }\n    }\n  }, {\n    key: \"toggletss\",\n    value: function toggletss(event) {\n      this.setState({\n        checkboxStatetss: !this.state.checkboxStatetss\n      });\n      var checkboxState = this.state.checkboxStatetss;\n\n      if (checkboxState) {\n        this.setState({\n          tssPlot: ''\n        });\n      } else {\n        this.setState({\n          tssPlot: 'tss'\n        });\n      }\n    }\n  }, {\n    key: \"togglesalinity\",\n    value: function togglesalinity(event) {\n      this.setState({\n        checkboxStatesalinity: !this.state.checkboxStatesalinity\n      });\n      var checkboxState = this.state.checkboxStatesalinity;\n\n      if (checkboxState) {\n        this.setState({\n          salinityPlot: ''\n        });\n      } else {\n        this.setState({\n          salinityPlot: 'salinity'\n        });\n      }\n    }\n  }, {\n    key: \"toggleHardness\",\n    value: function toggleHardness(event) {\n      this.setState({\n        checkboxStatehardness: !this.state.checkboxStatehardness\n      });\n      var checkboxState = this.state.checkboxStatehardness;\n\n      if (checkboxState) {\n        this.setState({\n          totalHardnessPlot: ''\n        });\n      } else {\n        this.setState({\n          totalHardnessPlot: 'totalHardness'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTurbidity\",\n    value: function toggleTurbidity(event) {\n      this.setState({\n        checkboxStateturbidity: !this.state.checkboxStateturbidity\n      });\n      var checkboxState = this.state.checkboxStateturbidity;\n\n      if (checkboxState) {\n        this.setState({\n          turbidityPlot: ''\n        });\n      } else {\n        this.setState({\n          turbidityPlot: 'turbidity'\n        });\n      }\n    }\n  }, {\n    key: \"toggleDO\",\n    value: function toggleDO(event) {\n      this.setState({\n        checkboxStatedo: !this.state.checkboxStatedo\n      });\n      var checkboxState = this.state.checkboxStatedo;\n\n      if (checkboxState) {\n        this.setState({\n          doPlot: ''\n        });\n      } else {\n        this.setState({\n          doPlot: 'do'\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var doCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleDO.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104\n        },\n        __self: this\n      }, \"DO\"));\n      var nitrogenCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        inline: true,\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleNitrogen.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116\n        },\n        __self: this\n      }, \"Nitrogen\"));\n      var phosphorusCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglePhosphorus.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1121\n        },\n        __self: this\n      }, \"Phosphorus\"));\n      var tempCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTemp.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126\n        },\n        __self: this\n      }, \"Temperature\"));\n      var tdsCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTDS.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131\n        },\n        __self: this\n      }, \"TDS\"));\n      var pHCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglepH.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136\n        },\n        __self: this\n      }, \"pH\"));\n      var tssCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggletss.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141\n        },\n        __self: this\n      }, \"TSS\"));\n      var salinityCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglesalinity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146\n        },\n        __self: this\n      }, \"Salinity\"));\n      var hardnessCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleHardness.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151\n        },\n        __self: this\n      }, \"Total Hardness\"));\n      var turbidityCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTurbidity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1156\n        },\n        __self: this\n      }, \"Turbidity\"));\n      var popover = {\n        position: 'absolute',\n        zIndex: '2'\n      };\n      var cover = {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      };\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          padding: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1178\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 18,\n        sm: 18,\n        md: 18,\n        lg: 18,\n        xl: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182\n        },\n        __self: this\n      }, \"Dashboard\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183\n        },\n        __self: this\n      }, this.state.lakeName)))))), React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          paddingTop: '15px',\n          paddingRight: '5px',\n          paddingLeft: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198\n        },\n        __self: this\n      }, this.state.currentCity), React.createElement(\"img\", {\n        style: {\n          width: '60px',\n          height: '60px'\n        },\n        src: this.state.currentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200\n        },\n        __self: this\n      }, this.state.currentDescription), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1201\n        },\n        __self: this\n      }, \"Temperature: \", this.state.currentTemp, \" F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202\n        },\n        __self: this\n      }, \"Humidity: \", this.state.currentHumidity, \"%\")))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 16,\n        lg: 16,\n        xl: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '29vh',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyAqe1Z8I94AcnNb3VsOam1tnUd_8WdubV4'\n        },\n        defaultCenter: this.props.center,\n        defaultZoom: this.props.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210\n        },\n        __self: this\n      }, React.createElement(AnyReactComponent, {\n        lat: 37.987636425563075,\n        lng: -121.63235758701154,\n        text: 'Summer Lake',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215\n        },\n        __self: this\n      }))))))), React.createElement(Row, {\n        style: {\n          backgroundColor: '#F0F0F0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1233\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        style: {\n          backgroundColor: 'black',\n          height: '0px',\n          border: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1234\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          padding: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1238\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1239\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0%',\n          left: '0%',\n          backgroundColor: 'lightBlue',\n          height: '100%',\n          width: '4%',\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1242\n        },\n        __self: this\n      }), React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1245\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1246\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1246\n        },\n        __self: this\n      }, \"NITROGEN\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1247\n        },\n        __self: this\n      }, \"LATEST SAMPLE\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1248\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1249\n        },\n        __self: this\n      }, this.state.nitrogenLatest, \" mg/L\")))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0%',\n          left: '0%',\n          backgroundColor: '#086788',\n          height: '100%',\n          width: '4%',\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255\n        },\n        __self: this\n      }), React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259\n        },\n        __self: this\n      }, \"PHOSPHORUS\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260\n        },\n        __self: this\n      }, \"LATEST SAMPLE\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262\n        },\n        __self: this\n      }, this.state.phosphorusLatest, \" mg/L\")))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1269\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0%',\n          left: '0%',\n          backgroundColor: '#F0C808',\n          height: '100%',\n          width: '4%',\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270\n        },\n        __self: this\n      }), React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1273\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1274\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1274\n        },\n        __self: this\n      }, \"DISSOLVED OXYGEN\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1275\n        },\n        __self: this\n      }, \"LATEST SAMPLE\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1276\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1277\n        },\n        __self: this\n      }, this.state.dissolvedOxygenLatest, \" mg/L\")))))), React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          paddingTop: '15px',\n          paddingRight: '5px',\n          paddingLeft: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1288\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1289\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1290\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0%',\n          left: '0%',\n          backgroundColor: '#5C80BC',\n          height: '100%',\n          width: '4%',\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1292\n        },\n        __self: this\n      }), React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1295\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1296\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1296\n        },\n        __self: this\n      }, \"TSS\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1297\n        },\n        __self: this\n      }, \"LATEST SAMPLE\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1298\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1299\n        },\n        __self: this\n      }, this.state.tssLatest, \" mg/L\")))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1304\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0%',\n          left: '0%',\n          backgroundColor: '#30323D',\n          height: '100%',\n          width: '4%',\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1305\n        },\n        __self: this\n      }), React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1308\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1309\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1309\n        },\n        __self: this\n      }, \"TURBIDITY\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1310\n        },\n        __self: this\n      }, \"LATEST SAMPLE\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1311\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1312\n        },\n        __self: this\n      }, this.state.turbidityLatest, \" mg/L\")))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1316\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1317\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0%',\n          left: '0%',\n          backgroundColor: '#CDD1C4',\n          height: '100%',\n          width: '4%',\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1318\n        },\n        __self: this\n      }), React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1321\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1322\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1322\n        },\n        __self: this\n      }, \"SALINITY\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1323\n        },\n        __self: this\n      }, \"LATEST SAMPLE\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1325\n        },\n        __self: this\n      }, this.state.salinityLatest, \" ppt\")))))), React.createElement(Row, {\n        style: {\n          backgroundColor: '#F0F0F0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1338\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        style: {\n          backgroundColor: 'black',\n          height: '0px',\n          border: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1340\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          paddingTop: '15px',\n          paddingRight: '5px',\n          paddingLeft: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1344\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1345\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1349\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1353\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Nutrients\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1354\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          paddingTop: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1355\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1356\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1358\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1358\n        },\n        __self: this\n      }, \"NITROGEN AND PHOSPHORUS\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1359\n        },\n        __self: this\n      }, \"18 MONTHS\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1360\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1364\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1365\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 10 / 3.0,\n        minHeight: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1366\n        },\n        __self: this\n      }, React.createElement(AreaChart, {\n        data: this.state.orders2,\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1367\n        },\n        __self: this\n      }, React.createElement(\"defs\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1369\n        },\n        __self: this\n      }, React.createElement(\"linearGradient\", {\n        id: \"colorUv\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1370\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#086788\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1371\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#086788\",\n        stopOpacity: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1372\n        },\n        __self: this\n      })), React.createElement(\"linearGradient\", {\n        id: \"colorPv\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1374\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#F0C808\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1375\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#F0C808\",\n        stopOpacity: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1376\n        },\n        __self: this\n      }))), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1379\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1380\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"6 6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1381\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1382\n        },\n        __self: this\n      }), React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"nitrogen\",\n        stroke: \"#086788\",\n        fillOpacity: 1,\n        fill: \"url(#colorUv)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1384\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"nitrogen\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1384\n        },\n        __self: this\n      })), React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"phosphorus\",\n        stroke: \"#F0C808\",\n        fillOpacity: 1,\n        fill: \"url(#colorPv)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1385\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"phosphorus\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1385\n        },\n        __self: this\n      })), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1386\n        },\n        __self: this\n      })))))), React.createElement(TabPane, {\n        tab: \"Salinity and TDS\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1394\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          paddingTop: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1395\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1396\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1398\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1398\n        },\n        __self: this\n      }, \"SALINITY AND TDS\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1399\n        },\n        __self: this\n      }, \"18 MONTHS\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1400\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1404\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1405\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 10 / 3.0,\n        minHeight: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1406\n        },\n        __self: this\n      }, React.createElement(AreaChart, {\n        data: this.state.orders2,\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1407\n        },\n        __self: this\n      }, React.createElement(\"defs\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1409\n        },\n        __self: this\n      }, React.createElement(\"linearGradient\", {\n        id: \"colorUv\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1410\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#086788\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1411\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#086788\",\n        stopOpacity: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1412\n        },\n        __self: this\n      })), React.createElement(\"linearGradient\", {\n        id: \"colorPv\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1414\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#F0C808\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1415\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#F0C808\",\n        stopOpacity: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1416\n        },\n        __self: this\n      }))), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1419\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        domain: [0, 10],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1420\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"6 6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1421\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1422\n        },\n        __self: this\n      }), React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"tds\",\n        stroke: \"#F0C808\",\n        fillOpacity: 1,\n        fill: \"url(#colorPv)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1424\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"tds\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1424\n        },\n        __self: this\n      })), React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"salinity\",\n        stroke: \"#086788\",\n        fillOpacity: 1,\n        fill: \"url(#colorUv)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1425\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"salinity\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1425\n        },\n        __self: this\n      })), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1427\n        },\n        __self: this\n      })))))), React.createElement(TabPane, {\n        tab: \"Turbidity and Dissolved Oxygen\",\n        key: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1437\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          paddingTop: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1438\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1439\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1441\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1441\n        },\n        __self: this\n      }, \"TURBIDITY AND DISSOLVED OXYGEN\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1442\n        },\n        __self: this\n      }, \"18 MONTHS\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1443\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1447\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1448\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 10 / 3.0,\n        minHeight: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1449\n        },\n        __self: this\n      }, React.createElement(AreaChart, {\n        data: this.state.orders2,\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1450\n        },\n        __self: this\n      }, React.createElement(\"defs\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1452\n        },\n        __self: this\n      }, React.createElement(\"linearGradient\", {\n        id: \"colorTurbidity\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1453\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#809848\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#809848\",\n        stopOpacity: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1455\n        },\n        __self: this\n      })), React.createElement(\"linearGradient\", {\n        id: \"colorDO\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1457\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#40798C\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1458\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#40798C\",\n        stopOpacity: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1459\n        },\n        __self: this\n      }))), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"6 6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1464\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1465\n        },\n        __self: this\n      }), React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"turbidity\",\n        stroke: \"#809848\",\n        fillOpacity: 1,\n        fill: \"url(#colorTurbidity)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1467\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"turbidity\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1467\n        },\n        __self: this\n      })), React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"do\",\n        stroke: \"#40798C\",\n        fillOpacity: 1,\n        fill: \"url(#colorDO)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1468\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"do\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1468\n        },\n        __self: this\n      })), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1470\n        },\n        __self: this\n      }))))))))))), React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          paddingTop: '15px',\n          paddingRight: '5px',\n          paddingLeft: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1498\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1499\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1500\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1505\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1506\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1508\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1508\n        },\n        __self: this\n      }, \"NITROGEN\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1509\n        },\n        __self: this\n      }, \"LAST 3 MONTHS\"), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1510\n        },\n        __self: this\n      }, \"AVERAGE\")), React.createElement(Col, {\n        span: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1513\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px',\n          paddingTop: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1515\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1515\n        },\n        __self: this\n      }, this.state.nitrogenAvg, \"mg/L\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1520\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1521\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1522\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1528\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1529\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 5 / 3.0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1531\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        data: this.state.nitrogenGraph,\n        margin: {\n          top: 20,\n          right: 0,\n          left: 0,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1532\n        },\n        __self: this\n      }, React.createElement(\"defs\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1534\n        },\n        __self: this\n      }, React.createElement(\"linearGradient\", {\n        id: \"colorBlue\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1535\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#086788\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1536\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#086788\",\n        stopOpacity: 0.3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1537\n        },\n        __self: this\n      }))), React.createElement(XAxis, {\n        dataKey: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1541\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1543\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        barSize: 30,\n        dataKey: \"nitrogen\",\n        fillOpacity: 1,\n        fill: \"url(#colorBlue)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1545\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"nitrogen\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1546\n        },\n        __self: this\n      })))))))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1555\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1556\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1558\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1561\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1561\n        },\n        __self: this\n      }, \"PHOSPHORUS\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1562\n        },\n        __self: this\n      }, \"LAST 3 MONTHS\"), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1563\n        },\n        __self: this\n      }, \"AVERAGE\")), React.createElement(Col, {\n        span: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1566\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px',\n          paddingTop: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1568\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1568\n        },\n        __self: this\n      }, this.state.phosphorusAvg, \"mg/L\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1574\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1575\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1576\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1581\n        },\n        __self: this\n      }, \" \", React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1581\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 5 / 3.0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1582\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        data: this.state.phosphorusGraph,\n        margin: {\n          top: 20,\n          right: 0,\n          left: 0,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1583\n        },\n        __self: this\n      }, React.createElement(\"defs\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1585\n        },\n        __self: this\n      }, React.createElement(\"linearGradient\", {\n        id: \"colorYellow\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1586\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#F0C808\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1587\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#F0C808\",\n        stopOpacity: 0.3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1588\n        },\n        __self: this\n      }))), React.createElement(XAxis, {\n        dataKey: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1591\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1593\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        barSize: 30,\n        dataKey: \"phosphorus\",\n        fillOpacity: 1,\n        fill: \"url(#colorYellow)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1595\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"phosphorus\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1596\n        },\n        __self: this\n      })))))))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1604\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1605\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1608\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1609\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1611\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1611\n        },\n        __self: this\n      }, \"DISSOLVED O\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1611\n        },\n        __self: this\n      }, \"2\"))), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1612\n        },\n        __self: this\n      }, \"LAST 3 MONTHS\"), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1613\n        },\n        __self: this\n      }, \"AVERAGE\")), React.createElement(Col, {\n        span: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1616\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px',\n          paddingTop: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1618\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1618\n        },\n        __self: this\n      }, this.state.dissolvedOxygenAvg, \"mg/L\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1623\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1624\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1625\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1631\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1632\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 5 / 3.0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1635\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        data: this.state.dissolvedOxygenGraph,\n        margin: {\n          top: 20,\n          right: 0,\n          left: 0,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1636\n        },\n        __self: this\n      }, React.createElement(\"defs\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1638\n        },\n        __self: this\n      }, React.createElement(\"linearGradient\", {\n        id: \"colorRed\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1639\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#DD1C1A\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1640\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#DD1C1A\",\n        stopOpacity: 0.3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1641\n        },\n        __self: this\n      }))), React.createElement(XAxis, {\n        dataKey: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1644\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1646\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        barSize: 30,\n        dataKey: \"do\",\n        fillOpacity: 1,\n        fill: \"url(#colorRed)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1648\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"do\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1648\n        },\n        __self: this\n      })))))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.defaultProps = {\n  center: {\n    lat: 37.987636425563075,\n    lng: -121.63235758701154\n  },\n  zoom: 13\n};\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx"],"names":["React","Component","Navbar","Nav","FormGroup","Checkbox","Grid","PageHeader","Jumbotron","NavItem","Modal","Panel","Link","ReactDOM","FileSaver","jsPDF","domtoimage","fileDownload","Request","firebase","fire","ChromePicker","GoogleMapReact","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiBrush","TiArrowSortedUp","TiPencil","TiTrash","LineChart","LabelList","ResponsiveContainer","BarChart","Bar","Surface","ReferenceLine","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Row","Col","Tabs","Card","Drawer","Menu","Icon","Button","Layout","Carousel","AnyReactComponent","text","TabPane","tabListNoTitle","key","tab","Dashboard","props","imageFormatter","cell","row","handleClick","setState","displayColorPicker","state","handleClose","tempColorChange","color","console","log","removeAuthListener","auth","onAuthStateChanged","user","samplesRef","database","ref","uid","orderID","sample","tempColor","hex","set","onTabChange","type","weatherData","iconData","id","currentCity","currentTemp","currentIcon","currentDescription","currentHumidity","checkboxState","checkboxState1","checkboxStatenitrogen","checkboxStatephosphorus","checkboxStatetds","checkboxStatepH","checkboxStatetss","checkboxStatesalinity","checkboxStateconductivity","checkboxStatehardness","checkboxStateturbidity","checkboxStatedo","tempPlot","doPlot","conductivityPlot","tdsPlot","salinityPlot","pHPlot","turbidityPlot","nitrogenPlot","phosphorusPlot","totalHardnessPlot","tssPlot","samples","orders","orders2","dataList","filter","blobUrl","nitrogenAverage","nitrogenAvg","nitrogenLatest","nitrogenGraph","phosphorusAverage","phosphorusAvg","phosphorusGraph","phoshporusLatest","dissolvedOxygenAverage","dissolvedOxygenAvg","dissolvedOxygenGraph","dissolvedOxygenLatest","turbidityLatest","turbidityAverage","turbidityAvg","turbidityGraph","tssLatest","tssAverage","tssAvg","tssGraph","salinityLatest","salinityAverage","salinityAvg","salinityGraph","on","snapshot","val","orders3","newState","newState2","newState3","order","push","sampleDate","sampleTaker","temp","do","conductivity","tds","salinity","pH","turbidity","nitrogen","phosphorus","totalHardness","tss","sampleNotes","sort","a","b","forEach","ss","child","date","length","nitrogenData","i","parseFloat","nitrogenReverse2","reverse","nitrogenReverse","reduce","toFixed","phosphorusData","phosphorusReverse2","phosphorusReverse","phosphorusLatest","dissolvedoxygenData","dissolvedOxygenReverse2","dissolvedOxygenReverse","dissolvedOxygen","salinityData","salinityReverse2","salinityReverse","turbidityData","turbidityReverse2","turbidityReverse","tssData","tssReverse2","tssReverse","profileRef","lakeName","locationCity","locationState","managementContact","hoaContact","managementContactNumber","hoaContactNumber","latitude","longitude","colorsRef","colorList","city","icon","description","humidity","fetch","api_callWeather","json","weatherResponse","symbol","weather","name","main","event","preventDefault","doCheckbox","toggleDO","bind","nitrogenCheckbox","toggleNitrogen","phosphorusCheckbox","togglePhosphorus","tempCheckbox","toggleTemp","tdsCheckbox","toggleTDS","pHCheckbox","togglepH","tssCheckbox","toggletss","salinityCheckbox","togglesalinity","hardnessCheckbox","toggleHardness","turbidityCheckbox","toggleTurbidity","popover","position","zIndex","cover","top","right","bottom","left","background","padding","xs","sm","md","lg","paddingTop","paddingRight","paddingLeft","textAlign","width","height","center","zoom","backgroundColor","border","lineHeight","fontSize","defaultProps","lat","lng"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Nav, FormGroup, Checkbox, Grid, PageHeader, Jumbotron, NavItem, Modal, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\n\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { ChromePicker } from 'react-color';\nimport GoogleMapReact from 'google-map-react';\n\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport { LineChart, LabelList, ResponsiveContainer, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\nimport { Row, Col, Tabs, Card, Drawer, Menu, Icon, Button, Layout, Carousel } from 'antd';\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst TabPane = Tabs.TabPane;\n\nconst tabListNoTitle = [{\n  key: 'article',\n  tab: 'article',\n}, {\n  key: 'app',\n  tab: 'app',\n}, {\n  key: 'project',\n  tab: 'project',\n}];\n\nexport default class Dashboard extends Component {\n\n  static defaultProps = {\ncenter: {\n  lat: 37.987636425563075,\n  lng: -121.63235758701154\n},\nzoom: 13\n};\n\n\n\n\n  constructor(props) {\n      super(props);\n\n\n\n      this.state = {\n\n        //The data that goes into the table showing weather data\n        weatherData: [],\n        iconData: [],\n\n        id: '',\n        key: 1,\n\n        currentCity: '',\n        currentTemp: '',\n        currentIcon: '',\n        currentDescription: '',\n        currentHumidity: '',\n\n        //checkbox status\n        checkboxState: true,\n        checkboxState1: true,\n        checkboxStatenitrogen: true,\n        checkboxStatephosphorus: true,\n        checkboxStatetds: true,\n        checkboxStatepH: true,\n        checkboxStatetss: true,\n        checkboxStatesalinity: true,\n        checkboxStateconductivity: true,\n        checkboxStatehardness: true,\n        checkboxStateturbidity: true,\n        checkboxStatedo: true,\n\n        //these are for the graphs\n        tempPlot: 'temp',\n        doPlot: 'do',\n        conductivityPlot: 'conductivity',\n        tdsPlot: 'tds',\n        salinityPlot: 'salinity',\n        pHPlot: 'pH',\n        turbidityPlot: 'turbidity',\n        nitrogenPlot: 'nitrogen',\n        phosphorusPlot: 'phosphorus',\n        totalHardnessPlot: 'totalHardness',\n        tssPlot: 'tss',\n\n        //this is the object array for the table\n        samples: [],\n        orders: [],\n        orders2: [],\n        dataList: [],\n        filter: \"\",\n        blobUrl: null,\n\n        //averages\n        nitrogenAverage: [],\n        nitrogenAvg: '',\n        nitrogenLatest: '',\n        nitrogenGraph: [],\n        phosphorusAverage: [],\n        phosphorusAvg: '',\n        phosphorusGraph: [],\n        phoshporusLatest: '',\n        dissolvedOxygenAverage: [],\n        dissolvedOxygenAvg: '',\n        dissolvedOxygenGraph: [],\n        dissolvedOxygenLatest: '',\n\n        turbidityLatest: '',\n        turbidityAverage: [],\n        turbidityAvg: '',\n        turbidityGraph: [],\n        tssLatest: '',\n        tssAverage: [],\n        tssAvg: '',\n        tssGraph: [],\n        salinityLatest: '',\n        salinityAverage: [],\n        salinityAvg: '',\n        salinityGraph: [],\n\n        key: 'tab1',\n        noTitleKey: 'app',\n\n        //Inputs for Profile Page\n        lakeName: '',\n        locationCity: '',\n        locationState: '',\n        managementContact: '',\n        hoaContact: '',\n        managementContactNumber: '',\n        hoaContactNumber: '',\n        latitude: '',\n        longitude: '',\n\n\n\n      }\n\n    }\n\n\n\n\n\n\n    //async allows await to be used for API calls.  Without ASYNC an error will be called saying that await is a reserved word.\n\n    //ComponentDidMount runs over and over again\n\n  async componentDidMount() {\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n      samplesRef.on('value', (snapshot) => {\n\n\n        let dataList = snapshot.val();\n        let filter = [];\n        let orders = snapshot.val();\n\n        let orders2 = snapshot.val();\n        let orders3 = [snapshot.val()]\n        console.log(orders3);\n\n        let newState = [];\n        let newState2 = [];\n        let newState3 = [];\n\n        let nitrogenAverage = [];\n        let phosphorusAverage = [];\n        let dissolvedOxygenAverage = [];\n        let tssAverage = [];\n        let turbidityAverage = [];\n        let salinityAverage = [];\n\n\n\n\n\n\n\n      for (let order in orders) {\n        newState.push({\n          id: order,\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n          sampleNotes: orders[order].sampleNotes,\n        });\n        newState2.push({\n          id: order,\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n          sampleNotes: orders[order].sampleNotes,\n        });\n\n\n\n\n      }\n\n      newState2.sort(function(a, b) {\n\n        if (a.sampleDate === b.sampleDate) {\n          return 0;\n        }\n        return a.sampleDate > b.sampleDate ? 1 : -1;\n    });\n    newState.sort(function(a, b) {\n\n      if (b.sampleDate === a.sampleDate) {\n        return 0;\n      }\n      return b.sampleDate > a.sampleDate ? 1 : -1;\n  });\n\n\n\n      this.setState({\n        orders: newState,\n        orders2: newState2,\n        dataList: newState,\n        color: this.state.color,\n      });\n      console.log(orders2)\n\n      snapshot.forEach(ss => {\n          nitrogenAverage.push({nitrogen: ss.child('nitrogen').val(), date: ss.child('sampleDate').val()} );\n          nitrogenAverage.sort(function(a, b) {\n            if (a.date === b.date) {\n              return 0;\n            }\n            return a.date > b.date ? 1 : -1;\n        });\n          this.setState({\n            nitrogenAverage: (nitrogenAverage),\n          })\n        });\n        console.log(nitrogenAverage);\n        if (nitrogenAverage.length == 0) {\n          console.log(\"do nothing\")\n        }\n        if (nitrogenAverage.length == 1) {\n          console.log(\"do one thing\")\n          let nitrogenData = [];\n          for (let i=0; i < nitrogenAverage.length; i++) {\n          //push send this data to the back of the chartData variable above.\n          nitrogenData.push(parseFloat(nitrogenAverage[i].nitrogen));\n\n        }\n\n          let nitrogenReverse2 = nitrogenAverage.reverse();\n          let nitrogenGraph = ([{nitrogen: nitrogenReverse2[0].nitrogen, date: nitrogenReverse2[0].date} ]);\n          console.log(nitrogenGraph)\n\n          let nitrogenReverse = nitrogenData.reverse();\n          let nitrogen = ([nitrogenReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n          console.log(nitrogenReverse[0])\n          this.setState({\n            nitrogenLatest: nitrogenReverse[0],\n            nitrogenAvg: nitrogen,\n            nitrogenGraph: nitrogenGraph,\n          })\n        }\n        if (nitrogenAverage.length == 2) {\n          let nitrogenData = [];\n          for (let i=0; i < nitrogenAverage.length; i++) {\n          //push send this data to the back of the chartData variable above.\n          nitrogenData.push(parseFloat(nitrogenAverage[i].nitrogen));\n\n        }\n\n\n        let nitrogenReverse2 = nitrogenAverage.reverse();\n\n\n        let nitrogenGraph = ([{nitrogen: nitrogenReverse2[1].nitrogen, date: nitrogenReverse2[1].date}, {nitrogen: nitrogenReverse2[0].nitrogen, date: nitrogenReverse2[0].date} ]);\n        console.log(nitrogenGraph)\n\n\n\n\n          let nitrogenReverse = nitrogenData.reverse();\n          let nitrogen = ([nitrogenReverse[0], nitrogenReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n          console.log(nitrogenReverse[0])\n          this.setState({\n            nitrogenLatest: nitrogenReverse[0],\n            nitrogenAvg: nitrogen,\n            nitrogenGraph: nitrogenGraph,\n          })\n        }\n        if (nitrogenAverage.length > 2) {\n          console.log(\"do one three things or more\")\n          let nitrogenData = [];\n          for (let i=0; i < nitrogenAverage.length; i++) {\n          //push send this data to the back of the chartData variable above.\n          nitrogenData.push(parseFloat(nitrogenAverage[i].nitrogen));\n\n        }\n\n\n        let nitrogenReverse2 = nitrogenAverage.reverse();\n\n\n        let nitrogenGraph = ([{nitrogen: nitrogenReverse2[2].nitrogen, date: nitrogenReverse2[2].date}, {nitrogen: nitrogenReverse2[1].nitrogen, date: nitrogenReverse2[1].date}, {nitrogen: nitrogenReverse2[0].nitrogen, date: nitrogenReverse2[0].date} ]);\n        console.log(nitrogenGraph)\n\n        let nitrogenReverse = nitrogenData.reverse();\n        let nitrogen = ([nitrogenReverse[0], nitrogenReverse[1], nitrogenReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n        console.log(nitrogenReverse[0])\n        this.setState({\n          nitrogenLatest: nitrogenReverse[0],\n          nitrogenAvg: nitrogen,\n          nitrogenGraph: nitrogenGraph,\n        })\n        }\n        snapshot.forEach(ss => {\n            phosphorusAverage.push({phosphorus: ss.child('phosphorus').val(), date: ss.child('sampleDate').val()} );\n            phosphorusAverage.sort(function(a, b) {\n              if (a.date === b.date) {\n                return 0;\n              }\n              return a.date > b.date ? 1 : -1;\n          });\n            this.setState({\n              phosphorusAverage: (phosphorusAverage),\n            })\n          });\n          console.log(phosphorusAverage);\n          if (phosphorusAverage.length == 0) {\n            console.log(\"do nothing\")\n          }\n          if (phosphorusAverage.length == 1) {\n            console.log(\"do one thing\")\n            let phosphorusData = [];\n            for (let i=0; i < phosphorusAverage.length; i++) {\n            //push send this data to the back of the chartData variable above.\n            phosphorusData.push(parseFloat(phosphorusAverage[i].phosphorus));\n\n          }\n\n            let phosphorusReverse2 = phosphorusAverage.reverse();\n            let phosphorusGraph = ([{phosphorus: phosphorusReverse2[0].phosphorus, date: phosphorusReverse2[0].date} ]);\n            console.log(phosphorusGraph)\n\n            let phosphorusReverse = phosphorusData.reverse();\n            let phosphorus = ([phosphorusReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n            console.log(phosphorusReverse[0])\n            this.setState({\n              phosphorusLatest: phosphorusReverse[0],\n              phosphorusAvg: phosphorus,\n              phosphorusGraph: phosphorusGraph,\n            })\n          }\n          if (phosphorusAverage.length == 2) {\n            let phosphorusData = [];\n            for (let i=0; i < phosphorusAverage.length; i++) {\n            //push send this data to the back of the chartData variable above.\n            phosphorusData.push(parseFloat(phosphorusAverage[i].phosphorus));\n\n          }\n\n\n          let phosphorusReverse2 = phosphorusAverage.reverse();\n\n\n          let phosphorusGraph = ([{phosphorus: phosphorusReverse2[1].phosphorus, date: phosphorusReverse2[1].date}, {phosphorus: phosphorusReverse2[0].phosphorus, date: phosphorusReverse2[0].date} ]);\n          console.log(phosphorusGraph)\n\n\n\n\n            let phosphorusReverse = phosphorusData.reverse();\n            let phosphorus = ([phosphorusReverse[0], phosphorusReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n            console.log(phosphorusReverse[0])\n            this.setState({\n              phosphorusLatest: phosphorusReverse[0],\n              phosphorusAvg: phosphorus,\n              phosphorusGraph: phosphorusGraph,\n            })\n          }\n          if (phosphorusAverage.length > 2) {\n            console.log(\"do one three things or more\")\n            let phosphorusData = [];\n            for (let i=0; i < phosphorusAverage.length; i++) {\n            //push send this data to the back of the chartData variable above.\n            phosphorusData.push(parseFloat(phosphorusAverage[i].phosphorus));\n\n          }\n\n\n          let phosphorusReverse2 = phosphorusAverage.reverse();\n\n\n          let phosphorusGraph = ([{phosphorus: phosphorusReverse2[2].phosphorus, date: phosphorusReverse2[2].date}, {phosphorus: phosphorusReverse2[1].phosphorus, date: phosphorusReverse2[1].date}, {phosphorus: phosphorusReverse2[0].phosphorus, date: phosphorusReverse2[0].date} ]);\n          console.log(phosphorusGraph)\n\n          let phosphorusReverse = phosphorusData.reverse();\n          let phosphorus = ([phosphorusReverse[0], phosphorusReverse[1], phosphorusReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n          console.log(phosphorusReverse[0])\n          this.setState({\n            phosphorusLatest: phosphorusReverse[0],\n            phosphorusAvg: phosphorus,\n            phosphorusGraph: phosphorusGraph,\n          })\n          }\n\n          snapshot.forEach(ss => {\n              dissolvedOxygenAverage.push({do: ss.child('do').val(), date: ss.child('sampleDate').val()} );\n              dissolvedOxygenAverage.sort(function(a, b) {\n                if (a.date === b.date) {\n                  return 0;\n                }\n                return a.date > b.date ? 1 : -1;\n            });\n              this.setState({\n                dissolvedOxygenAverage: (dissolvedOxygenAverage),\n              })\n            });\n            console.log(dissolvedOxygenAverage);\n            if (dissolvedOxygenAverage.length == 0) {\n              console.log(\"do nothing\")\n            }\n            if (dissolvedOxygenAverage.length == 1) {\n              console.log(\"do one thing\")\n              let dissolvedoxygenData = [];\n              for (let i=0; i < dissolvedOxygenAverage.length; i++) {\n              //push send this data to the back of the chartData variable above.\n              dissolvedoxygenData.push(parseFloat(dissolvedOxygenAverage[i].do));\n\n            }\n\n              let dissolvedOxygenReverse2 = dissolvedOxygenAverage.reverse();\n              let dissolvedOxygenGraph = ([{do: dissolvedOxygenReverse2[0].do, date: dissolvedOxygenReverse2[0].date} ]);\n              console.log(dissolvedOxygenGraph)\n\n              let dissolvedOxygenReverse = dissolvedoxygenData.reverse();\n              let dissolvedOxygen = ([dissolvedOxygenReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n              console.log(dissolvedOxygenReverse[0])\n              this.setState({\n                dissolvedOxygenLatest: dissolvedOxygenReverse[0],\n                dissolvedOxygenAvg: dissolvedOxygen,\n                dissolvedOxygenGraph: dissolvedOxygenGraph,\n              })\n            }\n            if (dissolvedOxygenAverage.length == 2) {\n              console.log(\"do two things\")\n              let dissolvedoxygenData = [];\n              for (let i=0; i < dissolvedOxygenAverage.length; i++) {\n              //push send this data to the back of the chartData variable above.\n              dissolvedoxygenData.push(parseFloat(dissolvedOxygenAverage[i].do));\n\n            }\n\n              let dissolvedOxygenReverse2 = dissolvedOxygenAverage.reverse();\n              let dissolvedOxygenGraph = ([{do: dissolvedOxygenReverse2[0].do, date: dissolvedOxygenReverse2[0].date}, {do: dissolvedOxygenReverse2[1].do, date: dissolvedOxygenReverse2[1].date} ]);\n              console.log(dissolvedOxygenGraph)\n\n              let dissolvedOxygenReverse = dissolvedoxygenData.reverse();\n              let dissolvedOxygen = ([dissolvedOxygenReverse[0], dissolvedOxygenReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n              console.log(dissolvedOxygenReverse[0])\n              this.setState({\n                dissolvedOxygenLatest: dissolvedOxygenReverse[0],\n                dissolvedOxygenAvg: dissolvedOxygen,\n                dissolvedOxygenGraph: dissolvedOxygenGraph,\n              })\n            }\n            if (phosphorusAverage.length > 2) {\n              console.log(\"do one three things or more\")\n              let dissolvedoxygenData = [];\n              for (let i=0; i < dissolvedOxygenAverage.length; i++) {\n              //push send this data to the back of the chartData variable above.\n              dissolvedoxygenData.push(parseFloat(dissolvedOxygenAverage[i].do));\n\n            }\n\n              let dissolvedOxygenReverse2 = dissolvedOxygenAverage.reverse();\n              let dissolvedOxygenGraph = ([{do: dissolvedOxygenReverse2[0].do, date: dissolvedOxygenReverse2[0].date}, {do: dissolvedOxygenReverse2[1].do, date: dissolvedOxygenReverse2[1].date}, {do: dissolvedOxygenReverse2[2].do, date: dissolvedOxygenReverse2[2].date} ]);\n              console.log(dissolvedOxygenGraph)\n\n              let dissolvedOxygenReverse = dissolvedoxygenData.reverse();\n              let dissolvedOxygen = ([dissolvedOxygenReverse[0], dissolvedOxygenReverse[1], dissolvedOxygenReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n              console.log(dissolvedOxygenReverse[0])\n              this.setState({\n                dissolvedOxygenLatest: dissolvedOxygenReverse[0],\n                dissolvedOxygenAvg: dissolvedOxygen,\n                dissolvedOxygenGraph: dissolvedOxygenGraph,\n              })\n\n            }\n\n            snapshot.forEach(ss => {\n                salinityAverage.push({salinity: ss.child('salinity').val(), date: ss.child('sampleDate').val()} );\n                salinityAverage.sort(function(a, b) {\n                  if (a.date === b.date) {\n                    return 0;\n                  }\n                  return a.date > b.date ? 1 : -1;\n              });\n                this.setState({\n                  salinityAverage: (salinityAverage),\n                })\n              });\n              console.log(salinityAverage);\n              if (salinityAverage.length == 0) {\n                console.log(\"do nothing\")\n              }\n              if (salinityAverage.length == 1) {\n                console.log(\"do one thing\")\n                let salinityData = [];\n                for (let i=0; i < salinityAverage.length; i++) {\n                //push send this data to the back of the chartData variable above.\n                salinityData.push(parseFloat(salinityAverage[i].salinity));\n\n              }\n\n                let salinityReverse2 = salinityAverage.reverse();\n                let salinityGraph = ([{salinity: salinityReverse2[0].salinity, date: salinityReverse2[0].date} ]);\n                console.log(salinityGraph)\n\n                let salinityReverse = salinityData.reverse();\n                let salinity = ([salinityReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n                console.log(salinityReverse[0])\n                this.setState({\n                  salinityLatest: salinityReverse[0],\n                  salinityAvg: salinity,\n                  salinityGraph: salinityGraph,\n                })\n              }\n              if (salinityAverage.length == 2) {\n                let salinityData = [];\n                for (let i=0; i < salinityAverage.length; i++) {\n                //push send this data to the back of the chartData variable above.\n                salinityData.push(parseFloat(salinityAverage[i].salinity));\n\n              }\n\n\n              let salinityReverse2 = salinityAverage.reverse();\n\n\n              let salinityGraph = ([{salinity: salinityReverse2[1].salinity, date: salinityReverse2[1].date}, {salinity: salinityReverse2[0].salinity, date: salinityReverse2[0].date} ]);\n              console.log(salinityGraph)\n\n\n\n\n                let salinityReverse = salinityData.reverse();\n                let salinity = ([salinityReverse[0], salinityReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n                console.log(salinityReverse[0])\n                this.setState({\n                  salinityLatest: salinityReverse[0],\n                  salinityAvg: salinity,\n                  salinityGraph: salinityGraph,\n                })\n              }\n              if (salinityAverage.length > 2) {\n                console.log(\"do one three things or more\")\n                let salinityData = [];\n                for (let i=0; i < salinityAverage.length; i++) {\n                //push send this data to the back of the chartData variable above.\n                salinityData.push(parseFloat(salinityAverage[i].salinity));\n\n              }\n\n\n              let salinityReverse2 = salinityAverage.reverse();\n\n\n              let salinityGraph = ([{salinity: salinityReverse2[2].salinity, date: salinityReverse2[2].date}, {salinity: salinityReverse2[1].salinity, date: salinityReverse2[1].date}, {salinity: salinityReverse2[0].salinity, date: salinityReverse2[0].date} ]);\n              console.log(salinityGraph)\n\n              let salinityReverse = salinityData.reverse();\n              let salinity = ([salinityReverse[0], salinityReverse[1], salinityReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n              console.log(salinityReverse[0])\n              this.setState({\n                salinityLatest: salinityReverse[0],\n                salinityAvg: salinity,\n                salinityGraph: salinityGraph,\n              })\n              }\n              snapshot.forEach(ss => {\n                  turbidityAverage.push({turbidity: ss.child('turbidity').val(), date: ss.child('sampleDate').val()} );\n                  turbidityAverage.sort(function(a, b) {\n                    if (a.date === b.date) {\n                      return 0;\n                    }\n                    return a.date > b.date ? 1 : -1;\n                });\n                  this.setState({\n                    turbidityAverage: (turbidityAverage),\n                  })\n                });\n                console.log(turbidityAverage);\n                if (turbidityAverage.length == 0) {\n                  console.log(\"do nothing\")\n                }\n                if (turbidityAverage.length == 1) {\n                  console.log(\"do one thing\")\n                  let turbidityData = [];\n                  for (let i=0; i < turbidityAverage.length; i++) {\n                  //push send this data to the back of the chartData variable above.\n                  turbidityData.push(parseFloat(turbidityAverage[i].turbidity));\n\n                }\n\n                  let turbidityReverse2 = turbidityAverage.reverse();\n                  let turbidityGraph = ([{turbidity: turbidityReverse2[0].turbidity, date: turbidityReverse2[0].date} ]);\n                  console.log(turbidityGraph)\n\n                  let turbidityReverse = turbidityData.reverse();\n                  let turbidity = ([turbidityReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n                  console.log(turbidityReverse[0])\n                  this.setState({\n                    turbidityLatest: turbidityReverse[0],\n                    turbidityAvg: turbidity,\n                    turbidityGraph: turbidityGraph,\n                  })\n                }\n                if (turbidityAverage.length == 2) {\n                  let turbidityData = [];\n                  for (let i=0; i < turbidityAverage.length; i++) {\n                  //push send this data to the back of the chartData variable above.\n                  turbidityData.push(parseFloat(turbidityAverage[i].turbidity));\n\n                }\n\n\n                let turbidityReverse2 = turbidityAverage.reverse();\n\n\n                let turbidityGraph = ([{turbidity: turbidityReverse2[1].turbidity, date: turbidityReverse2[1].date}, {turbidity: turbidityReverse2[0].turbidity, date: turbidityReverse2[0].date} ]);\n                console.log(turbidityGraph)\n\n\n\n\n                  let turbidityReverse = turbidityData.reverse();\n                  let turbidity = ([turbidityReverse[0], turbidityReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n                  console.log(turbidityReverse[0])\n                  this.setState({\n                    turbidityLatest: turbidityReverse[0],\n                    turbidityAvg: turbidity,\n                    turbidityGraph: turbidityGraph,\n                  })\n                }\n                if (turbidityAverage.length > 2) {\n                  console.log(\"do one three things or more\")\n                  let turbidityData = [];\n                  for (let i=0; i < turbidityAverage.length; i++) {\n                  //push send this data to the back of the chartData variable above.\n                  turbidityData.push(parseFloat(turbidityAverage[i].turbidity));\n\n                }\n\n\n                let turbidityReverse2 = turbidityAverage.reverse();\n\n\n                let turbidityGraph = ([{turbidity: turbidityReverse2[2].turbidity, date: turbidityReverse2[2].date}, {turbidity: turbidityReverse2[1].turbidity, date: turbidityReverse2[1].date}, {turbidity: turbidityReverse2[0].turbidity, date: turbidityReverse2[0].date} ]);\n                console.log(turbidityGraph)\n\n                let turbidityReverse = turbidityData.reverse();\n                let turbidity = ([turbidityReverse[0], turbidityReverse[1], turbidityReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n                console.log(turbidityReverse[0])\n                this.setState({\n                  turbidityLatest: turbidityReverse[0],\n                  turbidityAvg: turbidity,\n                  turbidityGraph: turbidityGraph,\n                })\n                }\n\n                snapshot.forEach(ss => {\n                    tssAverage.push({tss: ss.child('tss').val(), date: ss.child('sampleDate').val()} );\n                    tssAverage.sort(function(a, b) {\n                      if (a.date === b.date) {\n                        return 0;\n                      }\n                      return a.date > b.date ? 1 : -1;\n                  });\n                    this.setState({\n                      tssAverage: (tssAverage),\n                    })\n                  });\n                  console.log(tssAverage);\n                  if (tssAverage.length == 0) {\n                    console.log(\"do nothing\")\n                  }\n                  if (tssAverage.length == 1) {\n                    console.log(\"do one thing\")\n                    let tssData = [];\n                    for (let i=0; i < tssAverage.length; i++) {\n                    //push send this data to the back of the chartData variable above.\n                    tssData.push(parseFloat(tssAverage[i].tss));\n\n                  }\n\n                    let tssReverse2 = tssAverage.reverse();\n                    let tssGraph = ([{tss: tssReverse2[0].tss, date: tssReverse2[0].date} ]);\n                    console.log(tssGraph)\n\n                    let tssReverse = tssData.reverse();\n                    let tss = ([tssReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n                    console.log(tssReverse[0])\n                    this.setState({\n                      tssLatest: tssReverse[0],\n                      tssAvg: tss,\n                      tssGraph: tssGraph,\n                    })\n                  }\n                  if (tssAverage.length == 2) {\n                    let tssData = [];\n                    for (let i=0; i < tssAverage.length; i++) {\n                    //push send this data to the back of the chartData variable above.\n                    tssData.push(parseFloat(tssAverage[i].tss));\n\n                  }\n\n\n                  let tssReverse2 = tssAverage.reverse();\n\n\n                  let tssGraph = ([{tss: tssReverse2[1].tss, date: tssReverse2[1].date}, {tss: tssReverse2[0].tss, date: tssReverse2[0].date} ]);\n                  console.log(tssGraph)\n\n\n\n\n                    let tssReverse = tssData.reverse();\n                    let tss = ([tssReverse[0], tssReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n                    console.log(tssReverse[0])\n                    this.setState({\n                      tssLatest: tssReverse[0],\n                      tssAvg: tss,\n                      tssGraph: tssGraph,\n                    })\n                  }\n                  if (tssAverage.length > 2) {\n                    console.log(\"do one three things or more\")\n                    let tssData = [];\n                    for (let i=0; i < tssAverage.length; i++) {\n                    //push send this data to the back of the chartData variable above.\n                    tssData.push(parseFloat(tssAverage[i].tss));\n\n                  }\n\n\n                  let tssReverse2 = tssAverage.reverse();\n\n\n                  let tssGraph = ([{tss: tssReverse2[2].tss, date: tssReverse2[2].date}, {tss: tssReverse2[1].tss, date: tssReverse2[1].date}, {tss: tssReverse2[0].tss, date: tssReverse2[0].date} ]);\n                  console.log(tssGraph)\n\n                  let tssReverse = tssData.reverse();\n                  let tss = ([tssReverse[0], tssReverse[1], tssReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n                  console.log(tssReverse[0])\n                  this.setState({\n                    tssLatest: tssReverse[0],\n                    tssAvg: tss,\n                    tssGraph: tssGraph,\n                  })\n                  }\n\n\n\n\n\n\n\n\n\n    });\n    const profileRef = fire.database().ref(`profileInformation/${user.uid}`);\n    profileRef.on('value', (snapshot) => {\n\n\n    this.setState({\n      lakeName: snapshot.child('lakeName').val(),\n      locationCity: snapshot.child('locationCity').val(),\n      locationState: snapshot.child('locationState').val(),\n      managementContact: snapshot.child('managementContact').val(),\n      hoaContact: snapshot.child('hoaContact').val(),\n      managementContactNumber: snapshot.child('managementContactNumber').val(),\n      hoaContactNumber: snapshot.child('hoaContactNumber').val(),\n      latitude: snapshot.child('latitude').val(),\n      longitude: snapshot.child('longitude').val(),\n\n    });\n\n\n  });\n\n    const colorsRef = fire.database().ref(`colors/${user.uid}`);\n\n    colorsRef.on('value', (snapshot) => {\n      let colorList = snapshot.val();\n      console.log(colorList);\n      this.setState({\n        tempColor: snapshot.child('tempColor').val(),\n\n      });\n\n\n    });\n\n  });\n    let weatherData = [];\n    let city = '';\n    let temp = '';\n    let icon = '';\n    let description = '';\n    let humidity = '';\n\n    let api_callWeather =  await fetch(`http://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&units=${'imperial'}&appid=${'30573b68170d7f4400c7ac9c1c671ccf'}`);\n\n\n    let weatherResponse = await api_callWeather.json();\n\n    let symbol = weatherResponse.weather[0].icon;\n\n\n    console.log(weatherResponse)\n\n    this.setState({\n      currentCity: weatherResponse.name,\n      currentTemp: weatherResponse.main.temp,\n      currentIcon: 'http://openweathermap.org/img/w/' + weatherResponse.weather[0].icon + '.png',\n\n      currentDescription: weatherResponse.weather[0].main,\n      currentHumidity: weatherResponse.main.humidity,\n\n    })\n\n\n\n\n\n\n\n\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n      const samplesRef = fire.database().ref(`dailySamples/${user.uid}`);\n      samplesRef.on('value', (snapshot) => {\n\n\n    });\n  });\n  }\n\n\n\n   imageFormatter = (cell, row) => {\n      return (\n<span><img src={cell} /></span>\n)\n    }\n\n    toggleNitrogen(event) {\n        this.setState({\n          checkboxState: !this.state.checkboxState\n        });\n        const checkboxState = this.state.checkboxState;\n        if (checkboxState) {\n          this.setState({\n            nitrogenPlot: '',\n          })\n        } else {\n          this.setState({\n            nitrogenPlot: 'nitrogen',\n          })\n        }\n      }\n      togglePhosphorus(event) {\n          this.setState({\n            checkboxStatephosphorus: !this.state.checkboxStatephosphorus\n          });\n          const checkboxState = this.state.checkboxStatephosphorus;\n          if (checkboxState) {\n            this.setState({\n              phosphorusPlot: '',\n            })\n          } else {\n            this.setState({\n              phosphorusPlot: 'phosphorus',\n            })\n          }\n        }\n        toggleTemp(event) {\n            this.setState({\n              checkboxStatenitrogen: !this.state.checkboxStatenitrogen\n            });\n            const checkboxState = this.state.checkboxStatenitrogen;\n            if (checkboxState) {\n              this.setState({\n                tempPlot: '',\n              })\n            } else {\n              this.setState({\n                tempPlot: 'temp',\n              })\n            }\n          }\n          toggleTDS(event) {\n              this.setState({\n                checkboxStatetds: !this.state.checkboxStatetds\n              });\n              const checkboxState = this.state.checkboxStatetds;\n              if (checkboxState) {\n                this.setState({\n                  tdsPlot: '',\n                })\n              } else {\n                this.setState({\n                  tdsPlot: 'tds',\n                })\n              }\n            }\n            togglepH(event) {\n                this.setState({\n                  checkboxStatepH: !this.state.checkboxStatepH\n                });\n                const checkboxState = this.state.checkboxStatepH;\n                if (checkboxState) {\n                  this.setState({\n                    pHPlot: '',\n                  })\n                } else {\n                  this.setState({\n                    pHPlot: 'pH',\n                  })\n                }\n              }\n              toggletss(event) {\n                  this.setState({\n                    checkboxStatetss: !this.state.checkboxStatetss\n                  });\n                  const checkboxState = this.state.checkboxStatetss;\n                  if (checkboxState) {\n                    this.setState({\n                      tssPlot: '',\n                    })\n                  } else {\n                    this.setState({\n                      tssPlot: 'tss',\n                    })\n                  }\n                }\n                togglesalinity(event) {\n                    this.setState({\n                      checkboxStatesalinity: !this.state.checkboxStatesalinity\n                    });\n                    const checkboxState = this.state.checkboxStatesalinity;\n                    if (checkboxState) {\n                      this.setState({\n                        salinityPlot: '',\n                      })\n                    } else {\n                      this.setState({\n                        salinityPlot: 'salinity',\n                      })\n                    }\n                  }\n                  toggleHardness(event) {\n                      this.setState({\n                        checkboxStatehardness: !this.state.checkboxStatehardness\n                      });\n                      const checkboxState = this.state.checkboxStatehardness;\n                      if (checkboxState) {\n                        this.setState({\n                          totalHardnessPlot: '',\n                        })\n                      } else {\n                        this.setState({\n                          totalHardnessPlot: 'totalHardness',\n                        })\n                      }\n                    }\n                    toggleTurbidity(event) {\n                        this.setState({\n                          checkboxStateturbidity: !this.state.checkboxStateturbidity\n                        });\n                        const checkboxState = this.state.checkboxStateturbidity;\n                        if (checkboxState) {\n                          this.setState({\n                            turbidityPlot: '',\n                          })\n                        } else {\n                          this.setState({\n                            turbidityPlot: 'turbidity',\n                          })\n                        }\n                      }\n                      toggleDO(event) {\n                          this.setState({\n                            checkboxStatedo: !this.state.checkboxStatedo\n                          });\n                          const checkboxState = this.state.checkboxStatedo;\n                          if (checkboxState) {\n                            this.setState({\n                              doPlot: '',\n                            })\n                          } else {\n                            this.setState({\n                              doPlot: 'do',\n                            })\n                          }\n                        }\n\n                      handleClick = () => {\n                        this.setState({ displayColorPicker: !this.state.displayColorPicker })\n                      };\n\n                      handleClose = () => {\n                        this.setState({ displayColorPicker: false })\n                      };\n\n                      tempColorChange = (color) => {\n\n                          console.log(this.state.color);\n                          this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n                          const samplesRef = fire.database().ref(`colors/${user.uid}`);\n                          const orderID = fire.database().ref(`/colors/${user.uid}/${orderID}`);\n                          const sample = {\n                            tempColor: color.hex\n                          }\n                          samplesRef.set(sample);\n                          this.setState({\n                            tempColor: color.hex,\n                           });\n                          });\n                      }\n\n                      onSubmit(event) {\n                        event.preventDefault();\n                      }\n\n                      onTabChange = (key, type) => {\n     console.log(key, type);\n     this.setState({ [type]: key });\n   }\n\n  render() {\n\n    const doCheckbox = (\n      <span>\n        <input\n        type=\"checkbox\"\n        defaultChecked='true'\n        onClick={this.toggleDO.bind(this)}\n        />\n      <label>DO</label>\n      </span>\n    );\n\n    const nitrogenCheckbox = (\n      <span>\n        <input\n          inline\n        type=\"checkbox\"\n        defaultChecked='true'\n        onClick={this.toggleNitrogen.bind(this)}\n        />\n      <label>Nitrogen</label>\n      </span>\n    );\n    const phosphorusCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglePhosphorus.bind(this)}/>\n      <label>Phosphorus</label>\n      </span>\n    );\n    const tempCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTemp.bind(this)}/>\n      <label>Temperature</label>\n      </span>\n    );\n    const tdsCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTDS.bind(this)}/>\n      <label>TDS</label>\n      </span>\n    );\n    const pHCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglepH.bind(this)}/>\n      <label>pH</label>\n      </span>\n    );\n    const tssCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggletss.bind(this)}/>\n      <label>TSS</label>\n      </span>\n    );\n    const salinityCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglesalinity.bind(this)}/>\n      <label>Salinity</label>\n      </span>\n    );\n    const hardnessCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleHardness.bind(this)}/>\n      <label>Total Hardness</label>\n      </span>\n    );\n    const turbidityCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTurbidity.bind(this)}/>\n      <label>Turbidity</label>\n      </span>\n    );\n    const popover = {\n       position: 'absolute',\n       zIndex: '2',\n     }\n     const cover = {\n       position: 'fixed',\n       top: '0px',\n       right: '0px',\n       bottom: '0px',\n       left: '0px',\n     }\n\n\n\n    return (\n\n      <Layout>\n\n\n        <div style={{ background: '#F0F0F0', padding: '5px' }}>\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n          <div style={{position: 'relative'}}>\n        <Col xs={18} sm={18} md={18} lg={18} xl={18}>\n          <h1>Dashboard</h1>\n          <h3><b>{this.state.lakeName}</b></h3>\n        </Col>\n\n\n\n\n\n      </div>\n        </Row>\n        </div>\n        <div style={{ background: '#F0F0F0', paddingTop: '15px', paddingRight: '5px', paddingLeft: '5px' }}>\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n        <Col xs={24} sm={24} md={8} lg={8} xl={8}>\n         <Card  style={{textAlign: 'left'}} bordered={true} >\n           <div style={{textAlign: 'center'}}>\n           <h3>{this.state.currentCity}</h3>\n             <img style={{width: '60px', height: '60px'}} src={this.state.currentIcon} />\n             <h3>{this.state.currentDescription}</h3>\n             <p>Temperature: {this.state.currentTemp} F</p>\n             <p>Humidity: {this.state.currentHumidity}%</p>\n             </div>\n         </Card>\n        </Col>\n\n        <Col xs={24} sm={24} md={16} lg={16} xl={16}>\n         <Card  style={{textAlign: 'left'}} bordered={true} >\n           <div style={{ height: '29vh', width: '100%' }}>\n             <GoogleMapReact\n               bootstrapURLKeys={{ key: 'AIzaSyAqe1Z8I94AcnNb3VsOam1tnUd_8WdubV4'}}\n               defaultCenter={this.props.center}\n               defaultZoom={this.props.zoom}\n             >\n               <AnyReactComponent\n                 lat={37.987636425563075}\n                 lng={-121.63235758701154}\n                 text={'Summer Lake'}\n               />\n             </GoogleMapReact>\n           </div>\n         </Card>\n\n        </Col>\n\n\n        </Row>\n        </div>\n\n\n\n        <Row style={{backgroundColor: '#F0F0F0'}}>\n        <Col span={24}>\n        <hr style={{backgroundColor: 'black', height: '0px', border: 0}}></hr>\n        </Col>\n        </Row>\n\n        <div style={{ background: '#F0F0F0', padding: '5px' }}>\n    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n      <Col xs={24} sm={24} md={8} lg={8} xl={8}>\n        <div style={{position: 'relative'}}>\n          <div style={{ position: 'absolute',\n        top: '0%',\n        left: '0%', backgroundColor: 'lightBlue', height: '100%', width: '4%', zIndex: 1}} />\n      <Card  style={{textAlign: 'left'}} bordered={true}>\n          <p style={{lineHeight: '2px'}}><b>NITROGEN</b></p>\n          <p style={{lineHeight: '2px'}}>LATEST SAMPLE</p>\n          <hr></hr>\n          <h3>{this.state.nitrogenLatest} mg/L</h3>\n        </Card>\n        </div>\n      </Col>\n      <Col xs={24} sm={24} md={8} lg={8} xl={8}>\n        <div style={{position: 'relative'}}>\n          <div style={{ position: 'absolute',\n        top: '0%',\n        left: '0%', backgroundColor: '#086788', height: '100%', width: '4%', zIndex: 1}} />\n        <Card  style={{textAlign: 'left'}} bordered={true}>\n          <p style={{lineHeight: '2px'}}><b>PHOSPHORUS</b></p>\n          <p style={{lineHeight: '2px'}}>LATEST SAMPLE</p>\n          <hr></hr>\n          <h3>{this.state.phosphorusLatest} mg/L</h3>\n\n\n        </Card>\n        </div>\n      </Col>\n      <Col xs={24} sm={24} md={8} lg={8} xl={8}>\n        <div style={{position: 'relative'}}>\n          <div style={{ position: 'absolute',\n        top: '0%',\n        left: '0%', backgroundColor: '#F0C808', height: '100%', width: '4%', zIndex: 1}} />\n      <Card  style={{textAlign: 'left'}} bordered={true}>\n        <p style={{lineHeight: '2px'}}><b>DISSOLVED OXYGEN</b></p>\n        <p style={{lineHeight: '2px'}}>LATEST SAMPLE</p>\n          <hr></hr>\n          <h3>{this.state.dissolvedOxygenLatest} mg/L</h3>\n        </Card>\n        </div>\n      </Col>\n\n\n    </Row>\n  </div>\n\n\n\n  <div style={{ background: '#F0F0F0', paddingTop: '15px', paddingRight: '5px', paddingLeft: '5px'}}>\n<Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n<Col xs={24} sm={24} md={8} lg={8} xl={8}>\n  <div style={{position: 'relative'}}>\n    <div style={{ position: 'absolute',\n  top: '0%',\n  left: '0%', backgroundColor: '#5C80BC', height: '100%', width: '4%', zIndex: 1}} />\n  <Card  style={{textAlign: 'left'}} bordered={true}>\n    <p style={{lineHeight: '2px'}}><b>TSS</b></p>\n    <p style={{lineHeight: '2px'}}>LATEST SAMPLE</p>\n    <hr></hr>\n    <h3>{this.state.tssLatest} mg/L</h3>\n  </Card>\n  </div>\n</Col>\n<Col xs={24} sm={24} md={8} lg={8} xl={8}>\n  <div style={{position: 'relative'}}>\n    <div style={{ position: 'absolute',\n  top: '0%',\n  left: '0%', backgroundColor: '#30323D', height: '100%', width: '4%', zIndex: 1}} />\n  <Card  style={{textAlign: 'left'}} bordered={true}>\n    <p style={{lineHeight: '2px'}}><b>TURBIDITY</b></p>\n    <p style={{lineHeight: '2px'}}>LATEST SAMPLE</p>\n    <hr></hr>\n    <h3>{this.state.turbidityLatest} mg/L</h3>\n  </Card>\n  </div>\n</Col>\n<Col xs={24} sm={24} md={8} lg={8} xl={8}>\n  <div style={{position: 'relative'}}>\n    <div style={{ position: 'absolute',\n  top: '0%',\n  left: '0%', backgroundColor: '#CDD1C4', height: '100%', width: '4%', zIndex: 1}} />\n<Card  style={{textAlign: 'left'}} bordered={true}>\n  <p style={{lineHeight: '2px'}}><b>SALINITY</b></p>\n  <p style={{lineHeight: '2px'}}>LATEST SAMPLE</p>\n    <hr></hr>\n    <h3>{this.state.salinityLatest} ppt</h3>\n\n\n  </Card>\n  </div>\n</Col>\n\n\n</Row>\n</div>\n\n\n\n<Row style={{backgroundColor: '#F0F0F0'}}>\n<Col span={24}>\n<hr style={{backgroundColor: 'black', height: '0px', border: 0}}></hr>\n</Col>\n</Row>\n\n<div style={{ background: '#F0F0F0', paddingTop: '15px', paddingRight: '5px', paddingLeft: '5px' }}>\n<Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n<Col xs={24} sm={24} md={24} lg={24} xl={24}>\n\n\n      <Card\n\n\n      >\n      <Tabs defaultActiveKey=\"1\" >\n  <TabPane tab=\"Nutrients\" key=\"1\">\n    <Row style={{paddingTop: '15px'}}>\n    <Col span={24} >\n\n        <p style={{lineHeight: '2px'}}><b>NITROGEN AND PHOSPHORUS</b></p>\n        <p style={{lineHeight: '2px'}}>18 MONTHS</p>\n        <hr></hr>\n  </Col>\n</Row>\n\n    <Row>\n    <Col span={24}>\n      <ResponsiveContainer width=\"100%\" aspect={10/3.0} minHeight={200}>\n        <AreaChart data={this.state.orders2}\n  margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n  <defs>\n    <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#086788\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#086788\" stopOpacity={0}/>\n    </linearGradient>\n    <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#F0C808\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#F0C808\" stopOpacity={0}/>\n    </linearGradient>\n  </defs>\n  <XAxis dataKey=\"sampleDate\" />\n  <YAxis />\n  <CartesianGrid strokeDasharray=\"6 6\" />\n  <Tooltip />\n\n  <Area type=\"monotone\" dataKey=\"nitrogen\" stroke=\"#086788\" fillOpacity={1} fill=\"url(#colorUv)\" ><LabelList dataKey=\"nitrogen\" position=\"top\" /></Area>\n  <Area type=\"monotone\" dataKey=\"phosphorus\" stroke=\"#F0C808\" fillOpacity={1} fill=\"url(#colorPv)\"><LabelList dataKey=\"phosphorus\" position=\"top\" /></Area>\n  <Legend />\n</AreaChart>\n </ResponsiveContainer>\n\n</Col>\n</Row>\n\n  </TabPane>\n  <TabPane tab=\"Salinity and TDS\" key=\"2\">\n    <Row style={{paddingTop: '15px'}}>\n    <Col span={24}>\n\n        <p style={{lineHeight: '2px'}}><b>SALINITY AND TDS</b></p>\n        <p style={{lineHeight: '2px'}}>18 MONTHS</p>\n        <hr></hr>\n  </Col>\n</Row>\n\n    <Row>\n    <Col span={24}>\n      <ResponsiveContainer width=\"100%\" aspect={10/3.0} minHeight={200}>\n        <AreaChart data={this.state.orders2}\n  margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n  <defs>\n    <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#086788\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#086788\" stopOpacity={0}/>\n    </linearGradient>\n    <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#F0C808\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#F0C808\" stopOpacity={0}/>\n    </linearGradient>\n  </defs>\n  <XAxis dataKey=\"sampleDate\" />\n  <YAxis domain={[0, 10]}/>\n  <CartesianGrid strokeDasharray=\"6 6\" />\n  <Tooltip />\n\n  <Area type=\"monotone\" dataKey=\"tds\" stroke=\"#F0C808\" fillOpacity={1} fill=\"url(#colorPv)\"><LabelList dataKey=\"tds\" position=\"top\" /></Area>\n  <Area type=\"monotone\" dataKey=\"salinity\" stroke=\"#086788\" fillOpacity={1} fill=\"url(#colorUv)\" ><LabelList dataKey=\"salinity\" position=\"top\" /></Area>\n\n  <Legend />\n</AreaChart>\n </ResponsiveContainer>\n\n</Col>\n</Row>\n\n\n\n  </TabPane>\n  <TabPane tab=\"Turbidity and Dissolved Oxygen\" key=\"3\">\n    <Row style={{paddingTop: '15px'}}>\n    <Col span={24}>\n\n        <p style={{lineHeight: '2px'}}><b>TURBIDITY AND DISSOLVED OXYGEN</b></p>\n        <p style={{lineHeight: '2px'}}>18 MONTHS</p>\n        <hr></hr>\n  </Col>\n</Row>\n\n    <Row>\n    <Col span={24}>\n      <ResponsiveContainer width=\"100%\" aspect={10/3.0} minHeight={200}>\n        <AreaChart data={this.state.orders2}\n  margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n  <defs>\n    <linearGradient id=\"colorTurbidity\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#809848\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#809848\" stopOpacity={0}/>\n    </linearGradient>\n    <linearGradient id=\"colorDO\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor=\"#40798C\" stopOpacity={0.8}/>\n      <stop offset=\"95%\" stopColor=\"#40798C\" stopOpacity={0}/>\n    </linearGradient>\n  </defs>\n  <XAxis dataKey=\"sampleDate\" />\n  <YAxis />\n  <CartesianGrid strokeDasharray=\"6 6\" />\n  <Tooltip />\n\n  <Area type=\"monotone\" dataKey=\"turbidity\" stroke=\"#809848\" fillOpacity={1} fill=\"url(#colorTurbidity)\"><LabelList dataKey=\"turbidity\" position=\"top\" /></Area>\n  <Area type=\"monotone\" dataKey=\"do\" stroke=\"#40798C\" fillOpacity={1} fill=\"url(#colorDO)\" ><LabelList dataKey=\"do\" position=\"top\" /></Area>\n\n  <Legend />\n</AreaChart>\n </ResponsiveContainer>\n\n</Col>\n</Row>\n\n\n\n\n  </TabPane>\n</Tabs>\n\n      </Card>\n</Col>\n</Row>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n <div style={{ background: '#F0F0F0', paddingTop: '15px', paddingRight: '5px', paddingLeft: '5px' }}>\n<Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n<Col xs={24} sm={24} md={8} lg={8} xl={8}>\n\n<Card   bordered={true}>\n\n\n  <Row>\n  <Col span={15}>\n\n      <p style={{lineHeight: '2px'}}><b>NITROGEN</b></p>\n      <p style={{lineHeight: '2px'}}>LAST 3 MONTHS</p>\n      <p style={{lineHeight: '2px'}}>AVERAGE</p>\n\n</Col>\n<Col span={7}>\n\n    <p style={{lineHeight: '2px', paddingTop: '5px'}}><b style={{fontSize: '20px'}}>{this.state.nitrogenAvg}mg/L</b></p>\n\n\n</Col>\n\n<Row>\n<Col span={24}>\n<hr></hr>\n</Col>\n</Row>\n\n</Row>\n\n<Row>\n<Col span={24}>\n\n    <ResponsiveContainer  width='100%' aspect={5/3.0}>\n      <BarChart    data={this.state.nitrogenGraph}\n           margin={{top: 20, right: 0, left: 0, bottom: 5}}>\n           <defs>\n           <linearGradient id=\"colorBlue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n             <stop offset=\"5%\" stopColor=\"#086788\" stopOpacity={0.8}/>\n             <stop offset=\"95%\" stopColor=\"#086788\" stopOpacity={0.3}/>\n           </linearGradient>\n           </defs>\n\n      <XAxis dataKey=\"date\" />\n\n      <Tooltip/>\n\n      <Bar barSize={30} dataKey=\"nitrogen\" fillOpacity={1} fill=\"url(#colorBlue)\">\n      <LabelList dataKey=\"nitrogen\" position=\"top\" /></Bar>\n       </BarChart>\n       </ResponsiveContainer>\n     </Col>\n     </Row>\n</Card>\n</Col>\n\n\n<Col xs={24} sm={24} md={8} lg={8} xl={8}>\n<Card  bordered={true}>\n\n  <Row>\n  <Col span={15}>\n\n      <p style={{lineHeight: '2px'}}><b>PHOSPHORUS</b></p>\n      <p style={{lineHeight: '2px'}}>LAST 3 MONTHS</p>\n      <p style={{lineHeight: '2px'}}>AVERAGE</p>\n\n  </Col>\n  <Col span={7}>\n\n    <p style={{lineHeight: '2px', paddingTop: '5px'}}><b style={{fontSize: '20px'}}>{this.state.phosphorusAvg}mg/L</b></p>\n\n\n  </Col>\n\n  </Row>\n  <Row>\n  <Col span={24}>\n  <hr></hr>\n  </Col>\n</Row>\n\n\n  <Row> <Col span={24}>\n    <ResponsiveContainer  width='100%' aspect={5/3.0}>\n      <BarChart    data={this.state.phosphorusGraph}\n           margin={{top: 20, right: 0, left: 0, bottom: 5}}>\n           <defs>\n           <linearGradient id=\"colorYellow\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n             <stop offset=\"5%\" stopColor=\"#F0C808\" stopOpacity={0.8}/>\n             <stop offset=\"95%\" stopColor=\"#F0C808\" stopOpacity={0.3}/>\n           </linearGradient>\n           </defs>\n      <XAxis dataKey=\"date\"/>\n\n      <Tooltip/>\n\n      <Bar barSize={30} dataKey=\"phosphorus\" fillOpacity={1} fill=\"url(#colorYellow)\">\n      <LabelList dataKey=\"phosphorus\" position=\"top\" />\n    </Bar>\n       </BarChart>\n       </ResponsiveContainer>\n       </Col></Row>\n\n</Card>\n</Col>\n<Col xs={24} sm={24} md={8} lg={8} xl={8}>\n<Card   bordered={true}>\n\n\n  <Row>\n  <Col span={15}>\n\n      <p style={{lineHeight: '2px'}}><b>DISSOLVED O<sub>2</sub></b></p>\n      <p style={{lineHeight: '2px'}}>LAST 3 MONTHS</p>\n      <p style={{lineHeight: '2px'}}>AVERAGE</p>\n\n  </Col>\n  <Col span={7}>\n\n    <p style={{lineHeight: '2px', paddingTop: '5px'}}><b style={{fontSize: '20px'}}>{this.state.dissolvedOxygenAvg}mg/L</b></p>\n\n\n  </Col>\n\n  <Row>\n  <Col span={24}>\n  <hr></hr>\n  </Col>\n  </Row>\n\n  </Row>\n\n  <Row>\n  <Col span={24}>\n\n\n  <ResponsiveContainer  width='100%' aspect={5/3.0}>\n    <BarChart    data={this.state.dissolvedOxygenGraph}\n         margin={{top: 20, right: 0, left: 0, bottom: 5}}>\n         <defs>\n         <linearGradient id=\"colorRed\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n           <stop offset=\"5%\" stopColor=\"#DD1C1A\" stopOpacity={0.8}/>\n           <stop offset=\"95%\" stopColor=\"#DD1C1A\" stopOpacity={0.3}/>\n         </linearGradient>\n         </defs>\n    <XAxis dataKey=\"date\"/>\n\n    <Tooltip/>\n\n    <Bar barSize={30} dataKey=\"do\" fillOpacity={1} fill=\"url(#colorRed)\"><LabelList dataKey=\"do\" position=\"top\" /></Bar>\n     </BarChart>\n     </ResponsiveContainer>\n\n</Col></Row>\n</Card>\n</Col>\n</Row>\n</div>\n\n\n\n\n\n\n\n\n\n      </Layout>\n\n\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}