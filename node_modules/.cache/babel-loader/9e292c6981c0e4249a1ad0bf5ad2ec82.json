{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, FormGroup, Checkbox, Grid, PageHeader, Jumbotron, Row, Col, NavItem, Button, Modal, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { ChromePicker } from 'react-color';\nimport GoogleMapReact from 'google-map-react';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport { LineChart, ResponsiveContainer, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nvar AnyReactComponent = function AnyReactComponent(_ref) {\n  var text = _ref.text;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, text);\n};\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.imageFormatter = function (cell, row) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }));\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    _this.tempColorChange = function (color) {\n      console.log(_this.state.color);\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"colors/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/colors/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          tempColor: color.hex\n        };\n        samplesRef.set(sample);\n\n        _this.setState({\n          tempColor: color.hex\n        });\n      });\n    };\n\n    _this.state = {\n      //The data that goes into the table showing weather data\n      weatherData: [],\n      iconData: [],\n      id: '',\n      key: 1,\n      currentCity: '',\n      currentTemp: '',\n      currentIcon: '',\n      currentDescription: '',\n      currentHumidity: '',\n      //checkbox status\n      checkboxState: true,\n      checkboxState1: true,\n      checkboxStatenitrogen: true,\n      checkboxStatephosphorus: true,\n      checkboxStatetds: true,\n      checkboxStatepH: true,\n      checkboxStatetss: true,\n      checkboxStatesalinity: true,\n      checkboxStateconductivity: true,\n      checkboxStatehardness: true,\n      checkboxStateturbidity: true,\n      //these are for the graphs\n      tempPlot: 'temp',\n      doPlot: 'do',\n      conductivityPlot: 'conductivity',\n      tdsPlot: 'tds',\n      salinityPlot: 'salinity',\n      pHPlot: 'pH',\n      turbidityPlot: 'turbidity',\n      nitrogenPlot: 'nitrogen',\n      phosphorusPlot: 'phosphorus',\n      totalHardnessPlot: 'totalHardness',\n      tssPlot: 'tss',\n      //this is the object array for the table\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      //averages\n      nitrogenAverage: [],\n      nitrogenAvg: '',\n      phosphorusAverage: [],\n      phosphorusAvg: '',\n      dissolvedOxygenAverage: [],\n      dissolvedOxygenAvg: ''\n    };\n    return _this;\n  } //async allows await to be used for API calls.  Without ASYNC an error will be called saying that await is a reserved word.\n  //ComponentDidMount runs over and over again\n\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var weatherData, city, temp, icon, description, humidity, api_callWeather, weatherResponse, symbol;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n                  var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n                  samplesRef.on('value', function (snapshot) {\n                    var dataList = snapshot.val();\n                    var filter = [];\n                    var orders = snapshot.val();\n                    var orders2 = snapshot.val();\n                    var orders3 = [snapshot.val()];\n                    console.log(orders3);\n                    var newState = [];\n                    var newState2 = [];\n                    var newState3 = [];\n                    var nitrogenAverage = [];\n                    var phosphorusAverage = [];\n                    var dissolvedOxygenAverage = [];\n\n                    for (var order in orders) {\n                      newState.push({\n                        id: order,\n                        sampleDate: orders[order].sampleDate,\n                        sampleTaker: orders[order].sampleTaker,\n                        temp: orders[order].temp,\n                        do: orders[order].do,\n                        conductivity: orders[order].conductivity,\n                        tds: orders[order].tds,\n                        salinity: orders[order].salinity,\n                        pH: orders[order].pH,\n                        turbidity: orders[order].turbidity,\n                        nitrogen: orders[order].nitrogen,\n                        phosphorus: orders[order].phosphorus,\n                        totalHardness: orders[order].totalHardness,\n                        tss: orders[order].tss,\n                        sampleNotes: orders[order].sampleNotes\n                      });\n                      newState2.push({\n                        id: order,\n                        sampleDate: orders[order].sampleDate,\n                        sampleTaker: orders[order].sampleTaker,\n                        temp: orders[order].temp,\n                        do: orders[order].do,\n                        conductivity: orders[order].conductivity,\n                        tds: orders[order].tds,\n                        salinity: orders[order].salinity,\n                        pH: orders[order].pH,\n                        turbidity: orders[order].turbidity,\n                        nitrogen: orders[order].nitrogen,\n                        phosphorus: orders[order].phosphorus,\n                        totalHardness: orders[order].totalHardness,\n                        tss: orders[order].tss,\n                        sampleNotes: orders[order].sampleNotes\n                      });\n                    }\n\n                    newState2.sort(function (a, b) {\n                      if (a.sampleDate === b.sampleDate) {\n                        return 0;\n                      }\n\n                      return a.sampleDate > b.sampleDate ? 1 : -1;\n                    });\n                    newState.sort(function (a, b) {\n                      if (b.sampleDate === a.sampleDate) {\n                        return 0;\n                      }\n\n                      return b.sampleDate > a.sampleDate ? 1 : -1;\n                    });\n\n                    _this2.setState({\n                      orders: newState,\n                      orders2: newState2,\n                      dataList: newState,\n                      color: _this2.state.color\n                    });\n\n                    snapshot.forEach(function (ss) {\n                      nitrogenAverage.push({\n                        nitrogen: ss.child('nitrogen').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      nitrogenAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        nitrogenAverage: nitrogenAverage\n                      });\n                    });\n                    var nitrogenData = [];\n\n                    for (var i = 0; i < nitrogenAverage.length; i++) {\n                      //push send this data to the back of the chartData variable above.\n                      nitrogenData.push(parseInt(nitrogenAverage[i].nitrogen));\n                    }\n\n                    var nitrogenReverse = nitrogenData.reverse();\n                    var nitrogen = ([nitrogenReverse[0], nitrogenReverse[1], nitrogenReverse[2]].reduce(function (a, b) {\n                      return a + b;\n                    }, 0) / 3).toFixed(1);\n\n                    _this2.setState({\n                      nitrogenAvg: nitrogen\n                    });\n\n                    snapshot.forEach(function (ss) {\n                      phosphorusAverage.push({\n                        phosphorus: ss.child('phosphorus').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      phosphorusAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        phosphorusAverage: phosphorusAverage\n                      });\n                    });\n                    var phosphorusData = [];\n\n                    for (var _i = 0; _i < phosphorusAverage.length; _i++) {\n                      //push send this data to the back of the chartData variable above.\n                      phosphorusData.push(parseInt(phosphorusAverage[_i].phosphorus));\n                    }\n\n                    var phosphorusReverse = phosphorusData.reverse();\n                    var phosphorus = ([phosphorusReverse[0], phosphorusReverse[1], phosphorusReverse[2]].reduce(function (a, b) {\n                      return a + b;\n                    }, 0) / 3).toFixed(1);\n\n                    _this2.setState({\n                      phosphorusAvg: phosphorus\n                    });\n\n                    snapshot.forEach(function (ss) {\n                      dissolvedOxygenAverage.push({\n                        dissolvedOxygen: ss.child('do').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      dissolvedOxygenAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        dissolvedOxygenAverage: dissolvedOxygenAverage\n                      });\n                    });\n                    var dissolvedOxygenData = [];\n\n                    for (var _i2 = 0; _i2 < dissolvedOxygenAverage.length; _i2++) {\n                      //push send this data to the back of the chartData variable above.\n                      dissolvedOxygenData.push(parseInt(dissolvedOxygenAverage[_i2].dissolvedOxygen));\n                    }\n\n                    var dissolvedOxygenReverse = dissolvedOxygenData.reverse();\n                    var dissolvedOxygenReverse2 = dissolvedOxygenAverage.reverse();\n                    var dissolvedOxygenReverse3 = [{\n                      do: dissolvedOxygen[0]\n                    }];\n                    console.log(dissolvedOxygenReverse3);\n                    var dissolvedOxygen = ([dissolvedOxygenReverse[0], dissolvedOxygenReverse[1], dissolvedOxygenReverse[2]].reduce(function (a, b) {\n                      return a + b;\n                    }, 0) / 3).toFixed(1);\n\n                    _this2.setState({\n                      dissolvedOxygenAvg: dissolvedOxygen\n                    });\n                  });\n                  var colorsRef = fire.database().ref(\"colors/\".concat(user.uid));\n                  colorsRef.on('value', function (snapshot) {\n                    var colorList = snapshot.val();\n                    console.log(colorList);\n\n                    _this2.setState({\n                      tempColor: snapshot.child('tempColor').val()\n                    });\n                  });\n                });\n                weatherData = [];\n                city = '';\n                temp = '';\n                icon = '';\n                description = '';\n                humidity = '';\n                _context.next = 9;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?lat=\".concat('37.997', \"&lon=\", '-121.71', \"&units=\", 'imperial', \"&appid=\", '30573b68170d7f4400c7ac9c1c671ccf'));\n\n              case 9:\n                api_callWeather = _context.sent;\n                _context.next = 12;\n                return api_callWeather.json();\n\n              case 12:\n                weatherResponse = _context.sent;\n                symbol = weatherResponse.weather[0].icon;\n                console.log(weatherResponse);\n                this.setState({\n                  currentCity: weatherResponse.name,\n                  currentTemp: weatherResponse.main.temp,\n                  currentIcon: 'http://openweathermap.org/img/w/' + weatherResponse.weather[0].icon + '.png',\n                  currentDescription: weatherResponse.weather[0].main,\n                  currentHumidity: weatherResponse.main.humidity\n                });\n                this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n                  var samplesRef = fire.database().ref(\"dailySamples/\".concat(user.uid));\n                  samplesRef.on('value', function (snapshot) {});\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"toggleNitrogen\",\n    value: function toggleNitrogen(event) {\n      this.setState({\n        checkboxState: !this.state.checkboxState\n      });\n      var checkboxState = this.state.checkboxState;\n\n      if (checkboxState) {\n        this.setState({\n          nitrogenPlot: ''\n        });\n      } else {\n        this.setState({\n          nitrogenPlot: 'nitrogen'\n        });\n      }\n    }\n  }, {\n    key: \"togglePhosphorus\",\n    value: function togglePhosphorus(event) {\n      this.setState({\n        checkboxStatephosphorus: !this.state.checkboxStatephosphorus\n      });\n      var checkboxState = this.state.checkboxStatephosphorus;\n\n      if (checkboxState) {\n        this.setState({\n          phosphorusPlot: ''\n        });\n      } else {\n        this.setState({\n          phosphorusPlot: 'phosphorus'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTemp\",\n    value: function toggleTemp(event) {\n      this.setState({\n        checkboxStatenitrogen: !this.state.checkboxStatenitrogen\n      });\n      var checkboxState = this.state.checkboxStatenitrogen;\n\n      if (checkboxState) {\n        this.setState({\n          tempPlot: ''\n        });\n      } else {\n        this.setState({\n          tempPlot: 'temp'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTDS\",\n    value: function toggleTDS(event) {\n      this.setState({\n        checkboxStatetds: !this.state.checkboxStatetds\n      });\n      var checkboxState = this.state.checkboxStatetds;\n\n      if (checkboxState) {\n        this.setState({\n          tdsPlot: ''\n        });\n      } else {\n        this.setState({\n          tdsPlot: 'tds'\n        });\n      }\n    }\n  }, {\n    key: \"togglepH\",\n    value: function togglepH(event) {\n      this.setState({\n        checkboxStatepH: !this.state.checkboxStatepH\n      });\n      var checkboxState = this.state.checkboxStatepH;\n\n      if (checkboxState) {\n        this.setState({\n          pHPlot: ''\n        });\n      } else {\n        this.setState({\n          pHPlot: 'pH'\n        });\n      }\n    }\n  }, {\n    key: \"toggletss\",\n    value: function toggletss(event) {\n      this.setState({\n        checkboxStatetss: !this.state.checkboxStatetss\n      });\n      var checkboxState = this.state.checkboxStatetss;\n\n      if (checkboxState) {\n        this.setState({\n          tssPlot: ''\n        });\n      } else {\n        this.setState({\n          tssPlot: 'tss'\n        });\n      }\n    }\n  }, {\n    key: \"togglesalinity\",\n    value: function togglesalinity(event) {\n      this.setState({\n        checkboxStatesalinity: !this.state.checkboxStatesalinity\n      });\n      var checkboxState = this.state.checkboxStatesalinity;\n\n      if (checkboxState) {\n        this.setState({\n          salinityPlot: ''\n        });\n      } else {\n        this.setState({\n          salinityPlot: 'salinity'\n        });\n      }\n    }\n  }, {\n    key: \"toggleHardness\",\n    value: function toggleHardness(event) {\n      this.setState({\n        checkboxStatehardness: !this.state.checkboxStatehardness\n      });\n      var checkboxState = this.state.checkboxStatehardness;\n\n      if (checkboxState) {\n        this.setState({\n          totalHardnessPlot: ''\n        });\n      } else {\n        this.setState({\n          totalHardnessPlot: 'totalHardness'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTurbidity\",\n    value: function toggleTurbidity(event) {\n      this.setState({\n        checkboxStateturbidity: !this.state.checkboxStateturbidity\n      });\n      var checkboxState = this.state.checkboxStateturbidity;\n\n      if (checkboxState) {\n        this.setState({\n          turbidityPlot: ''\n        });\n      } else {\n        this.setState({\n          turbidityPlot: 'turbidity'\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var nitrogenCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        inline: true,\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleNitrogen.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, \"Nitrogen\"));\n      var phosphorusCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglePhosphorus.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, \"Phosphorus\"));\n      var tempCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTemp.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, \"Temperature\"));\n      var tdsCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTDS.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, \"TDS\"));\n      var pHCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglepH.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, \"pH\"));\n      var tssCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggletss.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, \"TSS\"));\n      var salinityCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglesalinity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, \"Salinity\"));\n      var hardnessCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleHardness.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \"Total Hardness\"));\n      var turbidityCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTurbidity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, \"Turbidity\"));\n      var popover = {\n        position: 'absolute',\n        zIndex: '2'\n      };\n      var cover = {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      };\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          paddingTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(PageHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, \"Summer Lake \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, \"Home Owners Association\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(Panel.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(Panel.Title, {\n        style: {\n          textAlign: 'center'\n        },\n        componentClass: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, \"Weather\")), React.createElement(Panel.Body, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, this.state.currentCity), React.createElement(\"img\", {\n        style: {\n          width: '75px',\n          height: '75px'\n        },\n        src: this.state.currentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, this.state.currentDescription), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, \"Temperature: \", this.state.currentTemp, \" F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, \"Humidity: \", this.state.currentHumidity, \"%\"))))), React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, React.createElement(Panel.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, React.createElement(Panel.Title, {\n        style: {\n          textAlign: 'center'\n        },\n        componentClass: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, \"Location\")), React.createElement(Panel.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '39vh',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyAqe1Z8I94AcnNb3VsOam1tnUd_8WdubV4'\n        },\n        defaultCenter: this.props.center,\n        defaultZoom: this.props.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, React.createElement(AnyReactComponent, {\n        lat: 37.987636425563075,\n        lng: -121.63235758701154,\n        text: 'Summer Lake',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, React.createElement(Panel.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, React.createElement(Panel.Title, {\n        style: {\n          textAlign: 'center'\n        },\n        componentClass: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, \"Phosphorus\")), React.createElement(Panel.Body, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, \"Phosphorus\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, \"Last 3 months\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      }, this.state.phosphorusAvg, \" mg/L\")))), React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, React.createElement(Panel.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, React.createElement(Panel.Title, {\n        style: {\n          textAlign: 'center'\n        },\n        componentClass: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }, \"Nitrogen\")), React.createElement(Panel.Body, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }, \"Nitrogen\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, \"Last 3 months\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }, this.state.nitrogenAvg, \" mg/L\")))), React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }, React.createElement(Panel.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }, React.createElement(Panel.Title, {\n        style: {\n          textAlign: 'center'\n        },\n        componentClass: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }, \"Dissolved Oxygen\")), React.createElement(Panel.Body, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }, \"DO\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, \"Last 3 months\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }, this.state.dissolvedOxygenAvg, \" mg/L\"))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 11,\n        sm: 11,\n        md: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      }, React.createElement(Panel.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        },\n        __self: this\n      }, React.createElement(Panel.Title, {\n        style: {\n          textAlign: 'center'\n        },\n        componentClass: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707\n        },\n        __self: this\n      }, \"Water Quality\")), React.createElement(Panel.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 7 / 3.0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        data: this.state.orders2,\n        syncId: \"anyId\",\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        label: {\n          value: 'Measurement',\n          angle: -90,\n          position: 'insideLeft'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.nitrogenPlot,\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.phosphorusPlot,\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.tdsPlot,\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.pHPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.tempPlot,\n        stroke: this.state.tempColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.tssPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.salinityPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.totalHardnessPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.turbidityPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.doPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }), React.createElement(Brush, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, React.createElement(Col, {\n        smOffset: 1,\n        xs: 11,\n        sm: 11,\n        md: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        },\n        __self: this\n      }, nitrogenCheckbox)), React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      }, phosphorusCheckbox)), React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748\n        },\n        __self: this\n      }, tempCheckbox, React.createElement(TiBrush, {\n        size: 20,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        },\n        __self: this\n      }, \"Color\"), this.state.displayColorPicker ? React.createElement(\"div\", {\n        style: popover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: cover,\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        },\n        __self: this\n      }), React.createElement(ChromePicker, {\n        color: this.state.tempColor,\n        onChangeComplete: this.tempColorChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752\n        },\n        __self: this\n      })) : null))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      }, tdsCheckbox)), React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761\n        },\n        __self: this\n      }, pHCheckbox)), React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }, tssCheckbox))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769\n        },\n        __self: this\n      }, salinityCheckbox)), React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772\n        },\n        __self: this\n      }, hardnessCheckbox)), React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775\n        },\n        __self: this\n      }, turbidityCheckbox)))))))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.defaultProps = {\n  center: {\n    lat: 37.987636425563075,\n    lng: -121.63235758701154\n  },\n  zoom: 13\n};\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx"],"names":["React","Component","Navbar","Nav","FormGroup","Checkbox","Grid","PageHeader","Jumbotron","Row","Col","NavItem","Button","Modal","Panel","Link","ReactDOM","FileSaver","jsPDF","domtoimage","fileDownload","Request","firebase","fire","ChromePicker","GoogleMapReact","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiBrush","TiArrowSortedUp","TiPencil","TiTrash","LineChart","ResponsiveContainer","BarChart","Bar","Surface","ReferenceLine","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","AnyReactComponent","text","Dashboard","props","imageFormatter","cell","row","handleClick","setState","displayColorPicker","state","handleClose","tempColorChange","color","console","log","removeAuthListener","auth","onAuthStateChanged","user","samplesRef","database","ref","uid","orderID","sample","tempColor","hex","set","weatherData","iconData","id","key","currentCity","currentTemp","currentIcon","currentDescription","currentHumidity","checkboxState","checkboxState1","checkboxStatenitrogen","checkboxStatephosphorus","checkboxStatetds","checkboxStatepH","checkboxStatetss","checkboxStatesalinity","checkboxStateconductivity","checkboxStatehardness","checkboxStateturbidity","tempPlot","doPlot","conductivityPlot","tdsPlot","salinityPlot","pHPlot","turbidityPlot","nitrogenPlot","phosphorusPlot","totalHardnessPlot","tssPlot","samples","orders","orders2","dataList","filter","blobUrl","nitrogenAverage","nitrogenAvg","phosphorusAverage","phosphorusAvg","dissolvedOxygenAverage","dissolvedOxygenAvg","on","snapshot","val","orders3","newState","newState2","newState3","order","push","sampleDate","sampleTaker","temp","do","conductivity","tds","salinity","pH","turbidity","nitrogen","phosphorus","totalHardness","tss","sampleNotes","sort","a","b","forEach","ss","child","date","nitrogenData","i","length","parseInt","nitrogenReverse","reverse","reduce","toFixed","phosphorusData","phosphorusReverse","dissolvedOxygen","dissolvedOxygenData","dissolvedOxygenReverse","dissolvedOxygenReverse2","dissolvedOxygenReverse3","colorsRef","colorList","city","icon","description","humidity","fetch","api_callWeather","json","weatherResponse","symbol","weather","name","main","event","preventDefault","nitrogenCheckbox","toggleNitrogen","bind","phosphorusCheckbox","togglePhosphorus","tempCheckbox","toggleTemp","tdsCheckbox","toggleTDS","pHCheckbox","togglepH","tssCheckbox","toggletss","salinityCheckbox","togglesalinity","hardnessCheckbox","toggleHardness","turbidityCheckbox","toggleTurbidity","popover","position","zIndex","cover","top","right","bottom","left","paddingTop","textAlign","width","height","center","zoom","value","angle","r","onSubmit","defaultProps","lat","lng"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Nav, FormGroup, Checkbox, Grid, PageHeader, Jumbotron, Row, Col, NavItem, Button, Modal, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\n\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { ChromePicker } from 'react-color';\nimport GoogleMapReact from 'google-map-react';\n\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport { LineChart, ResponsiveContainer, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nexport default class Dashboard extends Component {\n\n  static defaultProps = {\ncenter: {\n  lat: 37.987636425563075,\n  lng: -121.63235758701154\n},\nzoom: 13\n};\n\n\n  constructor(props) {\n      super(props);\n\n\n\n      this.state = {\n\n        //The data that goes into the table showing weather data\n        weatherData: [],\n        iconData: [],\n\n        id: '',\n        key: 1,\n\n        currentCity: '',\n        currentTemp: '',\n        currentIcon: '',\n        currentDescription: '',\n        currentHumidity: '',\n\n        //checkbox status\n        checkboxState: true,\n        checkboxState1: true,\n        checkboxStatenitrogen: true,\n        checkboxStatephosphorus: true,\n        checkboxStatetds: true,\n        checkboxStatepH: true,\n        checkboxStatetss: true,\n        checkboxStatesalinity: true,\n        checkboxStateconductivity: true,\n        checkboxStatehardness: true,\n        checkboxStateturbidity: true,\n\n        //these are for the graphs\n        tempPlot: 'temp',\n        doPlot: 'do',\n        conductivityPlot: 'conductivity',\n        tdsPlot: 'tds',\n        salinityPlot: 'salinity',\n        pHPlot: 'pH',\n        turbidityPlot: 'turbidity',\n        nitrogenPlot: 'nitrogen',\n        phosphorusPlot: 'phosphorus',\n        totalHardnessPlot: 'totalHardness',\n        tssPlot: 'tss',\n\n        //this is the object array for the table\n        samples: [],\n        orders: [],\n        orders2: [],\n        dataList: [],\n        filter: \"\",\n        blobUrl: null,\n\n        //averages\n        nitrogenAverage: [],\n        nitrogenAvg: '',\n        phosphorusAverage: [],\n        phosphorusAvg: '',\n        dissolvedOxygenAverage: [],\n        dissolvedOxygenAvg: '',\n\n\n\n\n      }\n\n    }\n\n\n\n\n\n\n    //async allows await to be used for API calls.  Without ASYNC an error will be called saying that await is a reserved word.\n\n    //ComponentDidMount runs over and over again\n\n  async componentDidMount() {\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n      samplesRef.on('value', (snapshot) => {\n\n\n        let dataList = snapshot.val();\n        let filter = [];\n        let orders = snapshot.val();\n\n        let orders2 = snapshot.val();\n        let orders3 = [snapshot.val()]\n        console.log(orders3);\n\n        let newState = [];\n        let newState2 = [];\n        let newState3 = [];\n\n        let nitrogenAverage = [];\n        let phosphorusAverage = [];\n        let dissolvedOxygenAverage = [];\n\n\n\n\n\n      for (let order in orders) {\n        newState.push({\n          id: order,\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n          sampleNotes: orders[order].sampleNotes,\n        });\n        newState2.push({\n          id: order,\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n          sampleNotes: orders[order].sampleNotes,\n        });\n\n\n\n\n      }\n\n      newState2.sort(function(a, b) {\n\n        if (a.sampleDate === b.sampleDate) {\n          return 0;\n        }\n        return a.sampleDate > b.sampleDate ? 1 : -1;\n    });\n    newState.sort(function(a, b) {\n\n      if (b.sampleDate === a.sampleDate) {\n        return 0;\n      }\n      return b.sampleDate > a.sampleDate ? 1 : -1;\n  });\n\n\n\n      this.setState({\n        orders: newState,\n        orders2: newState2,\n        dataList: newState,\n        color: this.state.color,\n      });\n\n      snapshot.forEach(ss => {\n          nitrogenAverage.push({nitrogen: ss.child('nitrogen').val(), date: ss.child('sampleDate').val()} );\n          nitrogenAverage.sort(function(a, b) {\n            if (a.date === b.date) {\n              return 0;\n            }\n            return a.date > b.date ? 1 : -1;\n        });\n          this.setState({\n            nitrogenAverage: (nitrogenAverage),\n          })\n        });\n\n        let nitrogenData = [];\n        for (let i=0; i < nitrogenAverage.length; i++) {\n        //push send this data to the back of the chartData variable above.\n        nitrogenData.push(parseInt(nitrogenAverage[i].nitrogen));\n\n      }\n        let nitrogenReverse = nitrogenData.reverse();\n        let nitrogen = ([nitrogenReverse[0], nitrogenReverse[1], nitrogenReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(1);\n\n        this.setState({\n          nitrogenAvg: nitrogen,\n        })\n        snapshot.forEach(ss => {\n            phosphorusAverage.push({phosphorus: ss.child('phosphorus').val(), date: ss.child('sampleDate').val()} );\n            phosphorusAverage.sort(function(a, b) {\n              if (a.date === b.date) {\n                return 0;\n              }\n              return a.date > b.date ? 1 : -1;\n          });\n            this.setState({\n              phosphorusAverage: (phosphorusAverage),\n            })\n          });\n\n          let phosphorusData = [];\n          for (let i=0; i < phosphorusAverage.length; i++) {\n          //push send this data to the back of the chartData variable above.\n          phosphorusData.push(parseInt(phosphorusAverage[i].phosphorus));\n\n        }\n          let phosphorusReverse = phosphorusData.reverse();\n          let phosphorus = ([phosphorusReverse[0], phosphorusReverse[1], phosphorusReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(1);\n\n          this.setState({\n            phosphorusAvg: phosphorus,\n          })\n          snapshot.forEach(ss => {\n              dissolvedOxygenAverage.push({dissolvedOxygen: ss.child('do').val(), date: ss.child('sampleDate').val()} );\n              dissolvedOxygenAverage.sort(function(a, b) {\n                if (a.date === b.date) {\n                  return 0;\n                }\n                return a.date > b.date ? 1 : -1;\n            });\n              this.setState({\n                dissolvedOxygenAverage: (dissolvedOxygenAverage),\n              })\n            });\n\n            let dissolvedOxygenData = [];\n            for (let i=0; i < dissolvedOxygenAverage.length; i++) {\n            //push send this data to the back of the chartData variable above.\n            dissolvedOxygenData.push(parseInt(dissolvedOxygenAverage[i].dissolvedOxygen));\n\n          }\n            let dissolvedOxygenReverse = dissolvedOxygenData.reverse();\n            let dissolvedOxygenReverse2 = dissolvedOxygenAverage.reverse();\n            let dissolvedOxygenReverse3 = [{do: dissolvedOxygen[0]}];\n            console.log(dissolvedOxygenReverse3)\n            let dissolvedOxygen = ([dissolvedOxygenReverse[0], dissolvedOxygenReverse[1], dissolvedOxygenReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(1);\n\n            this.setState({\n              dissolvedOxygenAvg: dissolvedOxygen,\n            })\n\n\n    });\n    const colorsRef = fire.database().ref(`colors/${user.uid}`);\n\n    colorsRef.on('value', (snapshot) => {\n      let colorList = snapshot.val();\n      console.log(colorList);\n      this.setState({\n        tempColor: snapshot.child('tempColor').val(),\n\n      });\n\n\n    });\n\n  });\n    let weatherData = [];\n    let city = '';\n    let temp = '';\n    let icon = '';\n    let description = '';\n    let humidity = '';\n\n    let api_callWeather =  await fetch(`http://api.openweathermap.org/data/2.5/weather?lat=${'37.997'}&lon=${'-121.71'}&units=${'imperial'}&appid=${'30573b68170d7f4400c7ac9c1c671ccf'}`);\n\n\n    let weatherResponse = await api_callWeather.json();\n\n    let symbol = weatherResponse.weather[0].icon;\n\n\n    console.log(weatherResponse)\n\n    this.setState({\n      currentCity: weatherResponse.name,\n      currentTemp: weatherResponse.main.temp,\n      currentIcon: 'http://openweathermap.org/img/w/' + weatherResponse.weather[0].icon + '.png',\n\n      currentDescription: weatherResponse.weather[0].main,\n      currentHumidity: weatherResponse.main.humidity,\n\n    })\n\n\n\n\n\n\n\n\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n      const samplesRef = fire.database().ref(`dailySamples/${user.uid}`);\n      samplesRef.on('value', (snapshot) => {\n\n\n    });\n  });\n  }\n\n\n\n   imageFormatter = (cell, row) => {\n      return (\n<span><img src={cell} /></span>\n)\n    }\n\n    toggleNitrogen(event) {\n        this.setState({\n          checkboxState: !this.state.checkboxState\n        });\n        const checkboxState = this.state.checkboxState;\n        if (checkboxState) {\n          this.setState({\n            nitrogenPlot: '',\n          })\n        } else {\n          this.setState({\n            nitrogenPlot: 'nitrogen',\n          })\n        }\n      }\n      togglePhosphorus(event) {\n          this.setState({\n            checkboxStatephosphorus: !this.state.checkboxStatephosphorus\n          });\n          const checkboxState = this.state.checkboxStatephosphorus;\n          if (checkboxState) {\n            this.setState({\n              phosphorusPlot: '',\n            })\n          } else {\n            this.setState({\n              phosphorusPlot: 'phosphorus',\n            })\n          }\n        }\n        toggleTemp(event) {\n            this.setState({\n              checkboxStatenitrogen: !this.state.checkboxStatenitrogen\n            });\n            const checkboxState = this.state.checkboxStatenitrogen;\n            if (checkboxState) {\n              this.setState({\n                tempPlot: '',\n              })\n            } else {\n              this.setState({\n                tempPlot: 'temp',\n              })\n            }\n          }\n          toggleTDS(event) {\n              this.setState({\n                checkboxStatetds: !this.state.checkboxStatetds\n              });\n              const checkboxState = this.state.checkboxStatetds;\n              if (checkboxState) {\n                this.setState({\n                  tdsPlot: '',\n                })\n              } else {\n                this.setState({\n                  tdsPlot: 'tds',\n                })\n              }\n            }\n            togglepH(event) {\n                this.setState({\n                  checkboxStatepH: !this.state.checkboxStatepH\n                });\n                const checkboxState = this.state.checkboxStatepH;\n                if (checkboxState) {\n                  this.setState({\n                    pHPlot: '',\n                  })\n                } else {\n                  this.setState({\n                    pHPlot: 'pH',\n                  })\n                }\n              }\n              toggletss(event) {\n                  this.setState({\n                    checkboxStatetss: !this.state.checkboxStatetss\n                  });\n                  const checkboxState = this.state.checkboxStatetss;\n                  if (checkboxState) {\n                    this.setState({\n                      tssPlot: '',\n                    })\n                  } else {\n                    this.setState({\n                      tssPlot: 'tss',\n                    })\n                  }\n                }\n                togglesalinity(event) {\n                    this.setState({\n                      checkboxStatesalinity: !this.state.checkboxStatesalinity\n                    });\n                    const checkboxState = this.state.checkboxStatesalinity;\n                    if (checkboxState) {\n                      this.setState({\n                        salinityPlot: '',\n                      })\n                    } else {\n                      this.setState({\n                        salinityPlot: 'salinity',\n                      })\n                    }\n                  }\n                  toggleHardness(event) {\n                      this.setState({\n                        checkboxStatehardness: !this.state.checkboxStatehardness\n                      });\n                      const checkboxState = this.state.checkboxStatehardness;\n                      if (checkboxState) {\n                        this.setState({\n                          totalHardnessPlot: '',\n                        })\n                      } else {\n                        this.setState({\n                          totalHardnessPlot: 'totalHardness',\n                        })\n                      }\n                    }\n                    toggleTurbidity(event) {\n                        this.setState({\n                          checkboxStateturbidity: !this.state.checkboxStateturbidity\n                        });\n                        const checkboxState = this.state.checkboxStateturbidity;\n                        if (checkboxState) {\n                          this.setState({\n                            turbidityPlot: '',\n                          })\n                        } else {\n                          this.setState({\n                            turbidityPlot: 'turbidity',\n                          })\n                        }\n                      }\n\n                      handleClick = () => {\n                        this.setState({ displayColorPicker: !this.state.displayColorPicker })\n                      };\n\n                      handleClose = () => {\n                        this.setState({ displayColorPicker: false })\n                      };\n\n                      tempColorChange = (color) => {\n\n                          console.log(this.state.color);\n                          this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n                          const samplesRef = fire.database().ref(`colors/${user.uid}`);\n                          const orderID = fire.database().ref(`/colors/${user.uid}/${orderID}`);\n                          const sample = {\n                            tempColor: color.hex\n                          }\n                          samplesRef.set(sample);\n                          this.setState({\n                            tempColor: color.hex,\n                           });\n                          });\n                      }\n\n                      onSubmit(event) {\n                        event.preventDefault();\n                      }\n\n  render() {\n\n    const nitrogenCheckbox = (\n      <span>\n        <input\n          inline\n        type=\"checkbox\"\n        defaultChecked='true'\n        onClick={this.toggleNitrogen.bind(this)}\n        />\n      <label>Nitrogen</label>\n      </span>\n    );\n    const phosphorusCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglePhosphorus.bind(this)}/>\n      <label>Phosphorus</label>\n      </span>\n    );\n    const tempCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTemp.bind(this)}/>\n      <label>Temperature</label>\n      </span>\n    );\n    const tdsCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTDS.bind(this)}/>\n      <label>TDS</label>\n      </span>\n    );\n    const pHCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglepH.bind(this)}/>\n      <label>pH</label>\n      </span>\n    );\n    const tssCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggletss.bind(this)}/>\n      <label>TSS</label>\n      </span>\n    );\n    const salinityCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglesalinity.bind(this)}/>\n      <label>Salinity</label>\n      </span>\n    );\n    const hardnessCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleHardness.bind(this)}/>\n      <label>Total Hardness</label>\n      </span>\n    );\n    const turbidityCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTurbidity.bind(this)}/>\n      <label>Turbidity</label>\n      </span>\n    );\n    const popover = {\n       position: 'absolute',\n       zIndex: '2',\n     }\n     const cover = {\n       position: 'fixed',\n       top: '0px',\n       right: '0px',\n       bottom: '0px',\n       left: '0px',\n     }\n\n\n\n    return (\n      <Grid>\n        <Row>\n          <Col xs={12} sm={12} md={12} >\n            <Row style={{paddingTop: '10px'}}>\n              <Col xs={12} sm={12} md={12} >\n                <PageHeader>\n    Summer Lake <small>Home Owners Association</small>\n  </PageHeader>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={4} sm={4} md={4} >\n\n              <div>\n      <Panel bsStyle=\"primary\">\n        <Panel.Heading>\n          <Panel.Title style={{textAlign: 'center'}} componentClass=\"h3\">Weather</Panel.Title>\n        </Panel.Heading>\n        <Panel.Body style={{textAlign: 'center'}}>\n          <h2>{this.state.currentCity}</h2>\n          <img style={{width: '75px', height: '75px'}} src={this.state.currentIcon} />\n          <h3>{this.state.currentDescription}</h3>\n          <h3>Temperature: {this.state.currentTemp} F</h3>\n          <p>Humidity: {this.state.currentHumidity}%</p>\n\n        </Panel.Body>\n      </Panel>\n    </div>\n    </Col>\n    <Col xs={8} sm={8} md={8} >\n      <Panel bsStyle=\"primary\">\n    <Panel.Heading>\n      <Panel.Title style={{textAlign: 'center'}} componentClass=\"h3\">Location</Panel.Title>\n    </Panel.Heading>\n    <Panel.Body>\n      <div style={{ height: '39vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyAqe1Z8I94AcnNb3VsOam1tnUd_8WdubV4'}}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n        >\n          <AnyReactComponent\n            lat={37.987636425563075}\n            lng={-121.63235758701154}\n            text={'Summer Lake'}\n          />\n        </GoogleMapReact>\n      </div>\n\n\n    </Panel.Body>\n  </Panel>\n\n\n</Col>\n\n  </Row>\n  <Row>\n    <Col xs={12} sm={12} md={12}>\n      <hr></hr>\n      </Col>\n    </Row>\n\n  <Row>\n\n\n\n\n\n<Col xs={4} sm={4} md={4}>\n  <Panel bsStyle=\"primary\">\n     <Panel.Heading>\n       <Panel.Title style={{textAlign: 'center'}} componentClass=\"h3\">Phosphorus</Panel.Title>\n     </Panel.Heading>\n     <Panel.Body style={{textAlign: 'center'}}>\n     <h2>Phosphorus</h2>\n     <h3>Last 3 months</h3>\n     <h2>{this.state.phosphorusAvg} mg/L</h2>\n   </Panel.Body>\n   </Panel>\n</Col>\n<Col xs={4} sm={4} md={4}>\n  <Panel bsStyle=\"primary\">\n     <Panel.Heading>\n       <Panel.Title style={{textAlign: 'center'}} componentClass=\"h3\">Nitrogen</Panel.Title>\n     </Panel.Heading>\n     <Panel.Body style={{textAlign: 'center'}}>\n     <h2>Nitrogen</h2>\n     <h3>Last 3 months</h3>\n     <h2>{this.state.nitrogenAvg} mg/L</h2>\n   </Panel.Body>\n   </Panel>\n</Col>\n<Col xs={4} sm={4} md={4}>\n  <Panel bsStyle=\"primary\">\n     <Panel.Heading>\n       <Panel.Title style={{textAlign: 'center'}} componentClass=\"h3\">Dissolved Oxygen</Panel.Title>\n     </Panel.Heading>\n     <Panel.Body style={{textAlign: 'center'}}>\n     <h2>DO</h2>\n     <h3>Last 3 months</h3>\n     <h2>{this.state.dissolvedOxygenAvg} mg/L</h2>\n   </Panel.Body>\n   </Panel>\n</Col>\n</Row>\n\n\n  <Row>\n    <Col xs={11} sm={11} md={11}>\n      <hr></hr>\n      </Col>\n    </Row>\n\n\n  <Row>\n    <Col xs={12} sm={12} md={12}>\n    <div>\n<Panel bsStyle=\"primary\">\n<Panel.Heading>\n<Panel.Title style={{textAlign: 'center'}} componentClass=\"h3\">Water Quality</Panel.Title>\n</Panel.Heading>\n<Panel.Body>\n<ResponsiveContainer width='100%' aspect={7/3.0}>\n<LineChart\n\n  data={this.state.orders2} syncId=\"anyId\"\n  margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n<CartesianGrid strokeDasharray=\"3 3\"/>\n<XAxis dataKey=\"sampleDate\"/>\n<YAxis label={{ value: 'Measurement', angle: -90, position: 'insideLeft' }}/>\n<Tooltip/>\n\n<Line type=\"monotone\" dataKey={this.state.nitrogenPlot}  stroke=\"#8884d8\" activeDot={{r: 8}}/>\n<Line type=\"monotone\" dataKey={this.state.phosphorusPlot} stroke=\"#8884d8\" activeDot={{r: 8}}/>\n<Line type=\"monotone\" dataKey={this.state.tdsPlot} stroke=\"#8884d8\" activeDot={{r: 8}}/>\n<Line type=\"monotone\" dataKey={this.state.pHPlot} stroke=\"#82ca9d\" />\n<Line type=\"monotone\" dataKey={this.state.tempPlot}  stroke={this.state.tempColor} />\n<Line type=\"monotone\" dataKey={this.state.tssPlot} stroke=\"#82ca9d\" />\n<Line type=\"monotone\" dataKey={this.state.salinityPlot} stroke=\"#82ca9d\" />\n<Line type=\"monotone\" dataKey={this.state.totalHardnessPlot} stroke=\"#82ca9d\" />\n<Line type=\"monotone\" dataKey={this.state.turbidityPlot} stroke=\"#82ca9d\" />\n<Line type=\"monotone\" dataKey={this.state.doPlot} stroke=\"#82ca9d\" />\n\n<Brush />\n<Legend />\n</LineChart>\n\n\n</ResponsiveContainer>\n<Row>\n<Col smOffset={1} xs={11} sm={11} md={11} >\n\n<Row>\n<Col xs={4} sm={4} md={4} >\n<form onSubmit={this.onSubmit.bind(this)}>{nitrogenCheckbox}</form>\n</Col>\n<Col xs={4} sm={4} md={4} >\n<form onSubmit={this.onSubmit.bind(this)}>{phosphorusCheckbox}</form>\n</Col>\n<Col xs={4} sm={4} md={4} >\n<form onSubmit={this.onSubmit.bind(this)}>{tempCheckbox}\n  <TiBrush size={20}  onClick={ this.handleClick }>Color</TiBrush>\n{ this.state.displayColorPicker ? <div style={ popover }>\n  <div style={ cover } onClick={ this.handleClose }/>\n  <ChromePicker color={ this.state.tempColor } onChangeComplete={ this.tempColorChange } />\n</div> : null }</form>\n  </Col>\n</Row>\n<Row>\n<Col xs={4} sm={4} md={4} >\n<form onSubmit={this.onSubmit.bind(this)}>{tdsCheckbox}</form>\n</Col>\n<Col xs={4} sm={4} md={4} >\n  <form onSubmit={this.onSubmit.bind(this)}>{pHCheckbox}</form>\n</Col>\n<Col xs={4} sm={4} md={4} >\n  <form onSubmit={this.onSubmit.bind(this)}>{tssCheckbox}</form>\n</Col>\n</Row>\n<Row>\n<Col xs={4} sm={4} md={4} >\n  <form onSubmit={this.onSubmit.bind(this)}>{salinityCheckbox}</form>\n</Col>\n<Col xs={4} sm={4} md={4} >\n  <form onSubmit={this.onSubmit.bind(this)}>{hardnessCheckbox}</form>\n</Col>\n<Col xs={4} sm={4} md={4} >\n  <form onSubmit={this.onSubmit.bind(this)}>{turbidityCheckbox}</form>\n</Col>\n</Row>\n</Col>\n</Row>\n\n</Panel.Body>\n</Panel>\n</div>\n\n\n  </Col></Row>\n\n\n\n\n        </Col>\n        </Row>\n      </Grid>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}