{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GRIDDLE_INITIALIZED = GRIDDLE_INITIALIZED;\nexports.GRIDDLE_LOADED_DATA = GRIDDLE_LOADED_DATA;\nexports.GRIDDLE_SET_PAGE_SIZE = GRIDDLE_SET_PAGE_SIZE;\nexports.GRIDDLE_SET_PAGE = GRIDDLE_SET_PAGE;\nexports.GRIDDLE_NEXT_PAGE = GRIDDLE_NEXT_PAGE;\nexports.GRIDDLE_PREVIOUS_PAGE = GRIDDLE_PREVIOUS_PAGE;\nexports.GRIDDLE_SET_FILTER = GRIDDLE_SET_FILTER;\nexports.GRIDDLE_SET_SORT = GRIDDLE_SET_SORT;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _localSelectors = require('../selectors/localSelectors');\n\nvar _dataReducer = require('../../../reducers//dataReducer');\n\nvar dataReducers = _interopRequireWildcard(_dataReducer);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction GRIDDLE_INITIALIZED(state) {\n  return dataReducers.GRIDDLE_INITIALIZED(state);\n}\n/** Sets the Griddle data\n * @param {Immutable} state - Immutable state object\n * @param {Object} action - the action object to work with\n *\n * This simply wraps dataReducer\n */\n\n\nfunction GRIDDLE_LOADED_DATA(state, action) {\n  return dataReducers.GRIDDLE_LOADED_DATA(state, action);\n}\n/** Sets the page size\n * @param {Immutable} state - Immutable state object\n * @param {Object} action - the action object to work with\n *\n * This simply wraps dataReducer\n */\n\n\nfunction GRIDDLE_SET_PAGE_SIZE(state, action) {\n  return dataReducers.GRIDDLE_SET_PAGE_SIZE(state, action);\n}\n/** Sets the current page\n * @param {Immutable} state - Immutable state object\n * @param {Object} action - the action object to work with\n *\n * This simply wraps dataReducer\n */\n\n\nfunction GRIDDLE_SET_PAGE(state, action) {\n  return dataReducers.GRIDDLE_SET_PAGE(state, action);\n}\n\nfunction GRIDDLE_NEXT_PAGE(state, action) {\n  var maxPage = (0, _localSelectors.maxPageSelector)(state);\n  var currentPage = (0, _localSelectors.currentPageSelector)(state);\n\n  if (currentPage < maxPage) {\n    return state.setIn(['pageProperties', 'currentPage'], currentPage + 1);\n  }\n\n  return state;\n}\n\nfunction GRIDDLE_PREVIOUS_PAGE(state, action) {\n  var currentPage = (0, _localSelectors.currentPageSelector)(state);\n\n  if (currentPage > 0) {\n    return state.setIn(['pageProperties', 'currentPage'], currentPage - 1);\n  }\n\n  return state;\n}\n/** Sets the current filter\n * @param {Immutable} state - Immutable state object\n * @param {Object} action - the action object to work with\n *\n */\n\n\nfunction GRIDDLE_SET_FILTER(state, action) {\n  return state.set('filter', action.filter && _immutable2.default.fromJS(action.filter)).setIn(['pageProperties', 'currentPage'], 1);\n}\n\n;\n/** Sets the sort options\n * @param {Immutable} state - Immutable state object\n * @param {Object} action - the action object to work with\n *\n * This simply wraps dataReducer\n */\n\nfunction GRIDDLE_SET_SORT(state, action) {\n  return dataReducers.GRIDDLE_SET_SORT(state, action);\n}\n\n;","map":null,"metadata":{},"sourceType":"script"}