{"ast":null,"code":"import _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/Container.tsx\";\nimport * as React from 'react';\nimport { DropTarget } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\nimport Box from './Box';\n\nvar update = require('immutability-helper');\n\nvar styles = {\n  width: 300,\n  height: 300,\n  border: '1px solid black',\n  position: 'relative'\n};\nvar boxTarget = {\n  drop: function drop(props, monitor, component) {\n    if (!component) {\n      return;\n    }\n\n    var item = monitor.getItem();\n    var delta = monitor.getDifferenceFromInitialOffset();\n    var left = Math.round(item.left + delta.x);\n    var top = Math.round(item.top + delta.y);\n    component.moveBox(item.id, left, top);\n  }\n};\n\nvar Container =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Container, _React$Component);\n\n  function Container() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Container)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      boxes: {\n        a: {\n          top: 20,\n          left: 80,\n          title: 'Drag me around'\n        },\n        b: {\n          top: 180,\n          left: 20,\n          title: 'Drag me too'\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          hideSourceOnDrag = _this$props.hideSourceOnDrag,\n          connectDropTarget = _this$props.connectDropTarget;\n      var boxes = this.state.boxes;\n      return connectDropTarget(React.createElement(\"div\", {\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, Object.keys(boxes).map(function (key) {\n        var _boxes$key = boxes[key],\n            left = _boxes$key.left,\n            top = _boxes$key.top,\n            title = _boxes$key.title;\n        return React.createElement(Box, {\n          key: key,\n          id: key,\n          left: left,\n          top: top,\n          hideSourceOnDrag: hideSourceOnDrag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, title);\n      })));\n    }\n  }, {\n    key: \"moveBox\",\n    value: function moveBox(id, left, top) {\n      this.setState(update(this.state, {\n        boxes: _defineProperty({}, id, {\n          $merge: {\n            left: left,\n            top: top\n          }\n        })\n      }));\n    }\n  }]);\n\n  return Container;\n}(React.Component);\n\nexport default DropTarget(ItemTypes.BOX, boxTarget, function (connect) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n})(Container);","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/Container.tsx"],"names":["React","DropTarget","ItemTypes","Box","update","require","styles","width","height","border","position","boxTarget","drop","props","monitor","component","item","getItem","delta","getDifferenceFromInitialOffset","left","Math","round","x","top","y","moveBox","id","Container","state","boxes","a","title","b","hideSourceOnDrag","connectDropTarget","Object","keys","map","key","setState","$merge","Component","BOX","connect","dropTarget"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport {\n\tDropTarget,\n\tConnectDropTarget,\n\tDropTargetMonitor,\n\tXYCoord,\n} from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nimport Box from './Box'\nconst update = require('immutability-helper')\n\nconst styles: React.CSSProperties = {\n\twidth: 300,\n\theight: 300,\n\tborder: '1px solid black',\n\tposition: 'relative',\n}\n\nconst boxTarget = {\n\tdrop(\n\t\tprops: ContainerProps,\n\t\tmonitor: DropTargetMonitor,\n\t\tcomponent: Container | null,\n\t) {\n\t\tif (!component) {\n\t\t\treturn\n\t\t}\n\t\tconst item = monitor.getItem()\n\t\tconst delta = monitor.getDifferenceFromInitialOffset() as XYCoord\n\t\tconst left = Math.round(item.left + delta.x)\n\t\tconst top = Math.round(item.top + delta.y)\n\n\t\tcomponent.moveBox(item.id, left, top)\n\t},\n}\n\nexport interface ContainerProps {\n\thideSourceOnDrag: boolean\n}\n\ninterface ContainerCollectedProps {\n\tconnectDropTarget: ConnectDropTarget\n}\n\nexport interface ContainerState {\n\tboxes: { [key: string]: { top: number; left: number; title: string } }\n}\n\nclass Container extends React.Component<\n\tContainerProps & ContainerCollectedProps,\n\tContainerState\n> {\n\tpublic state: ContainerState = {\n\t\tboxes: {\n\t\t\ta: { top: 20, left: 80, title: 'Drag me around' },\n\t\t\tb: { top: 180, left: 20, title: 'Drag me too' },\n\t\t},\n\t}\n\n\tpublic render() {\n\t\tconst { hideSourceOnDrag, connectDropTarget } = this.props\n\t\tconst { boxes } = this.state\n\n\t\treturn connectDropTarget(\n\t\t\t<div style={styles}>\n\t\t\t\t{Object.keys(boxes).map(key => {\n\t\t\t\t\tconst { left, top, title } = boxes[key]\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tid={key}\n\t\t\t\t\t\t\tleft={left}\n\t\t\t\t\t\t\ttop={top}\n\t\t\t\t\t\t\thideSourceOnDrag={hideSourceOnDrag}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>,\n\t\t)\n\t}\n\n\tpublic moveBox(id: string, left: number, top: number) {\n\t\tthis.setState(\n\t\t\tupdate(this.state, {\n\t\t\t\tboxes: {\n\t\t\t\t\t[id]: {\n\t\t\t\t\t\t$merge: { left, top },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t)\n\t}\n}\n\nexport default DropTarget<ContainerProps, ContainerCollectedProps>(\n\tItemTypes.BOX,\n\tboxTarget,\n\t(connect: any) => ({\n\t\tconnectDropTarget: connect.dropTarget(),\n\t}),\n)(Container)\n"]},"metadata":{},"sourceType":"module"}