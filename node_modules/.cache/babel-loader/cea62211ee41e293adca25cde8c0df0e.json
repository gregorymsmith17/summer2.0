{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, FormGroup, Checkbox, Grid, PageHeader, Jumbotron, NavItem, Modal, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { ChromePicker } from 'react-color';\nimport GoogleMapReact from 'google-map-react';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport { ComposedChart, LineChart, LabelList, ResponsiveContainer, ReferenceArea, AreaChart, Brush, Area, Line, Tooltip, XAxis, YAxis, BarChart, Bar, CartesianGrid, Legend, Label } from 'recharts';\nimport { Row, Col, Tabs, Table, Divider, Tag, message, Card, Drawer, Menu, Dropdown, Button, Layout, Carousel, Input, Popover, Icon, Cascader, Switch, Select, AutoComplete, Radio } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nvar AnyReactComponent = function AnyReactComponent(_ref) {\n  var text = _ref.text;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, text);\n};\n\nvar TabPane = Tabs.TabPane;\nvar tabListNoTitle = [{\n  key: 'article',\n  tab: 'article'\n}, {\n  key: 'app',\n  tab: 'app'\n}, {\n  key: 'project',\n  tab: 'project'\n}];\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n    _this.state = (_this$state = {\n      //The data that goes into the table showing weather data\n      weatherData: [],\n      iconData: [],\n      id: '',\n      key: 1,\n      currentCity: '',\n      currentTemp: '',\n      currentIcon: '',\n      currentDescription: '',\n      currentHumidity: '',\n      //checkbox status\n      checkboxState: true,\n      checkboxState1: true,\n      checkboxStatenitrogen: true,\n      checkboxStatephosphorus: true,\n      checkboxStatetds: true,\n      checkboxStatepH: true,\n      checkboxStatetss: true,\n      checkboxStatesalinity: true,\n      checkboxStateconductivity: true,\n      checkboxStatehardness: true,\n      checkboxStateturbidity: true,\n      checkboxStatedo: true,\n      //these are for the graphs\n      tempPlot: 'temp',\n      doPlot: 'do',\n      conductivityPlot: 'conductivity',\n      tdsPlot: 'tds',\n      salinityPlot: 'salinity',\n      pHPlot: 'pH',\n      turbidityPlot: 'turbidity',\n      nitrogenPlot: 'nitrogen',\n      phosphorusPlot: 'phosphorus',\n      totalHardnessPlot: 'totalHardness',\n      tssPlot: 'tss',\n      //this is the object array for the table\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      //averages\n      nitrogenAverage: [],\n      nitrogenAvg: '',\n      nitrogenLatest: '',\n      nitrogenGraph: [],\n      phosphorusAverage: [],\n      phosphorusAvg: '',\n      phosphorusGraph: [],\n      phoshporusLatest: '',\n      dissolvedOxygenAverage: [],\n      dissolvedOxygenAvg: '',\n      dissolvedOxygenGraph: [],\n      dissolvedOxygenLatest: '',\n      turbidityLatest: '',\n      turbidityAverage: [],\n      turbidityAvg: '',\n      turbidityGraph: [],\n      tssLatest: '',\n      tssAverage: [],\n      tssAvg: '',\n      tssGraph: [],\n      salinityLatest: '',\n      salinityAverage: [],\n      salinityAvg: '',\n      salinityGraph: []\n    }, _defineProperty(_this$state, \"key\", 'tab1'), _defineProperty(_this$state, \"noTitleKey\", 'app'), _defineProperty(_this$state, \"lakeName\", ''), _defineProperty(_this$state, \"locationCity\", ''), _defineProperty(_this$state, \"locationState\", ''), _defineProperty(_this$state, \"managementContact\", ''), _defineProperty(_this$state, \"hoaContact\", ''), _defineProperty(_this$state, \"managementContactNumber\", ''), _defineProperty(_this$state, \"hoaContactNumber\", ''), _defineProperty(_this$state, \"isLoading\", true), _defineProperty(_this$state, \"dataSource\", []), _defineProperty(_this$state, \"latitude\", null), _defineProperty(_this$state, \"longitude\", null), _defineProperty(_this$state, \"error\", null), _defineProperty(_this$state, \"weather\", ''), _defineProperty(_this$state, \"center\", {\n      lat: 37.987636425563075,\n      lng: -121.63235758701154\n    }), _defineProperty(_this$state, \"userID\", ''), _defineProperty(_this$state, \"key\", \"1\"), _defineProperty(_this$state, \"snapArray\", []), _defineProperty(_this$state, \"snapArray1\", []), _defineProperty(_this$state, \"arrayData1\", []), _defineProperty(_this$state, \"arrayData2\", []), _defineProperty(_this$state, \"arrayKeys1\", []), _defineProperty(_this$state, \"arrayKeys2\", []), _defineProperty(_this$state, \"arrayValues2\", []), _defineProperty(_this$state, \"smallGraphKeys\", []), _defineProperty(_this$state, \"Sample_Item\", ''), _defineProperty(_this$state, \"sampleDate\", ''), _defineProperty(_this$state, \"sampleTitle\", ''), _defineProperty(_this$state, \"sampleID\", ''), _defineProperty(_this$state, \"sampleMisc\", ''), _defineProperty(_this$state, \"dataType\", ''), _defineProperty(_this$state, \"color\", '#000000'), _defineProperty(_this$state, \"item\", ''), _defineProperty(_this$state, \"timeFrame\", \"All\"), _defineProperty(_this$state, \"graphData\", []), _defineProperty(_this$state, \"turnedOffKeys\", []), _defineProperty(_this$state, \"currentData\", []), _defineProperty(_this$state, \"colorDisplay\", 'none'), _defineProperty(_this$state, \"childrenDrawer\", false), _defineProperty(_this$state, \"childrenDrawer1\", false), _defineProperty(_this$state, \"overwriteDisplay\", 'none'), _defineProperty(_this$state, \"addDisplay\", null), _defineProperty(_this$state, \"overwriteReport\", 'none'), _defineProperty(_this$state, \"addReport\", null), _defineProperty(_this$state, \"inputAdd\", null), _defineProperty(_this$state, \"inputOverwrite\", 'none'), _defineProperty(_this$state, \"tableKeys\", []), _defineProperty(_this$state, \"searchText\", ''), _defineProperty(_this$state, \"selectedRowKeys\", []), _defineProperty(_this$state, \"loading\", false), _defineProperty(_this$state, \"url\", null), _defineProperty(_this$state, \"blob\", null), _defineProperty(_this$state, \"file\", null), _defineProperty(_this$state, \"blobUrl\", null), _defineProperty(_this$state, \"visible\", false), _defineProperty(_this$state, \"visible1\", false), _defineProperty(_this$state, \"visible2\", false), _defineProperty(_this$state, \"visible3\", false), _defineProperty(_this$state, \"lakeName\", ''), _defineProperty(_this$state, \"locationCity\", ''), _defineProperty(_this$state, \"locationState\", ''), _defineProperty(_this$state, \"managementContact\", ''), _defineProperty(_this$state, \"hoaContact\", ''), _defineProperty(_this$state, \"managementContactNumber\", ''), _defineProperty(_this$state, \"hoaContactNumber\", ''), _this$state);\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //event triggered when text boxes of forms, values are changed\n\n\n  _createClass(Dashboard, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      this.setState(_defineProperty({}, name, value));\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    } //event triggered when form is submitted\n\n  }, {\n    key: \"snapshotToArray\",\n    value: function snapshotToArray(snapshot) {\n      var returnArr = [];\n      snapshot.forEach(function (childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        returnArr.push(item);\n      });\n      return returnArr;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n                  var profileRef = fire.database().ref(\"profileInformation/\".concat(user.uid));\n                  profileRef.on('value', function (snapshot) {\n                    var that = _this2;\n\n                    _this2.setState({\n                      lakeName: snapshot.child('lakeName').val(),\n                      locationCity: snapshot.child('locationCity').val(),\n                      locationState: snapshot.child('locationState').val(),\n                      managementContact: snapshot.child('managementContact').val(),\n                      hoaContact: snapshot.child('hoaContact').val(),\n                      managementContactNumber: snapshot.child('managementContactNumber').val(),\n                      hoaContactNumber: snapshot.child('hoaContactNumber').val(),\n                      latitude: snapshot.child('latitude').val(),\n                      longitude: snapshot.child('longitude').val(),\n                      center: {\n                        lat: snapshot.child('latitude').val(),\n                        lng: snapshot.child('longitude').val()\n                      }\n                    });\n\n                    console.log(_this2.state.center);\n                    var myLat = \"\".concat(_this2.state.latitude);\n                    var myLon = \"\".concat(_this2.state.longitude);\n                    var API_WEATHER = \"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(myLat, \"&lon=\").concat(myLon, \"&units=imperial&appid=\", '30573b68170d7f4400c7ac9c1c671ccf');\n                    fetch(API_WEATHER).then(function (response) {\n                      return response.json();\n                    }).then(function (responseJson) {\n                      console.log(responseJson);\n                      console.log(responseJson.weather);\n                      console.log(responseJson.name);\n\n                      _this2.setState({\n                        isLoading: false,\n                        dataSource: responseJson,\n                        currentCity: _this2.state.lakeName,\n                        currentTemp: responseJson.main.temp,\n                        currentIcon: 'http://openweathermap.org/img/w/' + responseJson.weather[0].icon + '.png',\n                        currentDescription: responseJson.weather[0].main,\n                        currentHumidity: responseJson.main.humidity\n                      });\n                    }).catch(function (error) {\n                      console.log(error);\n                    });\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getLocation\",\n    value: function getLocation() {\n      var _this3 = this;\n\n      // Get the current position of the user\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this3.setState(function (prevState) {\n          return {\n            latitude: 30,\n            longitude: 20\n          };\n        }, function () {\n          _this3.getWeather();\n        });\n      }, function (error) {\n        return _this3.setState({\n          weather: error.message\n        });\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(Radio.Group, {\n        size: \"small\",\n        value: this.state.timeFrame,\n        onChange: this.handleTimeFrameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(Radio.Button, {\n        value: \"three\",\n        onClick: this.threeMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"3 Months\"), React.createElement(Radio.Button, {\n        value: \"six\",\n        onClick: this.sixMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"6 Months\"), React.createElement(Radio.Button, {\n        value: \"twelve\",\n        onClick: this.twelveMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"12 Months\"), React.createElement(Radio.Button, {\n        value: \"All\",\n        onClick: this.allMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"All\"))), React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 10 / 3.0,\n        minHeight: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(ComposedChart, {\n        data: dataReverse,\n        syncId: \"anyId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(Label, {\n        offset: 200,\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      })), React.createElement(YAxis, {\n        hide: \"true\",\n        type: \"number\",\n        domain: [function (dataMin) {\n          return 0 - Math.abs(dataMin);\n        }, function (dataMax) {\n          return dataMax * 2;\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }), React.createElement(\"defs\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, data1.map(function (parameter) {\n        return React.createElement(\"linearGradient\", {\n          id: parameter.Sample_Item,\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }, React.createElement(\"stop\", {\n          offset: \"5%\",\n          stopColor: parameter.color,\n          stopOpacity: 0.3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        }), React.createElement(\"stop\", {\n          offset: \"95%\",\n          stopColor: parameter.color,\n          stopOpacity: 0.1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424\n          },\n          __self: this\n        }));\n      })), data1.map(function (parameter) {\n        if (parameter.dataType == 'Bar') {\n          console.log('something 1');\n          var CustomTag = Bar;\n          return React.createElement(CustomTag, {\n            type: \"monotone\",\n            dataKey: parameter.Sample_Item,\n            fillOpacity: 1,\n            strokeWidth: 2,\n            stroke: parameter.color,\n            fill: \"url(#\" + parameter.Sample_Item + \")\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 441\n            },\n            __self: this\n          }, React.createElement(LabelList, {\n            dataKey: parameter.Sample_Item,\n            position: \"top\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 441\n            },\n            __self: this\n          }));\n        }\n\n        if (parameter.dataType == 'Line') {\n          console.log('something 2');\n          var _CustomTag = Line;\n          return React.createElement(_CustomTag, {\n            type: \"monotone\",\n            dataKey: parameter.Sample_Item,\n            fillOpacity: 1,\n            strokeWidth: 2,\n            stroke: parameter.color,\n            fill: \"url(#\" + parameter.Sample_Item + \")\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 448\n            },\n            __self: this\n          }, React.createElement(LabelList, {\n            dataKey: parameter.Sample_Item,\n            position: \"top\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 448\n            },\n            __self: this\n          }));\n        }\n\n        if (parameter.dataType == 'Area') {\n          console.log('something 3');\n          var _CustomTag2 = Area;\n          return React.createElement(_CustomTag2, {\n            type: \"monotone\",\n            dataKey: parameter.Sample_Item,\n            fillOpacity: 1,\n            strokeWidth: 2,\n            stroke: parameter.color,\n            fill: \"url(#\" + parameter.Sample_Item + \")\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 455\n            },\n            __self: this\n          }, React.createElement(LabelList, {\n            dataKey: parameter.Sample_Item,\n            position: \"top\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 455\n            },\n            __self: this\n          }));\n        }\n\n        if (parameter.dataType == 'Off') {\n          console.log('No graph');\n        }\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      })))))), React.createElement(Row, {\n        style: {\n          paddingTop: '15px'\n        },\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: '100%'\n        },\n        bodyStyle: {\n          padding: \"0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(Row, {\n        align: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          paddingTop: '25px',\n          paddingLeft: '20px',\n          fontSize: '24px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, \"Water Quality\")), React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, data1.map(function (parameter) {\n        return React.createElement(Col, {\n          xs: 24,\n          sm: 12,\n          md: 8,\n          lg: 8,\n          xl: 8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 4,\n          sm: 4,\n          md: 4,\n          lg: 4,\n          xl: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"up-circle\",\n          style: {\n            fontSize: '32px',\n            color: parameter.color\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 16,\n          sm: 16,\n          md: 16,\n          lg: 16,\n          xl: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          style: {\n            fontSize: '24px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504\n          },\n          __self: this\n        }, parameter.Sample_Item))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507\n          },\n          __self: this\n        }, React.createElement(ResponsiveContainer, {\n          width: \"100%\",\n          aspect: 6 / 3.0,\n          minHeight: 90,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509\n          },\n          __self: this\n        }, React.createElement(ComposedChart, {\n          data: dataReverse,\n          syncId: \"anyId\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511\n          },\n          __self: this\n        }, React.createElement(XAxis, {\n          dataKey: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514\n          },\n          __self: this\n        }, React.createElement(Label, {\n          offset: 200,\n          position: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514\n          },\n          __self: this\n        })), React.createElement(YAxis, {\n          hide: \"true\",\n          type: \"number\",\n          domain: [function (dataMin) {\n            return 0 - Math.abs(dataMin);\n          }, function (dataMax) {\n            return dataMax * 2;\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516\n          },\n          __self: this\n        }), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517\n          },\n          __self: this\n        }), React.createElement(Line, {\n          type: \"monotone\",\n          dataKey: parameter.Sample_Item,\n          fillOpacity: 1,\n          strokeWidth: 2,\n          stroke: parameter.color,\n          fill: \"url(#\" + parameter.Sample_Item + \")\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519\n          },\n          __self: this\n        }))))));\n      }))))), React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, this.state.currentCity), React.createElement(\"img\", {\n        style: {\n          width: '60px',\n          height: '60px'\n        },\n        src: this.state.currentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, this.state.currentDescription), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, \"Temperature: \", this.state.currentTemp, \" F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, \"Humidity: \", this.state.currentHumidity, \"%\"))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 16,\n        lg: 16,\n        xl: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '29vh',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyAqe1Z8I94AcnNb3VsOam1tnUd_8WdubV4'\n        },\n        center: this.state.center,\n        defaultZoom: this.props.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(AnyReactComponent, {\n        lat: this.state.latitude,\n        lng: this.state.longitude,\n        text: this.state.lakeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.defaultProps = {\n  center: {\n    lat: 37.987636425563075,\n    lng: -121.63235758701154\n  },\n  zoom: 13\n};\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx"],"names":["React","Component","Navbar","Nav","FormGroup","Checkbox","Grid","PageHeader","Jumbotron","NavItem","Modal","Panel","Link","ReactDOM","FileSaver","jsPDF","domtoimage","fileDownload","Request","firebase","fire","ChromePicker","GoogleMapReact","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiBrush","TiArrowSortedUp","TiPencil","TiTrash","ComposedChart","LineChart","LabelList","ResponsiveContainer","ReferenceArea","AreaChart","Brush","Area","Line","Tooltip","XAxis","YAxis","BarChart","Bar","CartesianGrid","Legend","Label","Row","Col","Tabs","Table","Divider","Tag","message","Card","Drawer","Menu","Dropdown","Button","Layout","Carousel","Input","Popover","Icon","Cascader","Switch","Select","AutoComplete","Radio","Highlighter","CSVLink","CSVDownload","AnyReactComponent","text","TabPane","tabListNoTitle","key","tab","Dashboard","props","state","weatherData","iconData","id","currentCity","currentTemp","currentIcon","currentDescription","currentHumidity","checkboxState","checkboxState1","checkboxStatenitrogen","checkboxStatephosphorus","checkboxStatetds","checkboxStatepH","checkboxStatetss","checkboxStatesalinity","checkboxStateconductivity","checkboxStatehardness","checkboxStateturbidity","checkboxStatedo","tempPlot","doPlot","conductivityPlot","tdsPlot","salinityPlot","pHPlot","turbidityPlot","nitrogenPlot","phosphorusPlot","totalHardnessPlot","tssPlot","samples","orders","orders2","dataList","filter","blobUrl","nitrogenAverage","nitrogenAvg","nitrogenLatest","nitrogenGraph","phosphorusAverage","phosphorusAvg","phosphorusGraph","phoshporusLatest","dissolvedOxygenAverage","dissolvedOxygenAvg","dissolvedOxygenGraph","dissolvedOxygenLatest","turbidityLatest","turbidityAverage","turbidityAvg","turbidityGraph","tssLatest","tssAverage","tssAvg","tssGraph","salinityLatest","salinityAverage","salinityAvg","salinityGraph","lat","lng","handleChange","bind","e","name","target","value","setState","snapshot","returnArr","forEach","childSnapshot","item","val","push","removeAuthListener","auth","onAuthStateChanged","user","profileRef","database","ref","uid","on","that","lakeName","child","locationCity","locationState","managementContact","hoaContact","managementContactNumber","hoaContactNumber","latitude","longitude","center","console","log","myLat","myLon","API_WEATHER","fetch","then","response","json","responseJson","weather","isLoading","dataSource","main","temp","icon","humidity","catch","error","navigator","geolocation","getCurrentPosition","position","prevState","getWeather","enableHighAccuracy","timeout","maximumAge","textAlign","width","timeFrame","handleTimeFrameChange","threeMonths","sixMonths","twelveMonths","allMonths","dataReverse","dataMin","Math","abs","dataMax","data1","map","parameter","Sample_Item","color","dataType","CustomTag","paddingTop","padding","paddingLeft","fontSize","height","zoom","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Nav, FormGroup, Checkbox, Grid, PageHeader, Jumbotron, NavItem, Modal, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\n\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { ChromePicker } from 'react-color';\nimport GoogleMapReact from 'google-map-react';\n\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport { ComposedChart, LineChart, LabelList, ResponsiveContainer, ReferenceArea, AreaChart, Brush, Area, Line, Tooltip, XAxis, YAxis, BarChart, Bar, CartesianGrid, Legend, Label} from 'recharts';\n\nimport { Row, Col, Tabs, Table, Divider, Tag, message, Card, Drawer, Menu, Dropdown, Button, Layout, Carousel, Input, Popover, Icon, Cascader, Switch, Select, AutoComplete, Radio } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst TabPane = Tabs.TabPane;\n\nconst tabListNoTitle = [{\n  key: 'article',\n  tab: 'article',\n}, {\n  key: 'app',\n  tab: 'app',\n}, {\n  key: 'project',\n  tab: 'project',\n}];\n\nexport default class Dashboard extends Component {\n\n  static defaultProps = {\ncenter: {\n  lat: 37.987636425563075,\n  lng: -121.63235758701154\n},\nzoom: 13\n};\n\n\n\n\n  constructor(props) {\n      super(props);\n\n\n\n      this.state = {\n\n        //The data that goes into the table showing weather data\n        weatherData: [],\n        iconData: [],\n\n        id: '',\n        key: 1,\n\n        currentCity: '',\n        currentTemp: '',\n        currentIcon: '',\n        currentDescription: '',\n        currentHumidity: '',\n\n        //checkbox status\n        checkboxState: true,\n        checkboxState1: true,\n        checkboxStatenitrogen: true,\n        checkboxStatephosphorus: true,\n        checkboxStatetds: true,\n        checkboxStatepH: true,\n        checkboxStatetss: true,\n        checkboxStatesalinity: true,\n        checkboxStateconductivity: true,\n        checkboxStatehardness: true,\n        checkboxStateturbidity: true,\n        checkboxStatedo: true,\n\n        //these are for the graphs\n        tempPlot: 'temp',\n        doPlot: 'do',\n        conductivityPlot: 'conductivity',\n        tdsPlot: 'tds',\n        salinityPlot: 'salinity',\n        pHPlot: 'pH',\n        turbidityPlot: 'turbidity',\n        nitrogenPlot: 'nitrogen',\n        phosphorusPlot: 'phosphorus',\n        totalHardnessPlot: 'totalHardness',\n        tssPlot: 'tss',\n\n        //this is the object array for the table\n        samples: [],\n        orders: [],\n        orders2: [],\n        dataList: [],\n        filter: \"\",\n        blobUrl: null,\n\n        //averages\n        nitrogenAverage: [],\n        nitrogenAvg: '',\n        nitrogenLatest: '',\n        nitrogenGraph: [],\n        phosphorusAverage: [],\n        phosphorusAvg: '',\n        phosphorusGraph: [],\n        phoshporusLatest: '',\n        dissolvedOxygenAverage: [],\n        dissolvedOxygenAvg: '',\n        dissolvedOxygenGraph: [],\n        dissolvedOxygenLatest: '',\n\n        turbidityLatest: '',\n        turbidityAverage: [],\n        turbidityAvg: '',\n        turbidityGraph: [],\n        tssLatest: '',\n        tssAverage: [],\n        tssAvg: '',\n        tssGraph: [],\n        salinityLatest: '',\n        salinityAverage: [],\n        salinityAvg: '',\n        salinityGraph: [],\n\n        key: 'tab1',\n        noTitleKey: 'app',\n\n        //Inputs for Profile Page\n        lakeName: '',\n        locationCity: '',\n        locationState: '',\n        managementContact: '',\n        hoaContact: '',\n        managementContactNumber: '',\n        hoaContactNumber: '',\n        isLoading: true,\n        dataSource: [],\n        latitude: null,\n        longitude: null,\n        error: null,\n        weather: '',\n        center: {\n          lat: 37.987636425563075,\n          lng: -121.63235758701154\n        },\n\n        userID: '',\n        key: \"1\",\n        snapArray: [],\n        snapArray1: [],\n        arrayData1: [],\n        arrayData2: [],\n        arrayKeys1: [],\n        arrayKeys2: [],\n        arrayValues2: [],\n        smallGraphKeys: [],\n\n        Sample_Item: '',\n        sampleDate: '',\n        sampleTitle: '',\n        sampleID: '',\n        sampleMisc: '',\n        dataType: '',\n        color: '#000000',\n\n        item: '',\n        timeFrame: \"All\",\n        graphData: [],\n        turnedOffKeys: [],\n\n        currentData: [],\n        colorDisplay: 'none',\n\n        childrenDrawer: false,\n        childrenDrawer1: false,\n\n        overwriteDisplay: 'none',\n        addDisplay: null,\n\n        overwriteReport: 'none',\n        addReport: null,\n\n        inputAdd: null,\n        inputOverwrite: 'none',\n\n\n        tableKeys: [],\n        searchText: '',\n        selectedRowKeys: [], // Check here to configure the default column\n        loading: false,\n\n\n\n        url: null,\n        blob: null,\n        file:null,\n        blobUrl: null,\n\n\n        //for drawers\n        visible: false,\n        visible1: false,\n        visible2: false,\n        visible3: false,\n\n        //Inputs for Profile Page\n        lakeName: '',\n        locationCity: '',\n        locationState: '',\n        managementContact: '',\n        hoaContact: '',\n        managementContactNumber: '',\n        hoaContactNumber: '',\n\n\n\n\n\n\n\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n\n\n\n    }\n\n\n    //event triggered when text boxes of forms, values are changed\n    handleChange(e) {\n      const name = e.target.name;\n  const value = e.target.value;\n  this.setState({ [name]: value });\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n\n\n    }\n    //event triggered when form is submitted\n\n\n   snapshotToArray(snapshot) {\n      var returnArr = [];\n\n      snapshot.forEach(function(childSnapshot) {\n          var item = childSnapshot.val();\n          item.key = childSnapshot.key;\n\n          returnArr.push(item);\n      });\n\n      return returnArr;\n  };\n  async componentDidMount() {\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n\n\n\n    const profileRef = fire.database().ref(`profileInformation/${user.uid}`);\n    profileRef.on('value', (snapshot) => {\n      var that = this;\n\n\n    this.setState({\n      lakeName: snapshot.child('lakeName').val(),\n      locationCity: snapshot.child('locationCity').val(),\n      locationState: snapshot.child('locationState').val(),\n      managementContact: snapshot.child('managementContact').val(),\n      hoaContact: snapshot.child('hoaContact').val(),\n      managementContactNumber: snapshot.child('managementContactNumber').val(),\n      hoaContactNumber: snapshot.child('hoaContactNumber').val(),\n      latitude: snapshot.child('latitude').val(),\n      longitude: snapshot.child('longitude').val(),\n      center: {\n        lat: snapshot.child('latitude').val(),\n        lng: snapshot.child('longitude').val()\n      },\n\n    });\n\n\n    console.log(this.state.center);\n              var myLat = `${this.state.latitude}`;\n                var myLon = `${this.state.longitude}`;\n             let API_WEATHER = `http://api.openweathermap.org/data/2.5/weather?lat=${myLat}&lon=${myLon}&units=imperial&appid=${'30573b68170d7f4400c7ac9c1c671ccf'}`;\n\n             fetch(API_WEATHER)\n          .then(response => response.json())\n          .then(responseJson => {\n            console.log(responseJson);\n            console.log(responseJson.weather);\n            console.log(responseJson.name);\n            this.setState({\n              isLoading: false,\n              dataSource: responseJson,\n              currentCity: this.state.lakeName,\n              currentTemp: responseJson.main.temp,\n              currentIcon: 'http://openweathermap.org/img/w/' + responseJson.weather[0].icon + '.png',\n              currentDescription: responseJson.weather[0].main,\n              currentHumidity: responseJson.main.humidity,\n\n\n            });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n\n\n  });\n\n\n\n  });\n\n\n\n\n\n\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   getLocation(){\n\n       // Get the current position of the user\n       navigator.geolocation.getCurrentPosition(\n       (position) => {\n           this.setState(\n           (prevState) => ({\n               latitude: 30,\n               longitude: 20\n               }), () => { this.getWeather(); }\n           );\n       },\n           (error) => this.setState({ weather: error.message }),\n           { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 },\n       );\n   }\n\n\n\n\n  render() {\n\n\n\n\n\n    return (\n\n      <Layout>\n\n\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={24} sm={24} md={24} lg={24} xl={24} style={{textAlign: 'left'}}>\n\n\n\n          <Row type=\"flex\" justify=\"center\">\n            <Col span={24} style={{textAlign: 'center'}}>\n              <Card style={{ width: '100%' }}>\n                <div style={{textAlign: 'right'}}>\n                  <Radio.Group size=\"small\" value={this.state.timeFrame} onChange={this.handleTimeFrameChange}>\n            <Radio.Button value=\"three\" onClick={this.threeMonths}>3 Months</Radio.Button>\n            <Radio.Button value=\"six\" onClick={this.sixMonths}>6 Months</Radio.Button>\n            <Radio.Button value=\"twelve\" onClick={this.twelveMonths}>12 Months</Radio.Button>\n            <Radio.Button value=\"All\" onClick={this.allMonths}>All</Radio.Button>\n          </Radio.Group></div>\n        <ResponsiveContainer width=\"100%\" aspect={10/3.0} minHeight={300}>\n                  <ComposedChart data={dataReverse}\n            syncId=\"anyId\">\n\n\n            <XAxis dataKey=\"date\"><Label  offset={200} position=\"top\" /></XAxis>\n\n            <YAxis hide= \"true\" type=\"number\" domain={[dataMin => (0 - Math.abs(dataMin)), dataMax => (dataMax * 2)]} />\n            <Tooltip />\n\n\n            <defs>\n              {data1.map(parameter => {\n                return (\n\n                    <linearGradient id={parameter.Sample_Item} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                      <stop offset=\"5%\" stopColor={parameter.color} stopOpacity={0.3}/>\n                      <stop offset=\"95%\" stopColor={parameter.color} stopOpacity={0.1}/>\n                    </linearGradient>\n\n\n                )\n              })}\n  </defs>\n\n\n\n\n              {data1.map(parameter => {\n\n                if (parameter.dataType == 'Bar') {\n                  console.log('something 1')\n                  const CustomTag = Bar;\n                  return(\n                    <CustomTag type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}><LabelList dataKey={parameter.Sample_Item} position=\"top\" /></CustomTag>\n                  )\n                }\n                if (parameter.dataType == 'Line') {\n                  console.log('something 2')\n                  const CustomTag = Line;\n                  return(\n                    <CustomTag type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}><LabelList dataKey={parameter.Sample_Item} position=\"top\" /></CustomTag>\n                  )\n                }\n                if (parameter.dataType == 'Area') {\n                  console.log('something 3')\n                  const CustomTag = Area;\n                  return(\n                    <CustomTag type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}><LabelList dataKey={parameter.Sample_Item} position=\"top\" /></CustomTag>\n                  )\n                }\n\n                if (parameter.dataType == 'Off') {\n                  console.log('No graph')\n\n\n                }\n\n\n              })}\n\n\n\n\n\n\n\n            <Legend />\n\n          </ComposedChart>\n           </ResponsiveContainer>\n              </Card>\n            </Col>\n\n\n          </Row>\n\n          <Row style={{paddingTop: '15px'}} type=\"flex\" justify=\"center\">\n            <Col span={24}>\n            <Card style={{ width: '100%'}} bodyStyle={{padding: \"0\"}}>\n              <Row align=\"middle\">\n                <p style={{paddingTop: '25px', paddingLeft: '20px', fontSize: '24px'}}>Water Quality</p>\n              </Row>\n              <Row  type=\"flex\" justify=\"center\">\n\n\n                {data1.map(parameter => {\n\n\n                    return(\n                      <Col xs={24} sm={12} md={8} lg={8} xl={8}>\n                        <Card >\n                          <Row>\n                            <Col xs={4} sm={4} md={4} lg={4} xl={4}>\n                            <Icon type=\"up-circle\"style={{fontSize: '32px',color: parameter.color}} />\n                            </Col>\n                            <Col  xs={16} sm={16} md={16} lg={16} xl={16}>\n                            <b style={{fontSize: '24px'}}>{parameter.Sample_Item}</b>\n                            </Col>\n                            </Row>\n                            <Row>\n\n                      <ResponsiveContainer width=\"100%\" aspect={6/3.0} minHeight={90}>\n\n                      <ComposedChart data={dataReverse}\n                syncId=\"anyId\">\n\n                <XAxis dataKey=\"date\"><Label  offset={200} position=\"top\" /></XAxis>\n\n                <YAxis hide= \"true\" type=\"number\" domain={[dataMin => (0 - Math.abs(dataMin)), dataMax => (dataMax * 2)]} />\n                <Tooltip />\n\n                      <Line type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}></Line>\n\n\n\n\n              </ComposedChart>\n              </ResponsiveContainer>\n              </Row>\n              </Card>\n              </Col>\n                    )\n\n\n\n\n                })}\n\n\n\n\n                        </Row>\n\n            </Card>\n            </Col>\n\n          </Row>\n\n\n\n\n\n\n\n\n\n         <Card  style={{textAlign: 'left'}} bordered={true} >\n           <div style={{textAlign: 'center'}}>\n           <h3>{this.state.currentCity}</h3>\n             <img style={{width: '60px', height: '60px'}} src={this.state.currentIcon} />\n             <h3>{this.state.currentDescription}</h3>\n             <p>Temperature: {this.state.currentTemp} F</p>\n             <p>Humidity: {this.state.currentHumidity}%</p>\n             </div>\n         </Card>\n\n\n        <Col xs={24} sm={24} md={16} lg={16} xl={16}>\n         <Card  style={{textAlign: 'left'}} bordered={true} >\n           <div style={{ height: '29vh', width: '100%' }}>\n             <GoogleMapReact\n               bootstrapURLKeys={{ key: 'AIzaSyAqe1Z8I94AcnNb3VsOam1tnUd_8WdubV4'}}\n               center={this.state.center}\n               defaultZoom={this.props.zoom}\n             >\n               <AnyReactComponent\n                 lat={this.state.latitude}\n                 lng={this.state.longitude}\n                 text={this.state.lakeName}\n               />\n             </GoogleMapReact>\n           </div>\n         </Card>\n\n        </Col>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</Col>\n</Row>\n\n\n\n\n\n\n\n\n      </Layout>\n\n\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}