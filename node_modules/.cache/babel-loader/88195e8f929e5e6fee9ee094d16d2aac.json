{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _griddleConnect = require('../../../utils/griddleConnect');\n\nvar _compose = require('recompose/compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _mapProps = require('recompose/mapProps');\n\nvar _mapProps2 = _interopRequireDefault(_mapProps);\n\nvar _getContext = require('recompose/getContext');\n\nvar _getContext2 = _interopRequireDefault(_getContext);\n\nvar _localSelectors = require('../selectors/localSelectors');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ComposedTableBodyContainer = function ComposedTableBodyContainer(OriginalComponent) {\n  return (0, _compose2.default)((0, _getContext2.default)({\n    components: _propTypes2.default.object,\n    selectors: _propTypes2.default.object\n  }), (0, _mapProps2.default)(function (props) {\n    return _extends({\n      Row: props.components.Row,\n      visibleRowIdsSelector: props.selectors.visibleRowIdsSelector\n    }, props);\n  }), (0, _griddleConnect.connect)(function (state, props) {\n    return {\n      visibleRowIds: props.visibleRowIdsSelector(state),\n      className: (0, _localSelectors.classNamesForComponentSelector)(state, 'TableBody'),\n      style: (0, _localSelectors.stylesForComponentSelector)(state, 'TableBody')\n    };\n  }) // withHandlers({\n  //   Row: props => props.components.Row\n  // })\n  )(function (_ref) {\n    var Row = _ref.Row,\n        visibleRowIds = _ref.visibleRowIds,\n        style = _ref.style,\n        className = _ref.className;\n    return _react2.default.createElement(OriginalComponent, {\n      rowIds: visibleRowIds,\n      Row: Row,\n      style: style,\n      className: className\n    });\n  });\n};\n\nexports.default = ComposedTableBodyContainer;","map":null,"metadata":{},"sourceType":"script"}