{"ast":null,"code":"import _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, Grid, Jumbotron, Row, Col, NavItem, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport { LineChart, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.ammoniaOn = function () {\n      var ammonia = \"ammoniaResult\";\n\n      _this.setState({\n        ammoniaPlot: ammonia\n      });\n    };\n\n    _this.ammoniaOff = function () {\n      var ammonia = '';\n\n      _this.setState({\n        ammoniaPlot: ammonia\n      });\n    };\n\n    _this.filter = function (url) {\n      domtoimage.toBlob(document.getElementById('my-node')).then(function (blob) {\n        console.log(blob);\n        var blobUrl = URL.createObjectURL(blob);\n        console.log(blobUrl);\n\n        _this.setState({\n          blobUrl: blobUrl\n        });\n      });\n    };\n\n    _this.onDrag = function (event) {\n      event.preventDefault();\n    };\n\n    _this.onDrop = function (event) {\n      event.preventDefault();\n      var file = event.dataTransfer.files[0];\n\n      _this.setState({\n        file: file\n      });\n    };\n\n    _this.state = {\n      sampleDate: '',\n      sampleTime: '',\n      operator: '',\n      sampleLocation: '',\n      temperatureResult: '',\n      conductivityResult: '',\n      pHResult: '',\n      DOResult: '',\n      nitrateResult: '',\n      nitriteResult: '',\n      ammoniaResult: '',\n      totalInorganicNitrogen: '',\n      turbidityResult: '',\n      TSSResult: '',\n      id: '',\n      key: 1,\n      idKey: '',\n      page: '',\n      area: '',\n      areaData: [],\n      responsibility: '',\n      responsibilityData: [],\n      startDate: '',\n      startDateData: [],\n      endDate: '',\n      endDateData: [],\n      description: '',\n      descriptionData: [],\n      checkbox: '',\n      checkboxData: [],\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blob: null,\n      file: null,\n      blobUrl: null,\n      report: [],\n      imageSource: '',\n      ammoniaPlot: 'ammoniaResult' //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n    };\n    _this.filter = _this.filter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var apiKey = e60406d8d1152d5b1e8413bb058aa602;\n        var api_call = fetch(\"http://api.openweathermap.org/data/2.5/weather?q=london,uk&appid=\".concat(apiKey));\n        var response = api_call.json();\n        console.log(response);\n        var samplesRef = fire.database().ref(\"dailySamples/\".concat(user.uid));\n        samplesRef.on('value', function (snapshot) {\n          var startDateData = [];\n          var endDateData = [];\n          var descriptionData = [];\n          var responsibilityData = [];\n          var areaData = [];\n          var checkboxData = [];\n          var idData = [];\n          var sampleDateData = [];\n          var ammoniaResultData = [];\n          var dataList = snapshot.val();\n          var filter = [];\n          var orders = snapshot.val();\n          var orders2 = snapshot.val();\n          var orders3 = snapshot.val();\n          var newState = [];\n          var newState2 = [];\n          var newState3 = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              startDate: orders[order].startDate,\n              endDate: orders[order].endDate,\n              description: orders[order].description,\n              responsibility: orders[order].responsibility,\n              area: orders[order].area,\n              sampleDate: orders[order].sampleDate,\n              sampleTime: orders[order].sampleTime,\n              operator: orders[order].operator,\n              sampleLocation: orders[order].sampleLocation,\n              temperatureResult: orders[order].temperatureResult,\n              conductivityResult: orders[order].conductivityResult,\n              pHResult: orders[order].pHResult,\n              DOResult: orders[order].DOResult,\n              nitrateResult: orders[order].nitrateResult,\n              nitriteResult: orders[order].nitriteResult,\n              ammoniaResult: orders[order].ammoniaResult,\n              totalInorganicNitrogen: orders[order].totalInorganicNitrogen,\n              turbidityResult: orders[order].turbidityResult,\n              TSSResult: orders[order].TSSResult\n            });\n          }\n\n          for (var order2 in orders2) {\n            newState2.push({\n              sampleDate: orders2[order2].sampleDate,\n              DOResult: orders2[order2].DOResult,\n              nitrateResult: orders2[order2].nitrateResult,\n              nitriteResult: orders2[order2].nitriteResult,\n              ammoniaResult: orders2[order2].ammoniaResult\n            });\n          }\n\n          newState2.sort(function (a, b) {\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n          });\n          newState.sort(function (a, b) {\n            if (b.sampleDate === a.sampleDate) {\n              return 0;\n            }\n\n            return b.sampleDate > a.sampleDate ? 1 : -1;\n          });\n\n          _this2.setState({\n            orders: newState,\n            orders2: newState2,\n            dataList: newState\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var file = this.state.file;\n      console.log(this.state.file);\n      var url = file && URL.createObjectURL(file);\n      var img = document.createElement(\"my-node\");\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 11,\n        sm: 11,\n        md: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Summer Lake\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Homeowners Association\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(Row, {\n        style: {\n          paddingTop: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 5,\n        sm: 5,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx"],"names":["React","Component","Navbar","Nav","Grid","Jumbotron","Row","Col","NavItem","Button","Link","ReactDOM","FileSaver","jsPDF","domtoimage","fileDownload","Request","firebase","fire","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiArrowSortedUp","TiPencil","TiTrash","LineChart","BarChart","Bar","Surface","ReferenceLine","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Dashboard","props","ammoniaOn","ammonia","setState","ammoniaPlot","ammoniaOff","filter","url","toBlob","document","getElementById","then","blob","console","log","blobUrl","URL","createObjectURL","onDrag","event","preventDefault","onDrop","file","dataTransfer","files","state","sampleDate","sampleTime","operator","sampleLocation","temperatureResult","conductivityResult","pHResult","DOResult","nitrateResult","nitriteResult","ammoniaResult","totalInorganicNitrogen","turbidityResult","TSSResult","id","key","idKey","page","area","areaData","responsibility","responsibilityData","startDate","startDateData","endDate","endDateData","description","descriptionData","checkbox","checkboxData","samples","orders","orders2","dataList","report","imageSource","bind","removeAuthListener","auth","onAuthStateChanged","user","apiKey","e60406d8d1152d5b1e8413bb058aa602","api_call","fetch","response","json","samplesRef","database","ref","uid","on","snapshot","idData","sampleDateData","ammoniaResultData","val","orders3","newState","newState2","newState3","order","push","order2","sort","a","b","img","createElement","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Nav, Grid, Jumbotron, Row, Col, NavItem, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\n\nimport firebase from 'firebase';\nimport { fire } from '../fire';\n\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport { LineChart, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\n\nexport default class Dashboard extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        sampleDate: '',\n        sampleTime: '',\n        operator: '',\n        sampleLocation: '',\n        temperatureResult: '',\n        conductivityResult: '',\n        pHResult: '',\n        DOResult: '',\n        nitrateResult: '',\n        nitriteResult: '',\n        ammoniaResult: '',\n        totalInorganicNitrogen: '',\n        turbidityResult: '',\n        TSSResult: '',\n\n        id: '',\n        key: 1,\n        idKey: '',\n        page: '',\n        area: '',\n        areaData: [],\n        responsibility: '',\n        responsibilityData: [],\n        startDate: '',\n        startDateData: [],\n        endDate: '',\n        endDateData: [],\n        description: '',\n        descriptionData: [],\n        checkbox: '',\n        checkboxData: [],\n        samples: [],\n        orders: [],\n        orders2: [],\n        dataList: [],\n        filter: \"\",\n        blob: null,\n        file:null,\n        blobUrl: null,\n\n        report: [],\n\n        imageSource: '',\n\n        ammoniaPlot: 'ammoniaResult',\n\n\n\n      }\n      //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n      this.filter = this.filter.bind(this);\n\n\n\n    }\n\n\n\n\n\n\n\n  componentDidMount() {\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n      let apiKey = e60406d8d1152d5b1e8413bb058aa602;\n\n      let api_call =  fetch(`http://api.openweathermap.org/data/2.5/weather?q=london,uk&appid=${apiKey}`);\n\n      let response =  api_call.json();\n\n      console.log(response);\n\n\n\n      const samplesRef = fire.database().ref(`dailySamples/${user.uid}`);\n      samplesRef.on('value', (snapshot) => {\n\n        let startDateData = [];\n        let endDateData = [];\n        let descriptionData = [];\n        let responsibilityData = [];\n        let areaData = [];\n        let checkboxData = [];\n        let idData = [];\n        let sampleDateData = [];\n        let ammoniaResultData = [];\n\n        let dataList = snapshot.val();\n        let filter = [];\n\n\n      let orders = snapshot.val();\n      let orders2 = snapshot.val();\n      let orders3 = snapshot.val();\n\n      let newState = [];\n      let newState2 = [];\n      let newState3 = [];\n\n      for (let order in orders) {\n        newState.push({\n          id: order,\n          startDate: orders[order].startDate,\n          endDate: orders[order].endDate,\n          description: orders[order].description,\n          responsibility: orders[order].responsibility,\n          area: orders[order].area,\n\n          sampleDate: orders[order].sampleDate,\n          sampleTime: orders[order].sampleTime,\n          operator: orders[order].operator,\n          sampleLocation: orders[order].sampleLocation,\n          temperatureResult: orders[order].temperatureResult,\n          conductivityResult: orders[order].conductivityResult,\n          pHResult: orders[order].pHResult,\n          DOResult: orders[order].DOResult,\n          nitrateResult: orders[order].nitrateResult,\n          nitriteResult: orders[order].nitriteResult,\n          ammoniaResult: orders[order].ammoniaResult,\n          totalInorganicNitrogen: orders[order].totalInorganicNitrogen,\n          turbidityResult: orders[order].turbidityResult,\n          TSSResult: orders[order].TSSResult,\n\n        });\n      }\n      for (let order2 in orders2) {\n        newState2.push({\n\n          sampleDate: orders2[order2].sampleDate,\n          DOResult: orders2[order2].DOResult,\n          nitrateResult: orders2[order2].nitrateResult,\n          nitriteResult: orders2[order2].nitriteResult,\n          ammoniaResult: orders2[order2].ammoniaResult,\n\n        });\n      }\n      newState2.sort(function(a, b) {\n\n        if (a.sampleDate === b.sampleDate) {\n          return 0;\n        }\n        return a.sampleDate > b.sampleDate ? 1 : -1;\n    });\n    newState.sort(function(a, b) {\n\n      if (b.sampleDate === a.sampleDate) {\n        return 0;\n      }\n      return b.sampleDate > a.sampleDate ? 1 : -1;\n  });\n\n\n      this.setState({\n        orders: newState,\n        orders2: newState2,\n        dataList: newState,\n      });\n    });\n  });\n  }\n\n  ammoniaOn = () => {\n    let ammonia = \"ammoniaResult\";\n    this.setState({\n      ammoniaPlot: ammonia,\n\n    })\n  }\n\n  ammoniaOff = () => {\n    let ammonia = '';\n    this.setState({\n      ammoniaPlot: ammonia,\n\n    })\n\n  }\n\n  filter = (url) => {\n\n\n\n    domtoimage.toBlob(document.getElementById('my-node'))\n        .then((blob) => {\n\n\n            console.log(blob);\n            const blobUrl = URL.createObjectURL(blob);\n\n            console.log(blobUrl);\n\n            this.setState({\n              blobUrl: blobUrl,\n            })\n\n        });\n\n\n}\n\nonDrag = event => {\n  event.preventDefault()\n}\n\nonDrop = event => {\n  event.preventDefault()\n  let file = event.dataTransfer.files[0]\n  this.setState({ file })\n}\n\n\n\n\n\n\n\n\n  render() {\n    let { file } = this.state\n    console.log(this.state.file);\n    let url = file && URL.createObjectURL(file)\n\n\n    let img = document.createElement(\"my-node\");\n\n\n\n\n    return (\n      <Grid>\n        <Row>\n          <Col xs={11} sm={11} md={11} >\n        <Jumbotron>\n          <h1>Summer Lake</h1>\n          <p>\n            Homeowners Association\n          </p>\n\n\n        </Jumbotron>\n        <hr></hr>\n\n\n\n\n\n\n\n<Row style={{paddingTop: \"50px\"}}>\n  <Col xs={5} sm={5} md={5} >\n\n</Col>\n\n</Row>\n\n\n\n\n\n\n\n        </Col>\n        </Row>\n      </Grid>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}