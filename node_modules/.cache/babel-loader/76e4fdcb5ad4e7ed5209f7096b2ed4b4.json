{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ColumnDefinition = function (_Component) {\n  _inherits(ColumnDefinition, _Component);\n\n  function ColumnDefinition() {\n    _classCallCheck(this, ColumnDefinition);\n\n    return _possibleConstructorReturn(this, (ColumnDefinition.__proto__ || Object.getPrototypeOf(ColumnDefinition)).apply(this, arguments));\n  }\n\n  _createClass(ColumnDefinition, [{\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return ColumnDefinition;\n}(_react.Component);\n\nColumnDefinition.propTypes = {\n  //The name of the column that this definition applies to.\n  id: _propTypes2.default.string.isRequired,\n  //The order that this column appears in. If not specified will just use the order that they are defined\n  order: _propTypes2.default.number,\n  //Determines whether or not the user can disable this column from the settings.\n  locked: _propTypes2.default.bool,\n  //The css class name, or a function to generate a class name from props, to apply to the header for the column.\n  headerCssClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  //The css class name, or a function to generate a class name from props, to apply to this column.\n  cssClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  //The display name for the column. This is used when the name in the column heading and settings should be different from the data passed in to the Griddle component.\n  title: _propTypes2.default.string,\n  //The component that should be rendered instead of the standard column data. This component will still be rendered inside of a TD element.\n  customComponent: _propTypes2.default.func,\n  //The component that should be used instead of the normal title\n  customHeadingComponent: _propTypes2.default.func,\n  //Can this column be filtered\n  filterable: _propTypes2.default.bool,\n  //Can this column be sorted\n  sortable: _propTypes2.default.bool,\n  //What sort type this column uses - magic string :shame:\n  sortType: _propTypes2.default.string,\n  //Any extra data that should be passed to each instance of this column\n  extraData: _propTypes2.default.object,\n  //The width of this column -- this is string so things like % can be specified\n  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  //The number of cells this column should extend. Default is 1.\n  colSpan: _propTypes2.default.number,\n  // Is this column visible\n  visible: _propTypes2.default.bool,\n  // Is this column metadta\n  isMetadata: _propTypes2.default.bool\n};\nexports.default = ColumnDefinition;","map":null,"metadata":{},"sourceType":"script"}