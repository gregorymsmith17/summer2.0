{"ast":null,"code":"import _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/monthlySamples.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, ResponsiveEmbed, ButtonToolbar, Grid, Radio, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn, ExportCSVButton } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport domtoimage from 'dom-to-image';\nimport { ChromePicker } from 'react-color';\nimport fileDownload from \"js-file-download\";\nimport { LineChart, LabelList, ResponsiveContainer, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label } from 'recharts';\nimport { Row, Form, DatePicker, Col, Tabs, Card, Drawer, Menu, Icon, Button, Layout, Carousel } from 'antd';\nvar TabPane = Tabs.TabPane;\nvar styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  }\n};\nvar MonthPicker = DatePicker.MonthPicker,\n    RangePicker = DatePicker.RangePicker;\n\nvar monthlySamples =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(monthlySamples, _Component);\n\n  function monthlySamples(props) {\n    var _this;\n\n    _classCallCheck(this, monthlySamples);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(monthlySamples).call(this, props));\n\n    _this.handleSubmit1 = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, fieldsValue) {\n        if (err) {\n          return;\n        } // Should format date value before submit.\n\n\n        var rangeValue = fieldsValue['range-picker'];\n        var rangeTimeValue = fieldsValue['range-time-picker'];\n\n        var values = _objectSpread({}, fieldsValue, {\n          'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n          'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\n          'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\n          'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n          'range-time-picker': [rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'), rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss')],\n          'time-picker': fieldsValue['time-picker'].format('HH:mm:ss')\n        });\n\n        console.log('Received values of form: ', values);\n      });\n    };\n\n    _this.writeStates = function (itemId) {\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(_this.state.id));\n        sampleRef.child(\"id\").set(_this.state.id);\n        sampleRef.child(\"sampleDate\").set(_this.state.sampleDate);\n        sampleRef.child(\"sampleTaker\").set(_this.state.sampleTaker);\n        sampleRef.child(\"temp\").set(_this.state.temp);\n        sampleRef.child(\"do\").set(_this.state.do);\n        sampleRef.child(\"conductivity\").set(_this.state.conductivity);\n        sampleRef.child(\"tds\").set(_this.state.tds);\n        sampleRef.child(\"salinity\").set(_this.state.salinity);\n        sampleRef.child(\"pH\").set(_this.state.pH);\n        sampleRef.child(\"turbidity\").set(_this.state.turbidity);\n        sampleRef.child(\"nitrogen\").set(_this.state.nitrogen);\n        sampleRef.child(\"phosphorus\").set(_this.state.phosphorus);\n        sampleRef.child(\"totalHardness\").set(_this.state.totalHardness);\n        sampleRef.child(\"tss\").set(_this.state.tss);\n        sampleRef.child(\"sampleNotes\").set(_this.state.sampleNotes);\n      });\n    };\n\n    _this.fillEmpty = function (itemId) {\n      var area = '';\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n          }\n\n          _this.setState({\n            visible: true,\n            sampleDate: '',\n            sampleTaker: '',\n            temp: '',\n            do: '',\n            conductivity: '',\n            tds: '',\n            salinity: '',\n            pH: '',\n            turbidity: '',\n            nitrogen: '',\n            phosphorus: '',\n            totalHardness: '',\n            tss: '',\n            sampleNotes: ''\n          });\n        });\n      });\n    };\n\n    _this.exportPDF = function () {\n      _this.resume.save();\n    };\n\n    _this.nitrogenSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.nitrogen - b.nitrogen;\n      } else {\n        return b.nitrogen - a.nitrogen;\n      }\n    };\n\n    _this.phosphorusSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.phosphorus - b.phosphorus;\n      } else {\n        return b.phosphorus - a.phosphorus;\n      }\n    };\n\n    _this.tdsSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.tds - b.tds;\n      } else {\n        return b.tds - a.tds;\n      }\n    };\n\n    _this.tssSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.tss - b.tss;\n      } else {\n        return b.tss - a.tss;\n      }\n    };\n\n    _this.salinitySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.salinity - b.salinity;\n      } else {\n        return b.salinity - a.salinity;\n      }\n    };\n\n    _this.turbiditySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.turbidity - b.turbidity;\n      } else {\n        return b.turbidity - a.turbidity;\n      }\n    };\n\n    _this.pHSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.pH - b.pH;\n      } else {\n        return b.pH - a.pH;\n      }\n    };\n\n    _this.hardnessSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.totalHardness - b.totalHardness;\n      } else {\n        return b.totalHardness - a.totalHardness;\n      }\n    };\n\n    _this.tempSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.temp - b.temp;\n      } else {\n        return b.temp - a.temp;\n      }\n    };\n\n    _this.doSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.do - b.do;\n      } else {\n        return b.do - a.do;\n      }\n    };\n\n    _this.conductivitySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.conductivity - b.conductivity;\n      } else {\n        return b.conductivity - a.conductivity;\n      }\n    };\n\n    _this.handleExportCSVButtonClick = function (onClick) {\n      // Custom your onClick event here,\n      // it's not necessary to implement this function if you have no any process before onClick\n      console.log('This is my custom function for ExportCSVButton click event');\n      onClick();\n    };\n\n    _this.createCustomExportCSVButton = function (_onClick) {\n      return React.createElement(ExportCSVButton, {\n        btnText: \"Down CSV\",\n        onClick: function onClick() {\n          return _this.handleExportCSVButtonClick(_onClick);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878\n        },\n        __self: this\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    _this.tempColorChange = function (color) {\n      console.log(_this.state.color);\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"colors/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/colors/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          tempColor: color.hex\n        };\n        samplesRef.set(sample);\n\n        _this.setState({\n          tempColor: color.hex\n        });\n      });\n    };\n\n    _this.test = function () {\n      console.log(\"test\");\n    };\n\n    _this.showDrawer = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.onClose = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.state = {\n      //checkbox status\n      checkboxState: true,\n      checkboxState1: true,\n      checkboxStatenitrogen: true,\n      checkboxStatephosphorus: true,\n      checkboxStatetds: true,\n      checkboxStatepH: true,\n      checkboxStatetss: true,\n      checkboxStatesalinity: true,\n      checkboxStateconductivity: true,\n      checkboxStatehardness: true,\n      checkboxStateturbidity: true,\n      checkboxStatedo: true,\n      //data results\n      sampleDate: '',\n      sampleTaker: '',\n      temp: '',\n      do: '',\n      conductivity: '',\n      tds: '',\n      salinity: '',\n      pH: '',\n      turbidity: '',\n      nitrogen: '',\n      phosphorus: '',\n      totalHardness: '',\n      tss: '',\n      sampleNotes: '',\n      //random id and key, key is for the tab number\n      id: '',\n      key: 1,\n      idKey: '',\n      page: '',\n      area: '',\n      displayColorPicker: false,\n      //colors for graph lines\n      tempColor: '',\n      //this is the object array for the table\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      //these are for the graphs\n      tempPlot: 'temp',\n      doPlot: 'do',\n      conductivityPlot: 'conductivity',\n      tdsPlot: 'tds',\n      salinityPlot: 'salinity',\n      pHPlot: 'pH',\n      turbidityPlot: 'turbidity',\n      nitrogenPlot: 'nitrogen',\n      phosphorusPlot: 'phosphorus',\n      totalHardnessPlot: 'totalHardness',\n      tssPlot: 'tss',\n      //for drawers\n      visible: false //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.writeData = _this.writeData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //event triggered when text boxes of forms, values are changed\n\n\n  _createClass(monthlySamples, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      var filter = this.state.filter;\n      var dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n          return String(value);\n        }).find(function (value) {\n          return value.includes(filter);\n        });\n      });\n      var newState = [];\n    }\n  }, {\n    key: \"handleSubmit\",\n    //event triggered when form is submitted\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          sampleDate: _this2.state.sampleDate,\n          sampleTaker: _this2.state.sampleTaker,\n          temp: _this2.state.temp,\n          do: _this2.state.do,\n          conductivity: _this2.state.conductivity,\n          tds: _this2.state.tds,\n          salinity: _this2.state.salinity,\n          pH: _this2.state.pH,\n          turbidity: _this2.state.turbidity,\n          nitrogen: _this2.state.nitrogen,\n          phosphorus: _this2.state.phosphorus,\n          totalHardness: _this2.state.totalHardness,\n          tss: _this2.state.tss,\n          sampleNotes: _this2.state.sampleNotes,\n          id: _this2.state.id\n        };\n        samplesRef.push(sample); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this2.setState({\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n          sampleNotes: ''\n        });\n      });\n    } //this function is constantly running after the initial render.  Snapshot is used to look into the database.\n    //[] indicates an array value\n    //.map(Number) changes an array of strings to an array of integers\n    //snapshot.foreach(ss => {...}) **this looks in each \"Sample\" for the child of \"user\"**\n    //child of user can be child of BOD or child of tss or whatever.  It finds the value that is a child to that label.\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        samplesRef.on('value', function (snapshot) {\n          var dataList = snapshot.val();\n          var filter = [];\n          var orders = snapshot.val();\n          var orders2 = snapshot.val();\n          var newState = [];\n          var newState2 = [];\n          var newState3 = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n            newState2.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n          }\n\n          newState2.sort(function (a, b) {\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n          });\n          newState.sort(function (a, b) {\n            if (b.sampleDate === a.sampleDate) {\n              return 0;\n            }\n\n            return b.sampleDate > a.sampleDate ? 1 : -1;\n          });\n\n          _this3.setState({\n            orders: newState,\n            orders2: newState2,\n            dataList: newState,\n            color: _this3.state.color\n          });\n        });\n        var colorsRef = fire.database().ref(\"colors/\".concat(user.uid));\n        colorsRef.on('value', function (snapshot) {\n          var colorList = snapshot.val();\n          console.log(colorList);\n\n          _this3.setState({\n            tempColor: snapshot.child('tempColor').val()\n          });\n        });\n      });\n      console.log(this.state.color);\n    }\n  }, {\n    key: \"fillStates\",\n    value: function fillStates(itemId) {\n      var _this4 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          _this4.setState({\n            visible: true,\n            sampleDate: '',\n            sampleTaker: '',\n            temp: '',\n            do: '',\n            conductivity: '',\n            tds: '',\n            salinity: '',\n            pH: '',\n            turbidity: '',\n            nitrogen: '',\n            phosphorus: '',\n            totalHardness: '',\n            tss: '',\n            sampleNotes: ''\n          });\n\n          var orders = snapshot.val();\n          var id = fire.database().ref().child(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId)).key;\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n          }\n\n          _this4.setState({\n            id: id,\n            sampleDate: snapshot.child('sampleDate').val(),\n            sampleTaker: snapshot.child('sampleTaker').val(),\n            temp: snapshot.child('temp').val(),\n            do: snapshot.child('do').val(),\n            conductivity: snapshot.child('conductivity').val(),\n            tds: snapshot.child('tds').val(),\n            salinity: snapshot.child('salinity').val(),\n            pH: snapshot.child('pH').val(),\n            turbidity: snapshot.child('turbidity').val(),\n            nitrogen: snapshot.child('nitrogen').val(),\n            phosphorus: snapshot.child('phosphorus').val(),\n            totalHardness: snapshot.child('totalHardness').val(),\n            tss: snapshot.child('tss').val(),\n            sampleNotes: snapshot.child('sampleNotes').val()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"removesample\",\n    value: function removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.remove();\n      });\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(key) {\n      this.setState({\n        key: key\n      });\n    }\n  }, {\n    key: \"writeData\",\n    value: function writeData(e) {\n      var _this5 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(_this5.state.id));\n        var newCheckboxKey = firebase.database().ref().child('checkbox').push().key;\n        var id = newCheckboxKey;\n        var box = id;\n        var sample = {\n          id: _this5.state.id,\n          sampleDate: _this5.state.sampleDate,\n          sampleTaker: _this5.state.sampleTaker,\n          temp: _this5.state.temp,\n          do: _this5.state.do,\n          conductivity: _this5.state.conductivity,\n          tds: _this5.state.tds,\n          salinity: _this5.state.salinity,\n          pH: _this5.state.pH,\n          turbidity: _this5.state.turbidity,\n          nitrogen: _this5.state.nitrogen,\n          phosphorus: _this5.state.phosphorus,\n          totalHardness: _this5.state.totalHardness,\n          tss: _this5.state.tss,\n          sampleNotes: _this5.state.sampleNotes\n        };\n        samplesRef.child(_this5.state.id).set(sample); //this.setState is used to clear the text boxes after the form has been submitted.\n      });\n    }\n  }, {\n    key: \"rawMarkup\",\n    value: function rawMarkup() {\n      var rawMarkup = this.props.content;\n      return {\n        __html: rawMarkup\n      };\n    }\n  }, {\n    key: \"editRow\",\n    value: function editRow(row, isSelected, e, id) {\n      var _this6 = this;\n\n      console.log(\"\".concat(isSelected.id));\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"edit\",\n        style: {\n          fontSize: '24px'\n        },\n        onClick: function onClick() {\n          return _this6.fillStates(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, \"Click me\"));\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(row, isSelected, e, id) {\n      var _this7 = this;\n\n      console.log(\"\".concat(isSelected.id));\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"delete\",\n        style: {\n          fontSize: '24px'\n        },\n        onClick: function onClick() {\n          return _this7.removesample(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      }, \"Click me\"));\n    }\n  }, {\n    key: \"toggleNitrogen\",\n    value: function toggleNitrogen(event) {\n      this.setState({\n        checkboxState: !this.state.checkboxState\n      });\n      var checkboxState = this.state.checkboxState;\n\n      if (checkboxState) {\n        this.setState({\n          nitrogenPlot: ''\n        });\n      } else {\n        this.setState({\n          nitrogenPlot: 'nitrogen'\n        });\n      }\n    }\n  }, {\n    key: \"togglePhosphorus\",\n    value: function togglePhosphorus(event) {\n      this.setState({\n        checkboxStatephosphorus: !this.state.checkboxStatephosphorus\n      });\n      var checkboxState = this.state.checkboxStatephosphorus;\n\n      if (checkboxState) {\n        this.setState({\n          phosphorusPlot: ''\n        });\n      } else {\n        this.setState({\n          phosphorusPlot: 'phosphorus'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTemp\",\n    value: function toggleTemp(event) {\n      this.setState({\n        checkboxStatenitrogen: !this.state.checkboxStatenitrogen\n      });\n      var checkboxState = this.state.checkboxStatenitrogen;\n\n      if (checkboxState) {\n        this.setState({\n          tempPlot: ''\n        });\n      } else {\n        this.setState({\n          tempPlot: 'temp'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTDS\",\n    value: function toggleTDS(event) {\n      this.setState({\n        checkboxStatetds: !this.state.checkboxStatetds\n      });\n      var checkboxState = this.state.checkboxStatetds;\n\n      if (checkboxState) {\n        this.setState({\n          tdsPlot: ''\n        });\n      } else {\n        this.setState({\n          tdsPlot: 'tds'\n        });\n      }\n    }\n  }, {\n    key: \"togglepH\",\n    value: function togglepH(event) {\n      this.setState({\n        checkboxStatepH: !this.state.checkboxStatepH\n      });\n      var checkboxState = this.state.checkboxStatepH;\n\n      if (checkboxState) {\n        this.setState({\n          pHPlot: ''\n        });\n      } else {\n        this.setState({\n          pHPlot: 'pH'\n        });\n      }\n    }\n  }, {\n    key: \"toggletss\",\n    value: function toggletss(event) {\n      this.setState({\n        checkboxStatetss: !this.state.checkboxStatetss\n      });\n      var checkboxState = this.state.checkboxStatetss;\n\n      if (checkboxState) {\n        this.setState({\n          tssPlot: ''\n        });\n      } else {\n        this.setState({\n          tssPlot: 'tss'\n        });\n      }\n    }\n  }, {\n    key: \"togglesalinity\",\n    value: function togglesalinity(event) {\n      this.setState({\n        checkboxStatesalinity: !this.state.checkboxStatesalinity\n      });\n      var checkboxState = this.state.checkboxStatesalinity;\n\n      if (checkboxState) {\n        this.setState({\n          salinityPlot: ''\n        });\n      } else {\n        this.setState({\n          salinityPlot: 'salinity'\n        });\n      }\n    }\n  }, {\n    key: \"toggleHardness\",\n    value: function toggleHardness(event) {\n      this.setState({\n        checkboxStatehardness: !this.state.checkboxStatehardness\n      });\n      var checkboxState = this.state.checkboxStatehardness;\n\n      if (checkboxState) {\n        this.setState({\n          totalHardnessPlot: ''\n        });\n      } else {\n        this.setState({\n          totalHardnessPlot: 'totalHardness'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTurbidity\",\n    value: function toggleTurbidity(event) {\n      this.setState({\n        checkboxStateturbidity: !this.state.checkboxStateturbidity\n      });\n      var checkboxState = this.state.checkboxStateturbidity;\n\n      if (checkboxState) {\n        this.setState({\n          turbidityPlot: ''\n        });\n      } else {\n        this.setState({\n          turbidityPlot: 'turbidity'\n        });\n      }\n    }\n  }, {\n    key: \"toggleDO\",\n    value: function toggleDO(event) {\n      this.setState({\n        checkboxStatedo: !this.state.checkboxStatedo\n      });\n      var checkboxState = this.state.checkboxStatedo;\n\n      if (checkboxState) {\n        this.setState({\n          doPlot: ''\n        });\n      } else {\n        this.setState({\n          doPlot: 'do'\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var config = {\n        rules: [{\n          type: 'object',\n          required: true,\n          message: 'Please select time!'\n        }]\n      };\n      var rangeConfig = {\n        rules: [{\n          type: 'array',\n          required: true,\n          message: 'Please select time!'\n        }]\n      };\n\n      function buttonFormatter(cell, row) {\n        return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n      }\n\n      var options = {\n        exportCSVBtn: this.createCustomExportCSVButton\n      };\n      var doCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleDO.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968\n        },\n        __self: this\n      }, \"DO\"));\n      var nitrogenCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleNitrogen.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        },\n        __self: this\n      }, \"Nitrogen\"));\n      var phosphorusCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglePhosphorus.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983\n        },\n        __self: this\n      }, \"Phosphorus\"));\n      var tempCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTemp.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 988\n        },\n        __self: this\n      }, \"Temperature\"));\n      var tdsCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTDS.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993\n        },\n        __self: this\n      }, \"TDS\"));\n      var pHCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglepH.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998\n        },\n        __self: this\n      }, \"pH\"));\n      var tssCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggletss.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      }, \"TSS\"));\n      var salinityCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglesalinity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008\n        },\n        __self: this\n      }, \"Salinity\"));\n      var hardnessCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleHardness.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1013\n        },\n        __self: this\n      }, \"Total Hardness\"));\n      var turbidityCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTurbidity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018\n        },\n        __self: this\n      }, \"Turbidity\"));\n      var popover = {\n        position: 'absolute',\n        zIndex: '2'\n      };\n      var cover = {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      };\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          padding: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 18,\n        lg: 18,\n        xl: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }, \"Monthly Samples\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042\n        },\n        __self: this\n      }, \"Summer Lake Homeowners Association\"))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 6,\n        lg: 6,\n        xl: 6,\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"large\",\n        type: \"primary\",\n        onClick: function onClick() {\n          return _this8.fillEmpty();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045\n        },\n        __self: this\n      }, \"+ Add Sample\"), React.createElement(Drawer, {\n        title: \"Fill in Sample Form\",\n        placement: this.state.placement,\n        closable: false,\n        onClose: this.onClose,\n        visible: this.state.visible,\n        width: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"DatePicker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055\n        },\n        __self: this\n      }), getFieldDecorator('date-picker', config)(React.createElement(DatePicker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"DatePicker[showTime]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063\n        },\n        __self: this\n      }), getFieldDecorator('date-time-picker', config)(React.createElement(DatePicker, {\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1068\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"MonthPicker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1071\n        },\n        __self: this\n      }), getFieldDecorator('month-picker', config)(React.createElement(MonthPicker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"RangePicker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079\n        },\n        __self: this\n      }), getFieldDecorator('range-picker', rangeConfig)(React.createElement(RangePicker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"RangePicker[showTime]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087\n        },\n        __self: this\n      }), getFieldDecorator('range-time-picker', rangeConfig)(React.createElement(RangePicker, {\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1096\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1108\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }, \"Results\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        name: \"sampleDate\",\n        placeholder: \"Date of Sample\",\n        onChange: this.handleChange,\n        value: this.state.sampleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1119\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"sampleTaker\",\n        placeholder: \"Your Name\",\n        onChange: this.handleChange,\n        value: this.state.sampleTaker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123\n        },\n        __self: this\n      }, \"Water Temperature\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"temp\",\n        placeholder: \"Temp of Sample\",\n        onChange: this.handleChange,\n        value: this.state.temp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127\n        },\n        __self: this\n      }, \"DO\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"do\",\n        placeholder: \"Dissolved Oxygen\",\n        onChange: this.handleChange,\n        value: this.state.do,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131\n        },\n        __self: this\n      }, \"Conductivity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"conductivity\",\n        placeholder: \"Conductivity\",\n        onChange: this.handleChange,\n        value: this.state.conductivity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }, \"Total Dissolved Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tds\",\n        placeholder: \"Total Dissolved Solids\",\n        onChange: this.handleChange,\n        value: this.state.tds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"salinity\",\n        placeholder: \"Salinity\",\n        onChange: this.handleChange,\n        value: this.state.salinity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143\n        },\n        __self: this\n      }, \"pH\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"pH\",\n        placeholder: \"pH\",\n        onChange: this.handleChange,\n        value: this.state.pH,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147\n        },\n        __self: this\n      }, \"Turbidity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"turbidity\",\n        placeholder: \"Turbidity\",\n        onChange: this.handleChange,\n        value: this.state.turbidity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151\n        },\n        __self: this\n      }, \"Total Nitrogen\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1152\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"nitrogen\",\n        placeholder: \"Total Nitrogen\",\n        onChange: this.handleChange,\n        value: this.state.nitrogen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1152\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155\n        },\n        __self: this\n      }, \"Total Phosphorus\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1156\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"phosphorus\",\n        placeholder: \"Total Phosphorus\",\n        onChange: this.handleChange,\n        value: this.state.phosphorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1156\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159\n        },\n        __self: this\n      }, \"Total Hardness\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"totalHardness\",\n        placeholder: \"Total Hardness\",\n        onChange: this.handleChange,\n        value: this.state.totalHardness,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163\n        },\n        __self: this\n      }, \"Total Suspended Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tss\",\n        placeholder: \"Total Suspended Solids\",\n        onChange: this.handleChange,\n        value: this.state.tss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167\n        },\n        __self: this\n      }, \"Sample Notes\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        type: \"textArea\",\n        style: {\n          height: 80,\n          width: 400\n        },\n        name: \"sampleNotes\",\n        placeholder: \"Sample Notes\",\n        onChange: this.handleChange,\n        value: this.state.sampleNotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168\n        },\n        __self: this\n      })))))))))), React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          paddingTop: '15px',\n          paddingRight: '5px',\n          paddingLeft: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1191\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"GRAPHS\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        style: {\n          paddingTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196\n        },\n        __self: this\n      }, \"NITROGEN AND PHOSPHORUS\")), React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197\n        },\n        __self: this\n      }, \"18 MONTHS\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1203\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 10 / 3.0,\n        minHeight: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1204\n        },\n        __self: this\n      }, React.createElement(AreaChart, {\n        data: this.state.orders2,\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205\n        },\n        __self: this\n      }, React.createElement(\"defs\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207\n        },\n        __self: this\n      }, React.createElement(\"linearGradient\", {\n        id: \"colorUv\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#086788\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#086788\",\n        stopOpacity: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210\n        },\n        __self: this\n      })), React.createElement(\"linearGradient\", {\n        id: \"colorPv\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1212\n        },\n        __self: this\n      }, React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#F0C808\",\n        stopOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213\n        },\n        __self: this\n      }), React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#F0C808\",\n        stopOpacity: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214\n        },\n        __self: this\n      }))), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1217\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1218\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"6 6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1219\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1220\n        },\n        __self: this\n      }), React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"nitrogen\",\n        stroke: \"#086788\",\n        fillOpacity: 1,\n        fill: \"url(#colorUv)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1222\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"nitrogen\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1222\n        },\n        __self: this\n      })), React.createElement(Area, {\n        type: \"monotone\",\n        dataKey: \"phosphorus\",\n        stroke: \"#F0C808\",\n        fillOpacity: 1,\n        fill: \"url(#colorPv)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223\n        },\n        __self: this\n      }, React.createElement(LabelList, {\n        dataKey: \"phosphorus\",\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223\n        },\n        __self: this\n      })), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224\n        },\n        __self: this\n      })))))), React.createElement(TabPane, {\n        tab: \"DATA TABLE\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1233\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        style: {\n          paddingTop: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1234\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236\n        },\n        __self: this\n      }, \"DATA TABLE\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1238\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1242\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1243\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.dataList,\n        options: options,\n        exportCSV: true,\n        pagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"sampleDate\",\n        isKey: true,\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254\n        },\n        __self: this\n      }, \"Sample Date\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"temp\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.tempSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"do\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.doSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256\n        },\n        __self: this\n      }, \"Dissolved Oxygen\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"conductivity\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.conductivitySort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257\n        },\n        __self: this\n      }, \"Conductivity\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"tds\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.tdsSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258\n        },\n        __self: this\n      }, \"Total Dissolved Solids\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"salinity\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.salinitySort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"nitrogen\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.nitrogenSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260\n        },\n        __self: this\n      }, \"Total Nitrogen\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"phosphorus\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.phosphorusSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261\n        },\n        __self: this\n      }, \"Total Phosphorus\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"totalHardness\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.hardnessSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262\n        },\n        __self: this\n      }, \"Hardness\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"tss\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.tssSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1263\n        },\n        __self: this\n      }, \"TSS\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.editRow.bind(this),\n        width: \"110px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.deleteRow.bind(this),\n        width: \"110px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271\n        },\n        __self: this\n      }, \"Delete\")))))))))));\n    }\n  }]);\n\n  return monthlySamples;\n}(Component);\n\nexport { monthlySamples as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/monthlySamples.jsx"],"names":["React","Component","Navbar","Nav","NavItem","ResponsiveEmbed","ButtonToolbar","Grid","Radio","Table","Popover","ControlLabel","MenuItem","DropdownButton","FormControl","Checkbox","Link","firebase","PDFExport","fire","BootstrapTable","BootstrapButton","TableHeaderColumn","ExportCSVButton","TiArrowSortedDown","TiBrush","TiArrowSortedUp","TiPencil","TiTrash","domtoimage","ChromePicker","fileDownload","LineChart","LabelList","ResponsiveContainer","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Label","Row","Form","DatePicker","Col","Tabs","Card","Drawer","Menu","Icon","Button","Layout","Carousel","TabPane","styles","topPad","paddingTop","MonthPicker","RangePicker","monthlySamples","props","handleSubmit1","e","preventDefault","form","validateFields","err","fieldsValue","rangeValue","rangeTimeValue","values","format","console","log","writeStates","itemId","removeAuthListener","auth","onAuthStateChanged","user","sampleRef","database","ref","uid","state","id","child","set","sampleDate","sampleTaker","temp","do","conductivity","tds","salinity","pH","turbidity","nitrogen","phosphorus","totalHardness","tss","sampleNotes","fillEmpty","area","on","snapshot","orders","val","newState","order","push","setState","visible","exportPDF","resume","save","nitrogenSort","a","b","dataList","phosphorusSort","tdsSort","tssSort","salinitySort","turbiditySort","pHSort","hardnessSort","tempSort","doSort","conductivitySort","handleExportCSVButtonClick","onClick","createCustomExportCSVButton","handleClick","displayColorPicker","handleClose","tempColorChange","color","samplesRef","orderID","sample","tempColor","hex","test","showDrawer","onClose","checkboxState","checkboxState1","checkboxStatenitrogen","checkboxStatephosphorus","checkboxStatetds","checkboxStatepH","checkboxStatetss","checkboxStatesalinity","checkboxStateconductivity","checkboxStatehardness","checkboxStateturbidity","checkboxStatedo","key","idKey","page","samples","orders2","filter","blobUrl","tempPlot","doPlot","conductivityPlot","tdsPlot","salinityPlot","pHPlot","turbidityPlot","nitrogenPlot","phosphorusPlot","totalHardnessPlot","tssPlot","handleChange","bind","handleSubmit","handleSelect","writeData","target","name","value","item","Object","map","String","find","includes","newState2","newState3","sort","colorsRef","colorList","remove","newCheckboxKey","box","rawMarkup","content","__html","row","isSelected","textAlign","fontSize","fillStates","removesample","event","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","config","rules","type","required","message","rangeConfig","buttonFormatter","cell","options","exportCSVBtn","doCheckbox","toggleDO","nitrogenCheckbox","toggleNitrogen","phosphorusCheckbox","togglePhosphorus","tempCheckbox","toggleTemp","tdsCheckbox","toggleTDS","pHCheckbox","togglepH","tssCheckbox","toggletss","salinityCheckbox","togglesalinity","hardnessCheckbox","toggleHardness","turbidityCheckbox","toggleTurbidity","popover","position","zIndex","cover","top","right","bottom","left","background","padding","md","lg","placement","offset","height","width","paddingRight","paddingLeft","lineHeight","delay","editRow","deleteRow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, ResponsiveEmbed, ButtonToolbar, Grid, Radio,  Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn, ExportCSVButton} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport domtoimage from 'dom-to-image';\nimport { ChromePicker } from 'react-color';\nimport fileDownload from \"js-file-download\";\n\n\nimport { LineChart, LabelList, ResponsiveContainer, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label} from 'recharts';\n\nimport { Row, Form, DatePicker, Col, Tabs, Card, Drawer, Menu, Icon, Button, Layout, Carousel } from 'antd';\n\nconst TabPane = Tabs.TabPane;\n\nconst styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  },\n};\n\nconst { MonthPicker, RangePicker } = DatePicker;\n\n\n\nexport default class monthlySamples extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n          //checkbox status\n          checkboxState: true,\n          checkboxState1: true,\n          checkboxStatenitrogen: true,\n          checkboxStatephosphorus: true,\n          checkboxStatetds: true,\n          checkboxStatepH: true,\n          checkboxStatetss: true,\n          checkboxStatesalinity: true,\n          checkboxStateconductivity: true,\n          checkboxStatehardness: true,\n          checkboxStateturbidity: true,\n          checkboxStatedo: true,\n\n\n\n\n          //data results\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n          sampleNotes: '',\n\n          //random id and key, key is for the tab number\n          id: '',\n          key: 1,\n          idKey: '',\n          page: '',\n          area: '',\n          displayColorPicker: false,\n\n          //colors for graph lines\n          tempColor: '',\n\n\n          //this is the object array for the table\n          samples: [],\n          orders: [],\n          orders2: [],\n          dataList: [],\n          filter: \"\",\n          blobUrl: null,\n\n\n          //these are for the graphs\n          tempPlot: 'temp',\n          doPlot: 'do',\n          conductivityPlot: 'conductivity',\n          tdsPlot: 'tds',\n          salinityPlot: 'salinity',\n          pHPlot: 'pH',\n          turbidityPlot: 'turbidity',\n          nitrogenPlot: 'nitrogen',\n          phosphorusPlot: 'phosphorus',\n          totalHardnessPlot: 'totalHardness',\n          tssPlot: 'tss',\n\n          //for drawers\n          visible: false,\n\n\n\n\n        }\n        //these are triggered events.  handleChange is for text box changes\n        //handlesubmit is for the form being submitted.\n        //every event trigger needs to be bound like is below with .bind\n        //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.writeData = this.writeData.bind(this);\n\n\n\n\n\n      }\n\n      //event triggered when text boxes of forms, values are changed\n      handleChange(e) {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n        let filter = this.state.filter;\n        let dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n        return String(value);\n              }).find(function (value) {\n                   return value.includes(filter);\n        });\n\n        });\n        let newState = [];\n\n\n\n\n\n      }\n      handleSubmit1 = (e) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, fieldsValue) => {\n      if (err) {\n        return;\n      }\n\n      // Should format date value before submit.\n      const rangeValue = fieldsValue['range-picker'];\n      const rangeTimeValue = fieldsValue['range-time-picker'];\n      const values = {\n        ...fieldsValue,\n        'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n        'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\n        'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\n        'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\n        'range-time-picker': [\n          rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\n          rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss'),\n        ],\n        'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\n      };\n      console.log('Received values of form: ', values);\n    });\n  }\n\n      //event triggered when form is submitted\n      handleSubmit(e) {\n        e.preventDefault();\n\n        //fire.database().ref('samples') refers to the main title of the fire database.\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n        const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n        const orderID = fire.database().ref(`/monthlySamples/${user.uid}/${orderID}`);\n\n\n        const sample = {\n\n          sampleDate: this.state.sampleDate,\n          sampleTaker: this.state.sampleTaker,\n          temp: this.state.temp,\n          do: this.state.do,\n          conductivity: this.state.conductivity,\n          tds: this.state.tds,\n          salinity: this.state.salinity,\n          pH: this.state.pH,\n          turbidity: this.state.turbidity,\n          nitrogen: this.state.nitrogen,\n          phosphorus: this.state.phosphorus,\n          totalHardness: this.state.totalHardness,\n          tss: this.state.tss,\n          sampleNotes: this.state.sampleNotes,\n\n          id: this.state.id,\n        }\n\n\n\n\n        samplesRef.push(sample);\n        //this.setState is used to clear the text boxes after the form has been submitted.\n        this.setState({\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n          sampleNotes: '',\n\n\n\n        });\n      });\n    }\n\n\n\n\n\n      //this function is constantly running after the initial render.  Snapshot is used to look into the database.\n      //[] indicates an array value\n      //.map(Number) changes an array of strings to an array of integers\n      //snapshot.foreach(ss => {...}) **this looks in each \"Sample\" for the child of \"user\"**\n      //child of user can be child of BOD or child of tss or whatever.  It finds the value that is a child to that label.\n\n      componentDidMount() {\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n          const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n          samplesRef.on('value', (snapshot) => {\n\n\n            let dataList = snapshot.val();\n            let filter = [];\n            let orders = snapshot.val();\n            let orders2 = snapshot.val();\n\n            let newState = [];\n            let newState2 = [];\n            let newState3 = [];\n\n          for (let order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes,\n            });\n            newState2.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes,\n            });\n\n\n\n\n          }\n\n          newState2.sort(function(a, b) {\n\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n        });\n        newState.sort(function(a, b) {\n\n          if (b.sampleDate === a.sampleDate) {\n            return 0;\n          }\n          return b.sampleDate > a.sampleDate ? 1 : -1;\n      });\n\n\n\n          this.setState({\n            orders: newState,\n            orders2: newState2,\n            dataList: newState,\n            color: this.state.color,\n          });\n\n        });\n        const colorsRef = fire.database().ref(`colors/${user.uid}`);\n\n        colorsRef.on('value', (snapshot) => {\n          let colorList = snapshot.val();\n          console.log(colorList);\n          this.setState({\n            tempColor: snapshot.child('tempColor').val(),\n\n          });\n\n\n        });\n\n      });\n      console.log(this.state.color);\n\n\n    }\n\n\n\n    fillStates(itemId) {\n      let area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n      sampleRef.on('value', (snapshot) => {\n\n        this.setState({\n          visible: true,\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n          sampleNotes: '',\n\n        });\n\n      let orders = snapshot.val();\n      let id = fire.database().ref().child(`/monthlySamples/${user.uid}/${itemId}`).key;\n\n      let newState = [];\n      for (let order in orders) {\n        newState.push({\n          id: order,\n\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n          sampleNotes: orders[order].sampleNotes,\n\n        });\n      }\n      this.setState({\n\n        id: id,\n\n\n        sampleDate: snapshot.child('sampleDate').val(),\n        sampleTaker: snapshot.child('sampleTaker').val(),\n        temp: snapshot.child('temp').val(),\n        do: snapshot.child('do').val(),\n        conductivity: snapshot.child('conductivity').val(),\n        tds: snapshot.child('tds').val(),\n        salinity: snapshot.child('salinity').val(),\n        pH: snapshot.child('pH').val(),\n        turbidity: snapshot.child('turbidity').val(),\n        nitrogen: snapshot.child('nitrogen').val(),\n        phosphorus: snapshot.child('phosphorus').val(),\n        totalHardness: snapshot.child('totalHardness').val(),\n        tss: snapshot.child('tss').val(),\n        sampleNotes: snapshot.child('sampleNotes').val(),\n\n\n      })\n\n\n});\n\n    });\n  }\n\n\n  writeStates = (itemId) => {\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${this.state.id}`);\n\n\n    sampleRef.child(\"id\").set(this.state.id);\n\n\n    sampleRef.child(\"sampleDate\").set(this.state.sampleDate);\n    sampleRef.child(\"sampleTaker\").set(this.state.sampleTaker);\n    sampleRef.child(\"temp\").set(this.state.temp);\n    sampleRef.child(\"do\").set(this.state.do);\n    sampleRef.child(\"conductivity\").set(this.state.conductivity);\n    sampleRef.child(\"tds\").set(this.state.tds);\n    sampleRef.child(\"salinity\").set(this.state.salinity);\n    sampleRef.child(\"pH\").set(this.state.pH);\n    sampleRef.child(\"turbidity\").set(this.state.turbidity);\n    sampleRef.child(\"nitrogen\").set(this.state.nitrogen);\n    sampleRef.child(\"phosphorus\").set(this.state.phosphorus);\n    sampleRef.child(\"totalHardness\").set(this.state.totalHardness);\n    sampleRef.child(\"tss\").set(this.state.tss);\n    sampleRef.child(\"sampleNotes\").set(this.state.sampleNotes);\n\n\n\n  });\n\n\n  }\n\n\n\n  fillEmpty = (itemId) => {\n    let area = '';\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n\n    sampleRef.on('value', (snapshot) => {\n\n    let orders = snapshot.val();\n\n    let newState = [];\n    for (let order in orders) {\n      newState.push({\n        id: order,\n\n        sampleDate: orders[order].sampleDate,\n        sampleTaker: orders[order].sampleTaker,\n        temp: orders[order].temp,\n        do: orders[order].do,\n        conductivity: orders[order].conductivity,\n        tds: orders[order].tds,\n        salinity: orders[order].salinity,\n        pH: orders[order].pH,\n        turbidity: orders[order].turbidity,\n        nitrogen: orders[order].nitrogen,\n        phosphorus: orders[order].phosphorus,\n        totalHardness: orders[order].totalHardness,\n        tss: orders[order].tss,\n        sampleNotes: orders[order].sampleNotes,\n\n      });\n    }\n    this.setState({\n\n      visible: true,\n      sampleDate: '',\n      sampleTaker: '',\n      temp: '',\n      do: '',\n      conductivity: '',\n      tds: '',\n      salinity: '',\n      pH: '',\n      turbidity: '',\n      nitrogen: '',\n      phosphorus: '',\n      totalHardness: '',\n      tss: '',\n      sampleNotes: '',\n\n\n    })\n\n\n});\n  });\n}\n\n\n\n    removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n      sampleRef.remove();\n    });\n    }\n\n    handleSelect(key) {\n  this.setState({key});\n}\n\n\nwriteData (e) {\n  e.preventDefault();\n  //fire.database().ref('samples') refers to the main title of the fire database.\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n  const orderID = fire.database().ref(`/monthlySamples/${user.uid}/${this.state.id}`);\n  const newCheckboxKey = firebase.database().ref().child('checkbox').push().key;\n\n  let id = newCheckboxKey;\n  let box = id;\n\n\n  const sample = {\n\n    id: this.state.id,\n    sampleDate: this.state.sampleDate,\n    sampleTaker: this.state.sampleTaker,\n    temp: this.state.temp,\n    do: this.state.do,\n    conductivity: this.state.conductivity,\n    tds: this.state.tds,\n    salinity: this.state.salinity,\n    pH: this.state.pH,\n    turbidity: this.state.turbidity,\n    nitrogen: this.state.nitrogen,\n    phosphorus: this.state.phosphorus,\n    totalHardness: this.state.totalHardness,\n    tss: this.state.tss,\n    sampleNotes: this.state.sampleNotes,\n  }\n\n  samplesRef.child(this.state.id).set(sample);\n\n\n\n\n\n\n  //this.setState is used to clear the text boxes after the form has been submitted.\n\n});\n}\n\n\n\n\nexportPDF = () => {\n  this.resume.save();\n}\n\nrawMarkup(){\n  var rawMarkup = this.props.content\n  return { __html: rawMarkup };\n}\n\n\n\n\n\n nitrogenSort = (a, b, order) => {\n   let dataList = this.state.dataList;   // order is desc or asc\n  if (order === 'asc') {\n    return a.nitrogen - b.nitrogen;\n  } else {\n    return b.nitrogen - a.nitrogen;\n  }\n}\nphosphorusSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.phosphorus - b.phosphorus;\n } else {\n   return b.phosphorus - a.phosphorus;\n }\n}\ntdsSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.tds - b.tds;\n } else {\n   return b.tds - a.tds;\n }\n}\ntssSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.tss - b.tss;\n } else {\n   return b.tss - a.tss;\n }\n}\nsalinitySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.salinity - b.salinity;\n } else {\n   return b.salinity - a.salinity;\n }\n}\nturbiditySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.turbidity - b.turbidity;\n } else {\n   return b.turbidity - a.turbidity;\n }\n}\npHSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.pH - b.pH;\n } else {\n   return b.pH - a.pH;\n }\n}\nhardnessSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.totalHardness - b.totalHardness;\n } else {\n   return b.totalHardness - a.totalHardness;\n }\n}\ntempSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.temp - b.temp;\n } else {\n   return b.temp - a.temp;\n }\n}\ndoSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.do - b.do;\n } else {\n   return b.do - a.do;\n }\n}\nconductivitySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.conductivity - b.conductivity;\n } else {\n   return b.conductivity - a.conductivity;\n }\n}\n\n\n\neditRow(row, isSelected, e, id) {\n  console.log(`${isSelected.id}`);\n  return (\n      <div style={{textAlign: 'center'}}>\n    <Icon type=\"edit\" style={{fontSize: '24px'}}\n    onClick={() => this.fillStates(`${isSelected.id}`)}>\n      Click me\n    </Icon>\n    </div>\n  )\n}\n\ndeleteRow(row, isSelected, e, id) {\n  console.log(`${isSelected.id}`);\n  return (\n    <div style={{textAlign: 'center'}}>\n    <Icon type=\"delete\" style={{fontSize: '24px'}}\n    onClick={() => this.removesample(`${isSelected.id}`)}>\n      Click me\n    </Icon>\n    </div>\n  )\n}\n\n\n\n\n\n\ntoggleNitrogen(event) {\n    this.setState({\n      checkboxState: !this.state.checkboxState\n    });\n    const checkboxState = this.state.checkboxState;\n    if (checkboxState) {\n      this.setState({\n        nitrogenPlot: '',\n      })\n    } else {\n      this.setState({\n        nitrogenPlot: 'nitrogen',\n      })\n    }\n  }\n  togglePhosphorus(event) {\n      this.setState({\n        checkboxStatephosphorus: !this.state.checkboxStatephosphorus\n      });\n      const checkboxState = this.state.checkboxStatephosphorus;\n      if (checkboxState) {\n        this.setState({\n          phosphorusPlot: '',\n        })\n      } else {\n        this.setState({\n          phosphorusPlot: 'phosphorus',\n        })\n      }\n    }\n    toggleTemp(event) {\n        this.setState({\n          checkboxStatenitrogen: !this.state.checkboxStatenitrogen\n        });\n        const checkboxState = this.state.checkboxStatenitrogen;\n        if (checkboxState) {\n          this.setState({\n            tempPlot: '',\n          })\n        } else {\n          this.setState({\n            tempPlot: 'temp',\n          })\n        }\n      }\n      toggleTDS(event) {\n          this.setState({\n            checkboxStatetds: !this.state.checkboxStatetds\n          });\n          const checkboxState = this.state.checkboxStatetds;\n          if (checkboxState) {\n            this.setState({\n              tdsPlot: '',\n            })\n          } else {\n            this.setState({\n              tdsPlot: 'tds',\n            })\n          }\n        }\n        togglepH(event) {\n            this.setState({\n              checkboxStatepH: !this.state.checkboxStatepH\n            });\n            const checkboxState = this.state.checkboxStatepH;\n            if (checkboxState) {\n              this.setState({\n                pHPlot: '',\n              })\n            } else {\n              this.setState({\n                pHPlot: 'pH',\n              })\n            }\n          }\n          toggletss(event) {\n              this.setState({\n                checkboxStatetss: !this.state.checkboxStatetss\n              });\n              const checkboxState = this.state.checkboxStatetss;\n              if (checkboxState) {\n                this.setState({\n                  tssPlot: '',\n                })\n              } else {\n                this.setState({\n                  tssPlot: 'tss',\n                })\n              }\n            }\n            togglesalinity(event) {\n                this.setState({\n                  checkboxStatesalinity: !this.state.checkboxStatesalinity\n                });\n                const checkboxState = this.state.checkboxStatesalinity;\n                if (checkboxState) {\n                  this.setState({\n                    salinityPlot: '',\n                  })\n                } else {\n                  this.setState({\n                    salinityPlot: 'salinity',\n                  })\n                }\n              }\n              toggleHardness(event) {\n                  this.setState({\n                    checkboxStatehardness: !this.state.checkboxStatehardness\n                  });\n                  const checkboxState = this.state.checkboxStatehardness;\n                  if (checkboxState) {\n                    this.setState({\n                      totalHardnessPlot: '',\n                    })\n                  } else {\n                    this.setState({\n                      totalHardnessPlot: 'totalHardness',\n                    })\n                  }\n                }\n                toggleTurbidity(event) {\n                    this.setState({\n                      checkboxStateturbidity: !this.state.checkboxStateturbidity\n                    });\n                    const checkboxState = this.state.checkboxStateturbidity;\n                    if (checkboxState) {\n                      this.setState({\n                        turbidityPlot: '',\n                      })\n                    } else {\n                      this.setState({\n                        turbidityPlot: 'turbidity',\n                      })\n                    }\n                  }\n                  toggleDO(event) {\n                      this.setState({\n                        checkboxStatedo: !this.state.checkboxStatedo\n                      });\n                      const checkboxState = this.state.checkboxStatedo;\n                      if (checkboxState) {\n                        this.setState({\n                          doPlot: '',\n                        })\n                      } else {\n                        this.setState({\n                          doPlot: 'do',\n                        })\n                      }\n                    }\n\n\n\n\n  onSubmit(event) {\n    event.preventDefault();\n  }\n\n  handleExportCSVButtonClick = (onClick) => {\n  // Custom your onClick event here,\n  // it's not necessary to implement this function if you have no any process before onClick\n  console.log('This is my custom function for ExportCSVButton click event');\n  onClick();\n}\ncreateCustomExportCSVButton = (onClick) => {\n  return (\n    <ExportCSVButton\n      btnText='Down CSV'\n      onClick={ () => this.handleExportCSVButtonClick(onClick) }/>\n  );\n}\n\n\nhandleClick = () => {\n  this.setState({ displayColorPicker: !this.state.displayColorPicker })\n};\n\nhandleClose = () => {\n  this.setState({ displayColorPicker: false })\n};\n\ntempColorChange = (color) => {\n\n    console.log(this.state.color);\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const samplesRef = fire.database().ref(`colors/${user.uid}`);\n    const orderID = fire.database().ref(`/colors/${user.uid}/${orderID}`);\n    const sample = {\n      tempColor: color.hex\n    }\n    samplesRef.set(sample);\n    this.setState({\n      tempColor: color.hex,\n     });\n    });\n}\n\ntest = () => {\n  console.log(\"test\")\n}\n\n\nshowDrawer = () => {\n  this.setState({\n    visible: true,\n  });\n};\nonClose = () => {\n  this.setState({\n    visible: false,\n  });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n      render() {\n        const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const config = {\n      rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n    };\n    const rangeConfig = {\n      rules: [{ type: 'array', required: true, message: 'Please select time!' }],\n    };\n        function buttonFormatter(cell, row){\n  return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n}\nconst options = {\n  exportCSVBtn: this.createCustomExportCSVButton\n};\nconst doCheckbox = (\n  <span>\n    <input\n    type=\"checkbox\"\n    defaultChecked='true'\n    onClick={this.toggleDO.bind(this)}\n    />\n  <label>DO</label>\n  </span>\n);\n   const nitrogenCheckbox = (\n     <span>\n       <input\n       type=\"checkbox\"\n       defaultChecked='true'\n       onClick={this.toggleNitrogen.bind(this)}\n       />\n     <label>Nitrogen</label>\n     </span>\n   );\n   const phosphorusCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglePhosphorus.bind(this)}/>\n     <label>Phosphorus</label>\n     </span>\n   );\n   const tempCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTemp.bind(this)}/>\n     <label>Temperature</label>\n     </span>\n   );\n   const tdsCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTDS.bind(this)}/>\n     <label>TDS</label>\n     </span>\n   );\n   const pHCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglepH.bind(this)}/>\n     <label>pH</label>\n     </span>\n   );\n   const tssCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggletss.bind(this)}/>\n     <label>TSS</label>\n     </span>\n   );\n   const salinityCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglesalinity.bind(this)}/>\n     <label>Salinity</label>\n     </span>\n   );\n   const hardnessCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleHardness.bind(this)}/>\n     <label>Total Hardness</label>\n     </span>\n   );\n   const turbidityCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTurbidity.bind(this)}/>\n     <label>Turbidity</label>\n     </span>\n   );\n   const popover = {\n      position: 'absolute',\n      zIndex: '2',\n    }\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n    }\n\n\n        return (\n    <Layout>\n\n      <div style={{ background: '#F0F0F0', padding: '5px' }}>\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n        <div style={{position: 'relative'}}>\n      <Col xs={24} sm={24} md={18} lg={18} xl={18}>\n        <h1><b>Monthly Samples</b></h1>\n        <h3><b>Summer Lake Homeowners Association</b></h3>\n      </Col>\n      <Col xs={24} sm={24} md={6} lg={6} xl={6} style={{ textAlign: 'right'}}>\n    <Button size=\"large\" type=\"primary\" onClick={() => this.fillEmpty()}>+ Add Sample</Button>\n      <Drawer\n        title= \"Fill in Sample Form\"\n        placement={this.state.placement}\n        closable={false}\n        onClose={this.onClose}\n        visible={this.state.visible}\n        width={300}\n      >\n      <Form onSubmit={this.handleSubmit1}>\n        <Form.Item\n          {...formItemLayout}\n          label=\"DatePicker\"\n        >\n          {getFieldDecorator('date-picker', config)(\n            <DatePicker />\n          )}\n        </Form.Item>\n        <Form.Item\n          {...formItemLayout}\n          label=\"DatePicker[showTime]\"\n        >\n          {getFieldDecorator('date-time-picker', config)(\n            <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n          )}\n        </Form.Item>\n        <Form.Item\n          {...formItemLayout}\n          label=\"MonthPicker\"\n        >\n          {getFieldDecorator('month-picker', config)(\n            <MonthPicker />\n          )}\n        </Form.Item>\n        <Form.Item\n          {...formItemLayout}\n          label=\"RangePicker\"\n        >\n          {getFieldDecorator('range-picker', rangeConfig)(\n            <RangePicker />\n          )}\n        </Form.Item>\n        <Form.Item\n          {...formItemLayout}\n          label=\"RangePicker[showTime]\"\n        >\n          {getFieldDecorator('range-time-picker', rangeConfig)(\n            <RangePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n          )}\n        </Form.Item>\n        \n        <Form.Item\n          wrapperCol={{\n            xs: { span: 24, offset: 0 },\n            sm: { span: 16, offset: 8 },\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n        </Form.Item>\n      </Form>\n      <Table striped bordered condensed hover>\n <thead>\n <tr>\n <th>Description</th>\n <th>Results</th>\n\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>Date</td>\n <td><input type=\"date\" name=\"sampleDate\" placeholder=\"Date of Sample\" onChange={this.handleChange} value={this.state.sampleDate} /></td>\n </tr>\n <tr>\n <td>Name</td>\n <td><input type=\"text\" name=\"sampleTaker\" placeholder=\"Your Name\" onChange={this.handleChange} value={this.state.sampleTaker} /></td>\n </tr>\n <tr>\n <td>Water Temperature</td>\n <td><input type=\"number\" name=\"temp\" placeholder=\"Temp of Sample\" onChange={this.handleChange} value={this.state.temp} /></td>\n </tr>\n <tr>\n <td>DO</td>\n <td><input type=\"number\" name=\"do\" placeholder=\"Dissolved Oxygen\" onChange={this.handleChange} value={this.state.do} /></td>\n </tr>\n <tr>\n <td>Conductivity</td>\n <td><input type=\"number\" name=\"conductivity\" placeholder=\"Conductivity\" onChange={this.handleChange} value={this.state.conductivity} /></td>\n </tr>\n <tr>\n <td>Total Dissolved Solids</td>\n <td><input type=\"number\" name=\"tds\" placeholder=\"Total Dissolved Solids\" onChange={this.handleChange} value={this.state.tds} /></td>\n </tr>\n <tr>\n <td>Salinity</td>\n <td><input type=\"number\" name=\"salinity\" placeholder=\"Salinity\" onChange={this.handleChange} value={this.state.salinity} /></td>\n </tr>\n <tr>\n <td>pH</td>\n <td><input type=\"number\" name=\"pH\" placeholder=\"pH\" onChange={this.handleChange} value={this.state.pH} /></td>\n </tr>\n <tr>\n <td>Turbidity</td>\n <td><input type=\"number\" name=\"turbidity\" placeholder=\"Turbidity\" onChange={this.handleChange} value={this.state.turbidity} /></td>\n </tr>\n <tr>\n <td>Total Nitrogen</td>\n <td><input type=\"number\" name=\"nitrogen\" placeholder=\"Total Nitrogen\" onChange={this.handleChange} value={this.state.nitrogen} /></td>\n </tr>\n <tr>\n <td>Total Phosphorus</td>\n <td><input type=\"number\" name=\"phosphorus\" placeholder=\"Total Phosphorus\" onChange={this.handleChange} value={this.state.phosphorus} /></td>\n </tr>\n <tr>\n <td>Total Hardness</td>\n <td><input type=\"number\" name=\"totalHardness\" placeholder=\"Total Hardness\" onChange={this.handleChange} value={this.state.totalHardness} /></td>\n </tr>\n <tr>\n <td>Total Suspended Solids</td>\n <td><input type=\"number\" name=\"tss\" placeholder=\"Total Suspended Solids\" onChange={this.handleChange} value={this.state.tss} /></td>\n </tr>\n <tr>\n <td>Sample Notes</td>\n <td><textarea  type=\"textArea\" style={{ height: 80, width: 400 }}  name=\"sampleNotes\" placeholder=\"Sample Notes\" onChange={this.handleChange} value={this.state.sampleNotes} /></td>\n </tr>\n\n\n </tbody>\n </Table>\n      </Drawer>\n      </Col>\n\n    </div>\n      </Row>\n\n      </div>\n\n      <div style={{ background: '#F0F0F0', paddingTop: '15px', paddingRight: '5px', paddingLeft: '5px' }}>\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n      <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n\n\n            <Card\n\n\n            >\n            <Tabs defaultActiveKey=\"1\" >\n        <TabPane tab=\"GRAPHS\" key=\"1\">\n          <Row>\n          <Col span={24} style={{paddingTop: '10px'}}>\n\n              <p style={{lineHeight: '2px'}}><b>NITROGEN AND PHOSPHORUS</b></p>\n              <p style={{lineHeight: '2px'}}>18 MONTHS</p>\n              <hr></hr>\n        </Col>\n      </Row>\n\n          <Row>\n          <Col span={24}>\n            <ResponsiveContainer width=\"100%\" aspect={10/3.0} minHeight={200}>\n              <AreaChart data={this.state.orders2}\n        margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n        <defs>\n          <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#086788\" stopOpacity={0.8}/>\n            <stop offset=\"95%\" stopColor=\"#086788\" stopOpacity={0}/>\n          </linearGradient>\n          <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#F0C808\" stopOpacity={0.8}/>\n            <stop offset=\"95%\" stopColor=\"#F0C808\" stopOpacity={0}/>\n          </linearGradient>\n        </defs>\n        <XAxis dataKey=\"sampleDate\" />\n        <YAxis />\n        <CartesianGrid strokeDasharray=\"6 6\" />\n        <Tooltip />\n\n        <Area type=\"monotone\" dataKey=\"nitrogen\" stroke=\"#086788\" fillOpacity={1} fill=\"url(#colorUv)\" ><LabelList dataKey=\"nitrogen\" position=\"top\" /></Area>\n        <Area type=\"monotone\" dataKey=\"phosphorus\" stroke=\"#F0C808\" fillOpacity={1} fill=\"url(#colorPv)\"><LabelList dataKey=\"phosphorus\" position=\"top\" /></Area>\n        <Legend />\n      </AreaChart>\n       </ResponsiveContainer>\n\n      </Col>\n      </Row>\n\n        </TabPane>\n        <TabPane tab=\"DATA TABLE\" key=\"2\">\n          <Row>\n          <Col span={24} style={{paddingTop: '15px'}}>\n\n              <p style={{lineHeight: '2px'}}><b>DATA TABLE</b></p>\n\n              <hr></hr>\n        </Col>\n      </Row>\n\n          <Row>\n          <Col span={24}>\n            <BootstrapTable\n            data={ this.state.dataList }\n            options={options}\n            exportCSV\n            pagination\n\n\n\n            >\n\n            <TableHeaderColumn width='110px' dataField='sampleDate' isKey filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Sample Date</TableHeaderColumn>\n            <TableHeaderColumn width='110px' dataField='temp' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.tempSort }>Temperature</TableHeaderColumn>\n            <TableHeaderColumn width='110px' dataField='do' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.doSort }>Dissolved Oxygen</TableHeaderColumn>\n            <TableHeaderColumn width='110px' dataField='conductivity' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.conductivitySort }>Conductivity</TableHeaderColumn>\n            <TableHeaderColumn width='110px' dataField='tds' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.tdsSort }>Total Dissolved Solids</TableHeaderColumn>\n            <TableHeaderColumn width='110px' dataField='salinity' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.salinitySort }>Salinity</TableHeaderColumn>\n            <TableHeaderColumn width='110px' dataField='nitrogen' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.nitrogenSort }>Total Nitrogen</TableHeaderColumn>\n            <TableHeaderColumn width='110px' dataField='phosphorus' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.phosphorusSort }>Total Phosphorus</TableHeaderColumn>\n            <TableHeaderColumn width='110px' dataField='totalHardness' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.hardnessSort }>Hardness</TableHeaderColumn>\n            <TableHeaderColumn width='110px' dataField='tss' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.tssSort }>TSS</TableHeaderColumn>\n\n            <TableHeaderColumn\n            dataField='button'\n            dataFormat={this.editRow.bind(this)}\n            width='110px'\n            >Edit</TableHeaderColumn>\n\n            <TableHeaderColumn\n              dataField='button'\n              dataFormat={this.deleteRow.bind(this)}\n              width='110px'\n              >Delete</TableHeaderColumn>\n\n\n            </BootstrapTable>\n\n      </Col>\n      </Row>\n\n\n\n        </TabPane>\n\n      </Tabs>\n\n            </Card>\n      </Col>\n      </Row>\n      </div>\n\n\n\n\n\n    </Layout>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}