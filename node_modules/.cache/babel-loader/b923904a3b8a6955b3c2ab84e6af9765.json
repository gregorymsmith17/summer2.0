{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.defaultSort = defaultSort;\nexports.setSortProperties = setSortProperties;\nexports.getSortIconProps = getSortIconProps;\n/* Sorts the given data by the specified column\n * @parameter {array<object>} data - The data to sort\n * @parameter {string} column - the name of the column to sort\n * @parameter {boolean optional} sortAscending - whether or not to sort this column in ascending order\n *\n * TODO: Needs tests!\n */\n\nfunction defaultSort(data, column) {\n  var sortAscending = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return data.sort(function (original, newRecord) {\n    var columnKey = column.split('.');\n    var originalValue = original.hasIn(columnKey) && original.getIn(columnKey) || '';\n    var newRecordValue = newRecord.hasIn(columnKey) && newRecord.getIn(columnKey) || ''; //TODO: This is about the most cheezy sorting check ever.\n    //Make it better\n\n    if (originalValue === newRecordValue) {\n      return 0;\n    } else if (originalValue > newRecordValue) {\n      return sortAscending ? 1 : -1;\n    } else {\n      return sortAscending ? -1 : 1;\n    }\n  });\n}\n\nfunction setSortProperties(_ref) {\n  var setSortColumn = _ref.setSortColumn,\n      sortProperty = _ref.sortProperty,\n      columnId = _ref.columnId;\n  return function () {\n    if (sortProperty === null) {\n      setSortColumn({\n        id: columnId,\n        sortAscending: true\n      });\n      return;\n    }\n\n    var newSortProperty = _extends({}, sortProperty, {\n      sortAscending: !sortProperty.sortAscending\n    });\n\n    setSortColumn(newSortProperty);\n  };\n}\n\nfunction getSortIconProps(props) {\n  var sortProperty = props.sortProperty,\n      sortAscendingIcon = props.sortAscendingIcon,\n      sortDescendingIcon = props.sortDescendingIcon;\n  var sortAscendingClassName = props.sortAscendingClassName,\n      sortDescendingClassName = props.sortDescendingClassName;\n\n  if (sortProperty) {\n    return sortProperty.sortAscending ? {\n      icon: sortAscendingIcon,\n      iconClassName: sortAscendingClassName\n    } : {\n      icon: sortDescendingIcon,\n      iconClassName: sortDescendingClassName\n    };\n  } // return null so we don't render anything if no sortProperty\n\n\n  return null;\n}","map":null,"metadata":{},"sourceType":"script"}