{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, Grid, Jumbotron, Row, Col, NavItem, Button, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport { LineChart, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.imageFormatter = function (cell, row) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    };\n\n    _this.state = {\n      //The data that goes into the table showing weather data\n      weatherData: [],\n      iconData: [],\n      id: '',\n      key: 1,\n      currentTemp: '',\n      currentIcon: '',\n      currentDescription: ''\n    };\n    return _this;\n  } //async allows await to be used for API calls.  Without ASYNC an error will be called saying that await is a reserved word.\n  //ComponentDidMount runs over and over again\n\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var weatherData, api_callWeather, weatherReponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                weatherData = [];\n                _context.next = 3;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat('Oakland', \"&units=\", 'imperial', \"&appid=\", '30573b68170d7f4400c7ac9c1c671ccf'));\n\n              case 3:\n                api_callWeather = _context.sent;\n                _context.next = 6;\n                return api_callWeather.json();\n\n              case 6:\n                weatherReponse = _context.sent;\n                console.log(weatherReponse);\n                this.setState({}); //api call for weather data.  \"FORECAST\" gives 5 days, if that was replaced with \"WEATHER\" it gives the realtime information. CITY ID, Units, and API KEY.\n                //API Key retrived when signed up for api at openweathermap.com\n                //let api_call =  await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${'Oakland'}&units=${'imperial'}&appid=${'30573b68170d7f4400c7ac9c1c671ccf'}`);\n                //let response = await api_call.json();\n                //to see the exact api call remove the // for the console.log(response) below\n                //console.log(response);\n                //for (let i=0; i < response.list.length; i++) {\n                //.push adds temp values and date values to the weatherData array\n                //weatherData.push({temp: response.list[i].main.temp, date: new Date(Date.parse(response.list[i].dt_txt)), description: response.list[i].weather[0].description, icon: response.list[i].weather[0].icon });\n                //weatherData.push({temp: response.list[i].main.temp, date: new Date(Date.parse(response.list[i].dt_txt)), description: response.list[i].weather[0].description, image: 'http://openweathermap.org/img/w/' + response.list[i].weather[0].icon + '.png'  });\n                //console.log(weatherData);\n                //this.setState({\n                //weatherData: weatherData,\n                //iconData: [{icon: '10n'}, {icon:'11n'}]\n                //})\n                //}\n\n                this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n                  var samplesRef = fire.database().ref(\"dailySamples/\".concat(user.uid));\n                  samplesRef.on('value', function (snapshot) {});\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 11,\n        sm: 11,\n        md: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Summer Lake\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Homeowners Association\"), React.createElement(Button, {\n        onClick: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Get Weather\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Modal.Dialog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Modal title\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"One fine body...\"), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Save changes\")))))), React.createElement(Row, {\n        style: {\n          paddingTop: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.weatherData,\n        containerStyle: {\n          width: '800px',\n          overflowX: 'scroll'\n        },\n        pagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"date\",\n        isKey: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \" Date\"), React.createElement(TableHeaderColumn, {\n        dataField: \"temp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Temp\"), React.createElement(TableHeaderColumn, {\n        dataField: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Description\"), React.createElement(TableHeaderColumn, {\n        dataField: \"image\",\n        dataFormat: this.imageFormatter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Product Image\")))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx"],"names":["React","Component","Navbar","Nav","Grid","Jumbotron","Row","Col","NavItem","Button","Modal","Link","ReactDOM","FileSaver","jsPDF","domtoimage","fileDownload","Request","firebase","fire","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiArrowSortedUp","TiPencil","TiTrash","LineChart","BarChart","Bar","Surface","ReferenceLine","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Dashboard","props","imageFormatter","cell","row","state","weatherData","iconData","id","key","currentTemp","currentIcon","currentDescription","fetch","api_callWeather","json","weatherReponse","console","log","setState","removeAuthListener","auth","onAuthStateChanged","user","samplesRef","database","ref","uid","on","snapshot","getWeather","paddingTop","width","overflowX"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Nav, Grid, Jumbotron, Row, Col, NavItem, Button, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\n\nimport firebase from 'firebase';\nimport { fire } from '../fire';\n\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport { LineChart, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\n\nexport default class Dashboard extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n\n        //The data that goes into the table showing weather data\n        weatherData: [],\n        iconData: [],\n\n        id: '',\n        key: 1,\n\n        currentTemp: '',\n        currentIcon: '',\n        currentDescription: '',\n\n\n\n\n\n\n      }\n\n    }\n\n\n\n\n\n\n    //async allows await to be used for API calls.  Without ASYNC an error will be called saying that await is a reserved word.\n\n    //ComponentDidMount runs over and over again\n\n  async componentDidMount() {\n    let weatherData = [];\n\n    let api_callWeather =  await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${'Oakland'}&units=${'imperial'}&appid=${'30573b68170d7f4400c7ac9c1c671ccf'}`);\n\n    let weatherReponse = await api_callWeather.json();\n\n    console.log(weatherReponse)\n\n    this.setState({\n\n    })\n\n\n\n\n    //api call for weather data.  \"FORECAST\" gives 5 days, if that was replaced with \"WEATHER\" it gives the realtime information. CITY ID, Units, and API KEY.\n\n    //API Key retrived when signed up for api at openweathermap.com\n\n    //let api_call =  await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${'Oakland'}&units=${'imperial'}&appid=${'30573b68170d7f4400c7ac9c1c671ccf'}`);\n\n    //let response = await api_call.json();\n\n    //to see the exact api call remove the // for the console.log(response) below\n    //console.log(response);\n\n    //for (let i=0; i < response.list.length; i++) {\n\n\n\n      //.push adds temp values and date values to the weatherData array\n      //weatherData.push({temp: response.list[i].main.temp, date: new Date(Date.parse(response.list[i].dt_txt)), description: response.list[i].weather[0].description, icon: response.list[i].weather[0].icon });\n\n      //weatherData.push({temp: response.list[i].main.temp, date: new Date(Date.parse(response.list[i].dt_txt)), description: response.list[i].weather[0].description, image: 'http://openweathermap.org/img/w/' + response.list[i].weather[0].icon + '.png'  });\n\n\n      //console.log(weatherData);\n\n      //this.setState({\n        //weatherData: weatherData,\n        //iconData: [{icon: '10n'}, {icon:'11n'}]\n      //})\n    //}\n\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n      const samplesRef = fire.database().ref(`dailySamples/${user.uid}`);\n      samplesRef.on('value', (snapshot) => {\n\n\n    });\n  });\n  }\n\n\n\n   imageFormatter = (cell, row) => {\n      return (\n<span><img src={cell} /></span>\n)\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n  render() {\n\n\n\n    return (\n      <Grid>\n        <Row>\n          <Col xs={11} sm={11} md={11} >\n        <Jumbotron>\n          <h1>Summer Lake</h1>\n          <p>\n            Homeowners Association\n          </p>\n          <Button onClick={this.getWeather}>Get Weather</Button>\n\n\n\n        </Jumbotron>\n        <hr></hr>\n\n          <Row>\n            <Col xs={4} sm={4} md={4} >\n\n          <div >\n        <Modal.Dialog>\n          <Modal.Header>\n            <Modal.Title>Modal title</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>One fine body...</Modal.Body>\n\n          <Modal.Footer>\n            <Button>Close</Button>\n            <Button bsStyle=\"primary\">Save changes</Button>\n          </Modal.Footer>\n        </Modal.Dialog>\n      </div>\n    </Col>\n\n  </Row>\n\n\n\n\n\n\n\n<Row style={{paddingTop: \"50px\"}}>\n  <Col xs={8} sm={8} md={8} >\n\n    <BootstrapTable\n    data={ this.state.weatherData }\n    containerStyle={{width: '800px', overflowX: 'scroll'}}\n    pagination\n    >\n\n    <TableHeaderColumn dataField='date' isKey> Date</TableHeaderColumn>\n    <TableHeaderColumn dataField='temp' >Temp</TableHeaderColumn>\n    <TableHeaderColumn dataField='description' >Description</TableHeaderColumn>\n    <TableHeaderColumn dataField=\"image\" dataFormat={this.imageFormatter}>Product Image</TableHeaderColumn>\n\n\n\n\n    </BootstrapTable>\n\n\n\n\n</Col>\n\n</Row>\n\n\n\n\n\n\n\n        </Col>\n        </Row>\n      </Grid>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}