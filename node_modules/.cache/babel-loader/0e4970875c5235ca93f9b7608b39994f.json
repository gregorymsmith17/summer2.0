{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, Grid, Jumbotron, Row, Col, NavItem, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport { LineChart, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.ammoniaOn = function () {\n      var ammonia = \"ammoniaResult\";\n\n      _this.setState({\n        ammoniaPlot: ammonia\n      });\n    };\n\n    _this.ammoniaOff = function () {\n      var ammonia = '';\n\n      _this.setState({\n        ammoniaPlot: ammonia\n      });\n    };\n\n    _this.filter = function (url) {\n      domtoimage.toBlob(document.getElementById('my-node')).then(function (blob) {\n        console.log(blob);\n        var blobUrl = URL.createObjectURL(blob);\n        console.log(blobUrl);\n\n        _this.setState({\n          blobUrl: blobUrl\n        });\n      });\n    };\n\n    _this.onDrag = function (event) {\n      event.preventDefault();\n    };\n\n    _this.onDrop = function (event) {\n      event.preventDefault();\n      var file = event.dataTransfer.files[0];\n\n      _this.setState({\n        file: file\n      });\n    };\n\n    _this.state = {\n      //The data that goes into the table showing weather data\n      weatherData: [],\n      id: '',\n      key: 1,\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\" //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n    };\n    _this.filter = _this.filter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //async allows await to be used for API calls.  Without ASYNC an error will be called saying that await is a reserved word.\n  //ComponentDidMount runs over and over again\n\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var weatherData, api_call, response, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                weatherData = []; //api call for weather data.  \"FORECAST\" gives 5 days, if that was replaced with \"WEATHER\" it gives the realtime information. CITY ID, Units, and API KEY.\n                //API Key retrived when signed up for api at openweathermap.com\n\n                _context.next = 3;\n                return fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=\".concat('Oakland', \"&units=\", 'imperial', \"&appid=\", '30573b68170d7f4400c7ac9c1c671ccf'));\n\n              case 3:\n                api_call = _context.sent;\n                _context.next = 6;\n                return api_call.json();\n\n              case 6:\n                response = _context.sent;\n\n                //to see the exact api call remove the // for the console.log(response) below\n                //console.log(response)\n                for (i = 0; i < response.list.length; i++) {\n                  //.push adds temp values and date values to the weatherData array\n                  weatherData.push({\n                    temp: response.list[i].main.temp,\n                    date: new Date(Date.parse(response.list[i].dt_txt))\n                  });\n                  console.log(weatherData);\n                  this.setState({\n                    weatherData: weatherData\n                  });\n                }\n\n                this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n                  var samplesRef = fire.database().ref(\"dailySamples/\".concat(user.uid));\n                  samplesRef.on('value', function (snapshot) {\n                    var dataList = snapshot.val();\n                    var filter = [];\n                    var orders = snapshot.val();\n                    var orders2 = snapshot.val();\n                    var orders3 = snapshot.val();\n                    var newState = [];\n                    var newState2 = [];\n                    var newState3 = [];\n                  });\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var file = this.state.file;\n      var url = file && URL.createObjectURL(file);\n      var img = document.createElement(\"my-node\");\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 11,\n        sm: 11,\n        md: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Summer Lake\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Homeowners Association\"), React.createElement(Button, {\n        onClick: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Get Weather\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(Row, {\n        style: {\n          paddingTop: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.weatherData,\n        containerStyle: {\n          width: '800px',\n          overflowX: 'scroll'\n        },\n        pagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"date\",\n        isKey: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \" Date\"), React.createElement(TableHeaderColumn, {\n        dataField: \"temp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Temp\")))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx"],"names":["React","Component","Navbar","Nav","Grid","Jumbotron","Row","Col","NavItem","Button","Link","ReactDOM","FileSaver","jsPDF","domtoimage","fileDownload","Request","firebase","fire","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiArrowSortedUp","TiPencil","TiTrash","LineChart","BarChart","Bar","Surface","ReferenceLine","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Dashboard","props","ammoniaOn","ammonia","setState","ammoniaPlot","ammoniaOff","filter","url","toBlob","document","getElementById","then","blob","console","log","blobUrl","URL","createObjectURL","onDrag","event","preventDefault","onDrop","file","dataTransfer","files","state","weatherData","id","key","orders","orders2","dataList","bind","fetch","api_call","json","response","i","list","length","push","temp","main","date","Date","parse","dt_txt","removeAuthListener","auth","onAuthStateChanged","user","samplesRef","database","ref","uid","on","snapshot","val","orders3","newState","newState2","newState3","img","createElement","getWeather","paddingTop","width","overflowX"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Nav, Grid, Jumbotron, Row, Col, NavItem, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\n\nimport firebase from 'firebase';\nimport { fire } from '../fire';\n\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport { LineChart, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\n\nexport default class Dashboard extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n\n        //The data that goes into the table showing weather data\n        weatherData: [],\n\n        id: '',\n        key: 1,\n\n\n        orders: [],\n        orders2: [],\n        dataList: [],\n        filter: \"\",\n\n\n\n\n\n\n\n\n      }\n      //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n      this.filter = this.filter.bind(this);\n\n\n\n    }\n\n\n\n\n\n\n    //async allows await to be used for API calls.  Without ASYNC an error will be called saying that await is a reserved word.\n\n    //ComponentDidMount runs over and over again\n\n  async componentDidMount() {\n    let weatherData = [];\n\n\n    //api call for weather data.  \"FORECAST\" gives 5 days, if that was replaced with \"WEATHER\" it gives the realtime information. CITY ID, Units, and API KEY.\n\n    //API Key retrived when signed up for api at openweathermap.com\n\n    let api_call =  await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${'Oakland'}&units=${'imperial'}&appid=${'30573b68170d7f4400c7ac9c1c671ccf'}`);\n\n    let response = await api_call.json();\n    //to see the exact api call remove the // for the console.log(response) below\n    //console.log(response)\n    for (let i=0; i < response.list.length; i++) {\n\n      //.push adds temp values and date values to the weatherData array\n      weatherData.push({temp: response.list[i].main.temp, date: new Date(Date.parse(response.list[i].dt_txt))});\n\n\n      console.log(weatherData);\n\n      this.setState({\n        weatherData: weatherData,\n      })\n    }\n\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n      const samplesRef = fire.database().ref(`dailySamples/${user.uid}`);\n      samplesRef.on('value', (snapshot) => {\n\n\n\n      let dataList = snapshot.val();\n      let filter = [];\n\n\n      let orders = snapshot.val();\n      let orders2 = snapshot.val();\n      let orders3 = snapshot.val();\n\n      let newState = [];\n      let newState2 = [];\n      let newState3 = [];\n\n  \n\n\n\n\n\n    });\n  });\n  }\n\n  ammoniaOn = () => {\n    let ammonia = \"ammoniaResult\";\n    this.setState({\n      ammoniaPlot: ammonia,\n\n    })\n  }\n\n  ammoniaOff = () => {\n    let ammonia = '';\n    this.setState({\n      ammoniaPlot: ammonia,\n\n    })\n\n  }\n\n  filter = (url) => {\n\n\n\n    domtoimage.toBlob(document.getElementById('my-node'))\n        .then((blob) => {\n\n\n            console.log(blob);\n            const blobUrl = URL.createObjectURL(blob);\n\n            console.log(blobUrl);\n\n            this.setState({\n              blobUrl: blobUrl,\n            })\n\n        });\n\n\n}\n\nonDrag = event => {\n  event.preventDefault()\n}\n\nonDrop = event => {\n  event.preventDefault()\n  let file = event.dataTransfer.files[0]\n  this.setState({ file })\n}\n\n\n\n\n\n\n\n\n  render() {\n    let { file } = this.state\n\n    let url = file && URL.createObjectURL(file)\n\n\n    let img = document.createElement(\"my-node\");\n\n\n\n\n    return (\n      <Grid>\n        <Row>\n          <Col xs={11} sm={11} md={11} >\n        <Jumbotron>\n          <h1>Summer Lake</h1>\n          <p>\n            Homeowners Association\n          </p>\n          <Button onClick={this.getWeather}>Get Weather</Button>\n\n\n        </Jumbotron>\n        <hr></hr>\n\n\n\n\n\n\n\n<Row style={{paddingTop: \"50px\"}}>\n  <Col xs={8} sm={8} md={8} >\n\n    <BootstrapTable\n    data={ this.state.weatherData }\n    containerStyle={{width: '800px',overflowX: 'scroll'}}\n\n\n    pagination\n\n\n    >\n\n    <TableHeaderColumn dataField='date' isKey> Date</TableHeaderColumn>\n\n    <TableHeaderColumn dataField='temp' >Temp</TableHeaderColumn>\n\n\n\n\n\n    </BootstrapTable>\n\n\n</Col>\n\n</Row>\n\n\n\n\n\n\n\n        </Col>\n        </Row>\n      </Grid>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}