{"ast":null,"code":"import _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/testingPage.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, ResponsiveEmbed, ButtonToolbar, Form, Grid, FormGroup, Radio, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\nimport { BootstrapTable, BootstrapButton, DeleteButton, TableHeaderColumn, ExportCSVButton } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport domtoimage from 'dom-to-image';\nimport { ChromePicker } from 'react-color';\nimport fileDownload from \"js-file-download\";\nimport { ComposedChart, LineChart, LabelList, ResponsiveContainer, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, BarChart, Bar, CartesianGrid, Tooltip, Legend, Label } from 'recharts';\nimport { Row, Col, Tabs, message, Card, Drawer, Menu, Icon, Dropdown, Button, Layout, Carousel } from 'antd';\nvar TabPane = Tabs.TabPane;\nvar styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  }\n};\n\nvar testingPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(testingPage, _Component);\n\n  function testingPage(props) {\n    var _this;\n\n    _classCallCheck(this, testingPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(testingPage).call(this, props));\n\n    _this.writeStates = function (itemId) {\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(_this.state.id));\n        sampleRef.child(\"id\").set(_this.state.id);\n        sampleRef.child(\"sampleDate\").set(_this.state.sampleDate);\n        sampleRef.child(\"sampleTaker\").set(_this.state.sampleTaker);\n        sampleRef.child(\"temp\").set(_this.state.temp);\n        sampleRef.child(\"do\").set(_this.state.do);\n        sampleRef.child(\"conductivity\").set(_this.state.conductivity);\n        sampleRef.child(\"tds\").set(_this.state.tds);\n        sampleRef.child(\"salinity\").set(_this.state.salinity);\n        sampleRef.child(\"pH\").set(_this.state.pH);\n        sampleRef.child(\"turbidity\").set(_this.state.turbidity);\n        sampleRef.child(\"nitrogen\").set(_this.state.nitrogen);\n        sampleRef.child(\"phosphorus\").set(_this.state.phosphorus);\n        sampleRef.child(\"totalHardness\").set(_this.state.totalHardness);\n        sampleRef.child(\"tss\").set(_this.state.tss);\n        sampleRef.child(\"sampleNotes\").set(_this.state.sampleNotes);\n      });\n    };\n\n    _this.fillEmpty = function (itemId) {\n      var area = '';\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n          }\n\n          _this.setState({\n            visible: true,\n            sampleDate: '',\n            sampleTaker: '',\n            temp: '',\n            do: '',\n            conductivity: '',\n            tds: '',\n            salinity: '',\n            pH: '',\n            turbidity: '',\n            nitrogen: '',\n            phosphorus: '',\n            totalHardness: '',\n            tss: '',\n            sampleNotes: ''\n          });\n        });\n      });\n    };\n\n    _this.exportPDF = function () {\n      _this.resume.save();\n    };\n\n    _this.nitrogenSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.nitrogen - b.nitrogen;\n      } else {\n        return b.nitrogen - a.nitrogen;\n      }\n    };\n\n    _this.phosphorusSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.phosphorus - b.phosphorus;\n      } else {\n        return b.phosphorus - a.phosphorus;\n      }\n    };\n\n    _this.tdsSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.tds - b.tds;\n      } else {\n        return b.tds - a.tds;\n      }\n    };\n\n    _this.tssSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.tss - b.tss;\n      } else {\n        return b.tss - a.tss;\n      }\n    };\n\n    _this.salinitySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.salinity - b.salinity;\n      } else {\n        return b.salinity - a.salinity;\n      }\n    };\n\n    _this.turbiditySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.turbidity - b.turbidity;\n      } else {\n        return b.turbidity - a.turbidity;\n      }\n    };\n\n    _this.pHSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.pH - b.pH;\n      } else {\n        return b.pH - a.pH;\n      }\n    };\n\n    _this.hardnessSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.totalHardness - b.totalHardness;\n      } else {\n        return b.totalHardness - a.totalHardness;\n      }\n    };\n\n    _this.tempSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.temp - b.temp;\n      } else {\n        return b.temp - a.temp;\n      }\n    };\n\n    _this.doSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.do - b.do;\n      } else {\n        return b.do - a.do;\n      }\n    };\n\n    _this.conductivitySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.conductivity - b.conductivity;\n      } else {\n        return b.conductivity - a.conductivity;\n      }\n    };\n\n    _this.handleExportCSVButtonClick = function (onClick) {\n      // Custom your onClick event here,\n      // it's not necessary to implement this function if you have no any process before onClick\n      console.log('This is my custom function for ExportCSVButton click event');\n      onClick();\n    };\n\n    _this.createCustomExportCSVButton = function (_onClick) {\n      return React.createElement(ExportCSVButton, {\n        btnText: \"Down CSV\",\n        onClick: function onClick() {\n          return _this.handleExportCSVButtonClick(_onClick);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    _this.tempColorChange = function (color) {\n      console.log(_this.state.color);\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"colors/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/colors/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          tempColor: color.hex\n        };\n        samplesRef.set(sample);\n\n        _this.setState({\n          tempColor: color.hex\n        });\n      });\n    };\n\n    _this.test = function () {\n      console.log(\"test\");\n    };\n\n    _this.showDrawer = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.onClose = function () {\n      _this.setState({\n        visible: false,\n        visible1: false,\n        visible2: false\n      });\n    };\n\n    _this.editChart = function (itemId) {\n      var area = '';\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          _this.setState({\n            visible2: true\n          });\n        });\n      });\n    };\n\n    _this.fillParameterInfo = function (e) {\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var parameterListRef = fire.database().ref(\"parameterList/\".concat(user.uid));\n        var parameterInfo = {\n          Parameter_Name: _this.state.Parameter_Name,\n          Parameter_Units: _this.state.Parameter_Units,\n          Parameter_Input: _this.state.Parameter_Input\n        };\n        parameterListRef.push(parameterInfo); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this.setState({\n          Parameter_Name: '',\n          Parameter_Units: ''\n        });\n      });\n    };\n\n    _this.handleSampleChange = function (idx) {\n      return function (evt) {\n        var newParameters = _this.state.Parameter_List.map(function (parameter, sidx) {\n          if (idx !== sidx) return parameter;\n          return _objectSpread({}, parameter, {\n            Parameter_Input: evt.target.value\n          });\n        });\n\n        _this.setState({\n          Parameter_List: newParameters\n        });\n\n        console.log(_this.state.Parameter_List);\n      };\n    };\n\n    _this.sampleSubmit = function (e) {\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var parameterListRef = fire.database().ref(\"parameterSample/\".concat(user.uid));\n        var date = {\n          date: _this.state.sampleDate\n        };\n        var parameterInfo = {\n          list: _this.state.Parameter_List.map(function (parameter) {\n            return {\n              Parameter_Name: parameter.Parameter_Name,\n              Parameter_Units: parameter.Parameter_Units,\n              Parameter_Input: parameter.Parameter_Input\n            };\n          })\n        };\n        console.log(parameterInfo.list);\n        var kvArray = parameterInfo.list;\n        var array = kvArray.map(function (parameter) {\n          var rObj = {};\n          rObj[parameter.Parameter_Name] = parameter.Parameter_Input;\n          return rObj;\n        });\n        var newArray = array.unshift(date);\n        console.log(array);\n\n        _this.setState({\n          parameters: array\n        });\n\n        console.log(_this.state.parameters);\n        var arr = _this.state.Parameter_List;\n        var object = arr.reduce(function (obj, item) {\n          return Object.assign(obj, _defineProperty({\n            date: _this.state.sampleDate,\n            id: item.id\n          }, item.Parameter_Name, item.Parameter_Input));\n        }, {});\n        console.log(object);\n        parameterListRef.push(object); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this.setState({\n          Parameter_Name: '',\n          Parameter_Units: '',\n          Parameter_Input: '',\n          visible: false,\n          visible1: false,\n          visible2: false\n        });\n      });\n    };\n\n    _this.handleDeleteButtonClick = function (onClick) {\n      // Custom your onClick event here,\n      // it's not necessary to implement this function if you have no any process before onClick\n      console.log('This is my custom function for DeleteButton click event');\n      onClick();\n    };\n\n    _this.createCustomDeleteButton = function (onClick, isSelected, row) {\n      return React.createElement(DeleteButton, {\n        btnText: \"CustomDeleteText\",\n        btnContextual: \"btn-warning\",\n        className: \"my-custom-class\",\n        btnGlyphicon: \"glyphicon-edit\",\n        onClick: function onClick() {\n          return _this.removesample(\"\".concat(row.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      //checkbox status\n      checkboxState: true,\n      checkboxState1: true,\n      checkboxStatenitrogen: true,\n      checkboxStatephosphorus: true,\n      checkboxStatetds: true,\n      checkboxStatepH: true,\n      checkboxStatetss: true,\n      checkboxStatesalinity: true,\n      checkboxStateconductivity: true,\n      checkboxStatehardness: true,\n      checkboxStateturbidity: true,\n      checkboxStatedo: true,\n      checkboxStatetemp: true,\n      //data results\n      sampleDate: '',\n      //random id and key, key is for the tab number\n      id: '',\n      key: 1,\n      idKey: '',\n      page: '',\n      area: '',\n      displayColorPicker: false,\n      //colors for graph lines\n      tempColor: '#4C5B5C',\n      doColor: '#6C698D',\n      conductivityColor: '#DD1C1A',\n      tdsColor: '#086788',\n      salinityColor: '#F0C808',\n      pHColor: '#4C5B5C',\n      turbidityColor: '#6C698D',\n      nitrogenColor: '#086788',\n      phosphorusColor: '#F0C808',\n      totalHardnessColor: '#DD1C1A',\n      tssColor: '#086788',\n      sampleNotesColor: '#',\n      //this is the object array for the table\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      //these are for the graphs\n      //for drawers\n      visible: false,\n      visible1: false,\n      visible2: false,\n      //Graph 1\n      parameterGraph1: 'salinity',\n      parameterGraph2: 'tds',\n      parameterGraph3: 'tss',\n      parameterGraph4: 'turbidity',\n      graphType: 'Area',\n      graphType2: 'Area',\n      graphType3: 'Bar',\n      graphType4: 'Bar',\n      //barLine\n      barLine: '',\n      lineLine: '',\n      graphingType1: '',\n      graphingType2: '',\n      graphingType3: '',\n      graphingType4: '',\n      //Inputs for Profile Page\n      lakeName: '',\n      locationCity: '',\n      locationState: '',\n      managementContact: '',\n      hoaContact: '',\n      managementContactNumber: '',\n      hoaContactNumber: '',\n      //testing\n      test: '<Area',\n      test1: '</Area>',\n      Parameter_List: [],\n      Parameter_List1: [],\n      Parameter_Name: '',\n      Parameter_Units: '',\n      Parameter_Input: '',\n      name: \"\",\n      shareholders: [{\n        name: \"\"\n      }],\n      parameters: '',\n      graphingData: [],\n      graphingKeys: [],\n      tableKeys: [],\n      tableKeys1: [] //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.writeData = _this.writeData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //event triggered when text boxes of forms, values are changed\n\n\n  _createClass(testingPage, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      this.setState(_defineProperty({}, name, value));\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      var filter = this.state.filter;\n      var dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n          return String(value);\n        }).find(function (value) {\n          return value.includes(filter);\n        });\n      });\n      var newState = [];\n    } //event triggered when form is submitted\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"parameterList1/\".concat(user.uid));\n        var parameterInfo = {\n          date: _this2.state.sampleDate,\n          list: _this2.state.Parameter_List1.map(function (parameter) {\n            return {\n              Parameter_Name: parameter.Parameter_Name,\n              Parameter_Units: parameter.Parameter_Units,\n              Parameter_Input: parameter.Parameter_Input\n            };\n          })\n        };\n        console.log(parameterInfo);\n        samplesRef.push(parameterInfo); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this2.setState({\n          sampleDate: '',\n          visible: false,\n          visible1: false,\n          visible2: false\n        });\n      });\n    }\n  }, {\n    key: \"snapshotToArray\",\n    value: function snapshotToArray(snapshot) {\n      var returnArr = [];\n      snapshot.forEach(function (childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        returnArr.push(item);\n      });\n      return returnArr;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var parameterListRef = fire.database().ref(\"parameterList/\".concat(user.uid));\n        parameterListRef.on('value', function (snapshot) {\n          var parameterList = snapshot.val();\n          console.log(parameterList);\n          var newState = [];\n\n          for (var order in parameterList) {\n            newState.push({\n              id: order,\n              Parameter_Name: parameterList[order].Parameter_Name,\n              Parameter_Units: parameterList[order].Parameter_Units,\n              Parameter_Input: parameterList[order].Parameter_Input\n            });\n            console.log(newState);\n          }\n\n          _this3.setState({\n            Parameter_List: newState\n          });\n        });\n        var parameterList1Ref = fire.database().ref(\"parameterSample/\".concat(user.uid));\n        parameterList1Ref.on('value', function (snapshot) {\n          var parameterList1 = snapshot.val();\n          console.log(parameterList1);\n\n          _this3.setState({\n            graphingData: parameterList1\n          });\n\n          var newState1 = [];\n\n          for (var order in parameterList1) {\n            newState1.push({\n              id: order,\n              date: parameterList1[order].Date\n            });\n          }\n\n          console.log(_this3.snapshotToArray(snapshot));\n\n          var snapArray = _this3.snapshotToArray(snapshot);\n\n          snapArray.sort(function (a, b) {\n            if (a.date === b.date) {\n              return 0;\n            }\n\n            return a.date > b.date ? 1 : -1;\n          });\n          var snapDate = snapArray.date;\n          console.log(snapDate);\n          var snap = snapArray[0];\n          delete snap.key;\n          delete snap.date;\n          var snapTable = snapArray[0];\n          var snapTable1 = snapArray[0];\n\n          var tableArray = _this3.snapshotToArray(snapshot);\n\n          var table = tableArray[0];\n          delete table.key;\n          var tableKeys = Object.keys(tableArray[0]);\n          console.log(tableKeys);\n          console.log(Object.keys(snapTable));\n          console.log(snap);\n          var arrayKeys = Object.keys(snapArray[0]);\n\n          _this3.setState({\n            graphingKeys: arrayKeys,\n            graphingData: snapArray,\n            tableKeys: tableKeys\n          });\n\n          console.log(_this3.state.tableKeys);\n          console.log(_this3.state.graphingData);\n        });\n      });\n    }\n  }, {\n    key: \"fillStates\",\n    value: function fillStates(itemId) {\n      var _this4 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/parameterInformation/\".concat(user.uid, \"/\").concat(itemId));\n        var sample1Ref = fire.database().ref(\"/parameterList/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          _this4.setState({\n            visible1: true\n          });\n\n          var orders = snapshot.val();\n          var id = fire.database().ref().child(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId)).key;\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n          }\n\n          _this4.setState({\n            id: id,\n            sampleDate: snapshot.child('sampleDate').val(),\n            sampleTaker: snapshot.child('sampleTaker').val(),\n            temp: snapshot.child('temp').val(),\n            do: snapshot.child('do').val(),\n            conductivity: snapshot.child('conductivity').val(),\n            tds: snapshot.child('tds').val(),\n            salinity: snapshot.child('salinity').val(),\n            pH: snapshot.child('pH').val(),\n            turbidity: snapshot.child('turbidity').val(),\n            nitrogen: snapshot.child('nitrogen').val(),\n            phosphorus: snapshot.child('phosphorus').val(),\n            totalHardness: snapshot.child('totalHardness').val(),\n            tss: snapshot.child('tss').val(),\n            sampleNotes: snapshot.child('sampleNotes').val()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"removesample\",\n    value: function removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/paramaterSample/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.remove();\n      });\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(key) {\n      this.setState({\n        key: key\n      });\n    }\n  }, {\n    key: \"writeData\",\n    value: function writeData(e) {\n      var _this5 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        var sample = {\n          id: _this5.state.id,\n          sampleDate: _this5.state.sampleDate,\n          sampleTaker: _this5.state.sampleTaker,\n          temp: _this5.state.temp,\n          do: _this5.state.do,\n          conductivity: _this5.state.conductivity,\n          tds: _this5.state.tds,\n          salinity: _this5.state.salinity,\n          pH: _this5.state.pH,\n          turbidity: _this5.state.turbidity,\n          nitrogen: _this5.state.nitrogen,\n          phosphorus: _this5.state.phosphorus,\n          totalHardness: _this5.state.totalHardness,\n          tss: _this5.state.tss,\n          sampleNotes: _this5.state.sampleNotes\n        };\n        samplesRef.child(_this5.state.id).set(sample);\n\n        _this5.setState({\n          visible1: false\n        }); //this.setState is used to clear the text boxes after the form has been submitted.\n\n      });\n    }\n  }, {\n    key: \"rawMarkup\",\n    value: function rawMarkup() {\n      var rawMarkup = this.props.content;\n      return {\n        __html: rawMarkup\n      };\n    }\n  }, {\n    key: \"editRow\",\n    value: function editRow(row, isSelected, e, id) {\n      var _this6 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"edit\",\n        style: {\n          fontSize: '24px'\n        },\n        onClick: function onClick() {\n          return _this6.fillStates(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }, \"Click me\"));\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(row, isSelected, e, id) {\n      var _this7 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"delete\",\n        style: {\n          fontSize: '24px'\n        },\n        onClick: function onClick() {\n          return _this7.removesample(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      }, \"Click me\"));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      function onRowSelect(row, isSelected, itemId, id) {\n        console.log(\"\".concat(row.id));\n        removesample(\"\".concat(row.id));\n      }\n\n      function onSelectAll(isSelected, rows) {\n        alert(\"is select all: \".concat(isSelected));\n\n        if (isSelected) {\n          alert('Current display and selected data: ');\n        } else {\n          alert('unselect rows: ');\n        }\n\n        for (var i = 0; i < rows.length; i++) {\n          alert(rows[i].id);\n        }\n      }\n\n      var selectRowProp = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        onSelect: onRowSelect // enable click to select\n\n      };\n\n      function handleButtonClick(e) {\n        console.log('click left button', e);\n      }\n\n      function handleMenuClick(e) {\n        console.log('click', e);\n      }\n\n      function buttonFormatter(cell, row) {\n        return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n      }\n\n      var options = {\n        exportCSVBtn: this.createCustomExportCSVButton,\n        deleteBtn: this.createCustomDeleteButton\n      };\n      var popover = {\n        position: 'absolute',\n        zIndex: '2'\n      };\n      var cover = {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      };\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          padding: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 18,\n        lg: 18,\n        xl: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030\n        },\n        __self: this\n      }, \"Monthly Samples\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031\n        },\n        __self: this\n      }, this.state.lakeName))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 6,\n        lg: 6,\n        xl: 6,\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"large\",\n        type: \"primary\",\n        onClick: function onClick() {\n          return _this8.fillEmpty();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034\n        },\n        __self: this\n      }, \"+ Add Sample\"), React.createElement(Drawer, {\n        title: \"Fill in Sample Form\",\n        placement: this.state.placement,\n        closable: false,\n        onClose: this.onClose,\n        visible: this.state.visible,\n        width: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"right-circle\",\n        style: {\n          fontSize: '30px'\n        },\n        onClick: function onClick() {\n          return _this8.onClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045\n        },\n        __self: this\n      }, \"+ Add Sample\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 6,\n        md: 6,\n        lg: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }, \"Sample Date\")), React.createElement(Col, {\n        xs: 24,\n        sm: 18,\n        md: 18,\n        lg: 18,\n        xl: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        name: \"sampleDate\",\n        type: \"date\",\n        placeholder: \"Normal text\",\n        value: this.state.sampleDate,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051\n        },\n        __self: this\n      })))), this.state.Parameter_List.map(function (parameter, idx) {\n        return React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1058\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1059\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 24,\n          sm: 6,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1060\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1060\n          },\n          __self: this\n        }, parameter.Parameter_Name)), React.createElement(Col, {\n          xs: 24,\n          sm: 18,\n          md: 18,\n          lg: 18,\n          xl: 18,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1061\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          name: parameter.Parameter_Name,\n          onChange: _this8.handleSampleChange(idx),\n          type: \"number\",\n          placeholder: \"Normal text\",\n          value: parameter.Parameter_Input,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1062\n          },\n          __self: this\n        }))));\n      }), \";\", React.createElement(Row, {\n        style: {\n          paddingTop: '10px',\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1072\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.sampleSubmit,\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073\n        },\n        __self: this\n      }, \"Add sample\")))))))), React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          paddingTop: '15px',\n          paddingRight: '5px',\n          paddingLeft: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1096\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1097\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1100\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"GRAPHS\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112\n        },\n        __self: this\n      }, this.state.graphingKeys.map(function (txt) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1116\n          },\n          __self: this\n        }, txt);\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 8 / 3.0,\n        minHeight: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133\n        },\n        __self: this\n      }, React.createElement(ComposedChart, {\n        data: this.state.graphingData,\n        syncId: \"anyId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139\n        },\n        __self: this\n      }), React.createElement(Brush, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }), this.state.graphingKeys.map(function (txt) {\n        return React.createElement(Line, {\n          type: \"monotone\",\n          dataKey: txt,\n          fillOpacity: 1,\n          stroke: \"#0000FF\",\n          fill: \"url(#colorNitrogen)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1144\n          },\n          __self: this\n        }, React.createElement(LabelList, {\n          dataKey: txt,\n          position: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1144\n          },\n          __self: this\n        }));\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154\n        },\n        __self: this\n      }))))))))), React.createElement(TabPane, {\n        tab: \"DATA TABLE\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        style: {\n          paddingTop: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185\n        },\n        __self: this\n      }, \"DATA TABLE\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1191\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.graphingData,\n        keyField: \"date\",\n        selectRow: selectRowProp,\n        options: options,\n        exportCSV: true,\n        pagination: true,\n        deleteRow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193\n        },\n        __self: this\n      }, this.state.tableKeys.map(function (txt) {\n        return React.createElement(TableHeaderColumn, {\n          width: \"130px\",\n          dataField: txt,\n          dataSort: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1208\n          },\n          __self: this\n        }, txt);\n      })))))))))));\n    }\n  }]);\n\n  return testingPage;\n}(Component);\n\nexport { testingPage as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/testingPage.jsx"],"names":["React","Component","Navbar","Nav","NavItem","ResponsiveEmbed","ButtonToolbar","Form","Grid","FormGroup","Radio","Table","Popover","ControlLabel","MenuItem","DropdownButton","FormControl","Checkbox","Link","firebase","PDFExport","fire","BootstrapTable","BootstrapButton","DeleteButton","TableHeaderColumn","ExportCSVButton","TiArrowSortedDown","TiBrush","TiArrowSortedUp","TiPencil","TiTrash","domtoimage","ChromePicker","fileDownload","ComposedChart","LineChart","LabelList","ResponsiveContainer","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","BarChart","Bar","CartesianGrid","Tooltip","Legend","Label","Row","Col","Tabs","message","Card","Drawer","Menu","Icon","Dropdown","Button","Layout","Carousel","TabPane","styles","topPad","paddingTop","testingPage","props","writeStates","itemId","removeAuthListener","auth","onAuthStateChanged","user","sampleRef","database","ref","uid","state","id","child","set","sampleDate","sampleTaker","temp","do","conductivity","tds","salinity","pH","turbidity","nitrogen","phosphorus","totalHardness","tss","sampleNotes","fillEmpty","area","on","snapshot","orders","val","newState","order","push","setState","visible","exportPDF","resume","save","nitrogenSort","a","b","dataList","phosphorusSort","tdsSort","tssSort","salinitySort","turbiditySort","pHSort","hardnessSort","tempSort","doSort","conductivitySort","handleExportCSVButtonClick","onClick","console","log","createCustomExportCSVButton","handleClick","displayColorPicker","handleClose","tempColorChange","color","samplesRef","orderID","sample","tempColor","hex","test","showDrawer","onClose","visible1","visible2","editChart","fillParameterInfo","e","preventDefault","parameterListRef","parameterInfo","Parameter_Name","Parameter_Units","Parameter_Input","handleSampleChange","idx","evt","newParameters","Parameter_List","map","parameter","sidx","target","value","sampleSubmit","date","list","kvArray","array","rObj","newArray","unshift","parameters","arr","object","reduce","obj","item","Object","assign","handleDeleteButtonClick","createCustomDeleteButton","isSelected","row","removesample","checkboxState","checkboxState1","checkboxStatenitrogen","checkboxStatephosphorus","checkboxStatetds","checkboxStatepH","checkboxStatetss","checkboxStatesalinity","checkboxStateconductivity","checkboxStatehardness","checkboxStateturbidity","checkboxStatedo","checkboxStatetemp","key","idKey","page","doColor","conductivityColor","tdsColor","salinityColor","pHColor","turbidityColor","nitrogenColor","phosphorusColor","totalHardnessColor","tssColor","sampleNotesColor","samples","orders2","filter","blobUrl","parameterGraph1","parameterGraph2","parameterGraph3","parameterGraph4","graphType","graphType2","graphType3","graphType4","barLine","lineLine","graphingType1","graphingType2","graphingType3","graphingType4","lakeName","locationCity","locationState","managementContact","hoaContact","managementContactNumber","hoaContactNumber","test1","Parameter_List1","name","shareholders","graphingData","graphingKeys","tableKeys","tableKeys1","handleChange","bind","handleSubmit","handleSelect","writeData","values","String","find","includes","returnArr","forEach","childSnapshot","parameterList","parameterList1Ref","parameterList1","newState1","Date","snapshotToArray","snapArray","sort","snapDate","snap","snapTable","snapTable1","tableArray","table","keys","arrayKeys","sample1Ref","remove","rawMarkup","content","__html","textAlign","fontSize","fillStates","event","onRowSelect","onSelectAll","rows","alert","i","length","selectRowProp","mode","clickToSelect","onSelect","handleButtonClick","handleMenuClick","buttonFormatter","cell","options","exportCSVBtn","deleteBtn","popover","position","zIndex","cover","top","right","bottom","left","background","padding","xs","sm","md","lg","placement","paddingRight","paddingLeft","txt","lineHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, ResponsiveEmbed, ButtonToolbar, Form, Grid, FormGroup, Radio,  Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\n\nimport {BootstrapTable, BootstrapButton, DeleteButton, TableHeaderColumn, ExportCSVButton} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport domtoimage from 'dom-to-image';\nimport { ChromePicker } from 'react-color';\nimport fileDownload from \"js-file-download\";\n\n\nimport { ComposedChart, LineChart, LabelList, ResponsiveContainer, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, BarChart, Bar, CartesianGrid, Tooltip, Legend, Label} from 'recharts';\n\nimport { Row, Col, Tabs, message, Card, Drawer, Menu, Icon, Dropdown, Button, Layout, Carousel } from 'antd';\n\nconst TabPane = Tabs.TabPane;\n\nconst styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  },\n};\n\n\n\n\n\nexport default class testingPage extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n          //checkbox status\n          checkboxState: true,\n          checkboxState1: true,\n          checkboxStatenitrogen: true,\n          checkboxStatephosphorus: true,\n          checkboxStatetds: true,\n          checkboxStatepH: true,\n          checkboxStatetss: true,\n          checkboxStatesalinity: true,\n          checkboxStateconductivity: true,\n          checkboxStatehardness: true,\n          checkboxStateturbidity: true,\n          checkboxStatedo: true,\n          checkboxStatetemp: true,\n\n\n\n          //data results\n          sampleDate: '',\n\n\n          //random id and key, key is for the tab number\n          id: '',\n          key: 1,\n          idKey: '',\n          page: '',\n          area: '',\n          displayColorPicker: false,\n\n          //colors for graph lines\n          tempColor: '#4C5B5C',\n          doColor: '#6C698D',\n          conductivityColor: '#DD1C1A',\n          tdsColor: '#086788',\n          salinityColor: '#F0C808',\n          pHColor: '#4C5B5C',\n          turbidityColor: '#6C698D',\n          nitrogenColor: '#086788',\n          phosphorusColor: '#F0C808',\n          totalHardnessColor: '#DD1C1A',\n          tssColor: '#086788',\n          sampleNotesColor: '#',\n\n\n          //this is the object array for the table\n          samples: [],\n          orders: [],\n          orders2: [],\n          dataList: [],\n          filter: \"\",\n          blobUrl: null,\n\n\n          //these are for the graphs\n\n\n          //for drawers\n          visible: false,\n          visible1: false,\n          visible2: false,\n\n\n          //Graph 1\n          parameterGraph1: 'salinity',\n          parameterGraph2: 'tds',\n          parameterGraph3: 'tss',\n          parameterGraph4: 'turbidity',\n          graphType: 'Area',\n          graphType2: 'Area',\n          graphType3: 'Bar',\n          graphType4: 'Bar',\n\n\n          //barLine\n          barLine: '',\n          lineLine: '',\n          graphingType1: '',\n          graphingType2: '',\n          graphingType3: '',\n          graphingType4: '',\n\n\n\n\n          //Inputs for Profile Page\n          lakeName: '',\n          locationCity: '',\n          locationState: '',\n          managementContact: '',\n          hoaContact: '',\n          managementContactNumber: '',\n          hoaContactNumber: '',\n\n          //testing\n          test: '<Area',\n          test1: '</Area>',\n\n          Parameter_List: [],\n          Parameter_List1: [],\n          Parameter_Name: '',\n          Parameter_Units: '',\n          Parameter_Input: '',\n\n          name: \"\",\n      shareholders: [{ name: \"\" }],\n\n          parameters: '',\n          graphingData: [],\n          graphingKeys: [],\n          tableKeys: [],\n          tableKeys1: [],\n\n\n\n        }\n        //these are triggered events.  handleChange is for text box changes\n        //handlesubmit is for the form being submitted.\n        //every event trigger needs to be bound like is below with .bind\n        //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.writeData = this.writeData.bind(this);\n\n\n\n      }\n\n      //event triggered when text boxes of forms, values are changed\n      handleChange(e) {\n        const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n        let filter = this.state.filter;\n        let dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n        return String(value);\n              }).find(function (value) {\n                   return value.includes(filter);\n        });\n\n        });\n        let newState = [];\n\n\n\n\n\n      }\n      //event triggered when form is submitted\n      handleSubmit(e) {\n        e.preventDefault();\n        //fire.database().ref('samples') refers to the main title of the fire database.\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n        const samplesRef = fire.database().ref(`parameterList1/${user.uid}`);\n\n\n\n\n        const parameterInfo = {\n\n          date: this.state.sampleDate,\n          list: this.state.Parameter_List1.map((parameter) => {\n\n                            return (\n                            {\n                            Parameter_Name: parameter.Parameter_Name,\n                            Parameter_Units: parameter.Parameter_Units,\n                            Parameter_Input: parameter.Parameter_Input,\n                          }\n                            )\n                          })\n        }\n\n        console.log(parameterInfo);\n        samplesRef.push(parameterInfo);\n\n\n\n\n\n\n\n\n        //this.setState is used to clear the text boxes after the form has been submitted.\n        this.setState({\n          sampleDate: '',\n\n          visible: false,\n          visible1: false,\n          visible2: false,\n\n        });\n      });\n    }\n\n\n     snapshotToArray(snapshot) {\n        var returnArr = [];\n\n        snapshot.forEach(function(childSnapshot) {\n            var item = childSnapshot.val();\n            item.key = childSnapshot.key;\n\n            returnArr.push(item);\n        });\n\n        return returnArr;\n    };\n\n\n\n\n\n      componentDidMount() {\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n          const parameterListRef = fire.database().ref(`parameterList/${user.uid}`);\n          parameterListRef.on('value', (snapshot) => {\n            let parameterList = snapshot.val();\n            console.log(parameterList);\n\n            let newState = [];\n          for (let order in parameterList) {\n            newState.push({\n              id: order,\n              Parameter_Name: parameterList[order].Parameter_Name,\n              Parameter_Units: parameterList[order].Parameter_Units,\n              Parameter_Input: parameterList[order].Parameter_Input,\n\n            });\n            console.log(newState);\n          }\n          this.setState({\n            Parameter_List: newState,\n          })\n          })\n\n          const parameterList1Ref = fire.database().ref(`parameterSample/${user.uid}`);\n          parameterList1Ref.on('value', (snapshot) => {\n            let parameterList1 = snapshot.val();\n            console.log(parameterList1);\n\n            this.setState({\n              graphingData: parameterList1,\n            })\n\n            let newState1 = [];\n          for (let order in parameterList1) {\n            newState1.push({\n              id: order,\n              date: parameterList1[order].Date,\n\n            });\n\n          }\n\n\n          console.log(this.snapshotToArray(snapshot));\n\n          let snapArray = this.snapshotToArray(snapshot);\n\n\n\n          snapArray.sort(function(a, b) {\n\n            if (a.date === b.date) {\n              return 0;\n            }\n            return a.date > b.date ? 1 : -1;\n        });\n\n          let snapDate = snapArray.date;\n          console.log(snapDate);\n\n          let snap = snapArray[0];\n\n          delete snap.key;\n          delete snap.date;\n\n          let snapTable = snapArray[0];\n\n\n          let snapTable1 = snapArray[0];\n\n          let tableArray = this.snapshotToArray(snapshot);\n          let table = tableArray[0];\n          delete table.key\n\n          let tableKeys = Object.keys(tableArray[0]);\n\n          console.log(tableKeys);\n\n\n\n          console.log(Object.keys(snapTable));\n\n\n\n\n\n          console.log(snap);\n\n\n          let arrayKeys = Object.keys(snapArray[0]);\n\n          this.setState({\n            graphingKeys: arrayKeys,\n            graphingData: snapArray,\n            tableKeys: tableKeys,\n\n          })\n\n          console.log(this.state.tableKeys);\n          console.log(this.state.graphingData);\n\n          })\n    })\n  }\n\n\n\n    fillStates(itemId) {\n      let area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n      const sampleRef = fire.database().ref(`/parameterInformation/${user.uid}/${itemId}`);\n      const sample1Ref = fire.database().ref(`/parameterList/${user.uid}/${itemId}`);\n\n      sampleRef.on('value', (snapshot) => {\n\n        this.setState({\n          visible1: true,\n\n\n        });\n\n      let orders = snapshot.val();\n      let id = fire.database().ref().child(`/monthlySamples/${user.uid}/${itemId}`).key;\n\n      let newState = [];\n      for (let order in orders) {\n        newState.push({\n          id: order,\n\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n          sampleNotes: orders[order].sampleNotes,\n\n        });\n      }\n      this.setState({\n\n        id: id,\n\n\n        sampleDate: snapshot.child('sampleDate').val(),\n        sampleTaker: snapshot.child('sampleTaker').val(),\n        temp: snapshot.child('temp').val(),\n        do: snapshot.child('do').val(),\n        conductivity: snapshot.child('conductivity').val(),\n        tds: snapshot.child('tds').val(),\n        salinity: snapshot.child('salinity').val(),\n        pH: snapshot.child('pH').val(),\n        turbidity: snapshot.child('turbidity').val(),\n        nitrogen: snapshot.child('nitrogen').val(),\n        phosphorus: snapshot.child('phosphorus').val(),\n        totalHardness: snapshot.child('totalHardness').val(),\n        tss: snapshot.child('tss').val(),\n        sampleNotes: snapshot.child('sampleNotes').val(),\n\n\n      })\n\n\n});\n\n    });\n  }\n\n\n  writeStates = (itemId) => {\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${this.state.id}`);\n\n\n    sampleRef.child(\"id\").set(this.state.id);\n\n\n    sampleRef.child(\"sampleDate\").set(this.state.sampleDate);\n    sampleRef.child(\"sampleTaker\").set(this.state.sampleTaker);\n    sampleRef.child(\"temp\").set(this.state.temp);\n    sampleRef.child(\"do\").set(this.state.do);\n    sampleRef.child(\"conductivity\").set(this.state.conductivity);\n    sampleRef.child(\"tds\").set(this.state.tds);\n    sampleRef.child(\"salinity\").set(this.state.salinity);\n    sampleRef.child(\"pH\").set(this.state.pH);\n    sampleRef.child(\"turbidity\").set(this.state.turbidity);\n    sampleRef.child(\"nitrogen\").set(this.state.nitrogen);\n    sampleRef.child(\"phosphorus\").set(this.state.phosphorus);\n    sampleRef.child(\"totalHardness\").set(this.state.totalHardness);\n    sampleRef.child(\"tss\").set(this.state.tss);\n    sampleRef.child(\"sampleNotes\").set(this.state.sampleNotes);\n\n\n\n  });\n\n\n  }\n\n\n\n  fillEmpty = (itemId) => {\n    let area = '';\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n\n    sampleRef.on('value', (snapshot) => {\n\n    let orders = snapshot.val();\n\n    let newState = [];\n    for (let order in orders) {\n      newState.push({\n        id: order,\n\n        sampleDate: orders[order].sampleDate,\n        sampleTaker: orders[order].sampleTaker,\n        temp: orders[order].temp,\n        do: orders[order].do,\n        conductivity: orders[order].conductivity,\n        tds: orders[order].tds,\n        salinity: orders[order].salinity,\n        pH: orders[order].pH,\n        turbidity: orders[order].turbidity,\n        nitrogen: orders[order].nitrogen,\n        phosphorus: orders[order].phosphorus,\n        totalHardness: orders[order].totalHardness,\n        tss: orders[order].tss,\n        sampleNotes: orders[order].sampleNotes,\n\n      });\n    }\n    this.setState({\n\n      visible: true,\n      sampleDate: '',\n      sampleTaker: '',\n      temp: '',\n      do: '',\n      conductivity: '',\n      tds: '',\n      salinity: '',\n      pH: '',\n      turbidity: '',\n      nitrogen: '',\n      phosphorus: '',\n      totalHardness: '',\n      tss: '',\n      sampleNotes: '',\n\n\n    })\n\n\n});\n  });\n}\n\n\n\n    removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/paramaterSample/${user.uid}/${itemId}`);\n\n      sampleRef.remove();\n\n    });\n    }\n\n    handleSelect(key) {\n  this.setState({key});\n}\n\n\nwriteData (e) {\n  e.preventDefault();\n  //fire.database().ref('samples') refers to the main title of the fire database.\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n\n\n  const sample = {\n\n    id: this.state.id,\n    sampleDate: this.state.sampleDate,\n    sampleTaker: this.state.sampleTaker,\n    temp: this.state.temp,\n    do: this.state.do,\n    conductivity: this.state.conductivity,\n    tds: this.state.tds,\n    salinity: this.state.salinity,\n    pH: this.state.pH,\n    turbidity: this.state.turbidity,\n    nitrogen: this.state.nitrogen,\n    phosphorus: this.state.phosphorus,\n    totalHardness: this.state.totalHardness,\n    tss: this.state.tss,\n    sampleNotes: this.state.sampleNotes,\n  }\n\n  samplesRef.child(this.state.id).set(sample);\n\n  this.setState({\n    visible1: false,\n  })\n\n\n\n\n\n\n  //this.setState is used to clear the text boxes after the form has been submitted.\n\n});\n}\n\n\n\n\nexportPDF = () => {\n  this.resume.save();\n}\n\nrawMarkup(){\n  var rawMarkup = this.props.content\n  return { __html: rawMarkup };\n}\n\n\n\n\n\n nitrogenSort = (a, b, order) => {\n   let dataList = this.state.dataList;   // order is desc or asc\n  if (order === 'asc') {\n    return a.nitrogen - b.nitrogen;\n  } else {\n    return b.nitrogen - a.nitrogen;\n  }\n}\nphosphorusSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.phosphorus - b.phosphorus;\n } else {\n   return b.phosphorus - a.phosphorus;\n }\n}\ntdsSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.tds - b.tds;\n } else {\n   return b.tds - a.tds;\n }\n}\ntssSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.tss - b.tss;\n } else {\n   return b.tss - a.tss;\n }\n}\nsalinitySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.salinity - b.salinity;\n } else {\n   return b.salinity - a.salinity;\n }\n}\nturbiditySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.turbidity - b.turbidity;\n } else {\n   return b.turbidity - a.turbidity;\n }\n}\npHSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.pH - b.pH;\n } else {\n   return b.pH - a.pH;\n }\n}\nhardnessSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.totalHardness - b.totalHardness;\n } else {\n   return b.totalHardness - a.totalHardness;\n }\n}\ntempSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.temp - b.temp;\n } else {\n   return b.temp - a.temp;\n }\n}\ndoSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.do - b.do;\n } else {\n   return b.do - a.do;\n }\n}\nconductivitySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.conductivity - b.conductivity;\n } else {\n   return b.conductivity - a.conductivity;\n }\n}\n\n\n\neditRow(row, isSelected, e, id) {\n\n  return (\n      <div style={{textAlign: 'center'}}>\n    <Icon type=\"edit\" style={{fontSize: '24px'}}\n    onClick={() => this.fillStates(`${isSelected.id}`)}>\n      Click me\n    </Icon>\n    </div>\n  )\n}\n\ndeleteRow(row, isSelected, e, id) {\n\n  return (\n    <div style={{textAlign: 'center'}}>\n    <Icon type=\"delete\" style={{fontSize: '24px'}}\n    onClick={() => this.removesample(`${isSelected.id}`)}>\n      Click me\n    </Icon>\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n  onSubmit(event) {\n    event.preventDefault();\n  }\n\n  handleExportCSVButtonClick = (onClick) => {\n  // Custom your onClick event here,\n  // it's not necessary to implement this function if you have no any process before onClick\n  console.log('This is my custom function for ExportCSVButton click event');\n  onClick();\n}\ncreateCustomExportCSVButton = (onClick) => {\n  return (\n    <ExportCSVButton\n      btnText='Down CSV'\n      onClick={ () => this.handleExportCSVButtonClick(onClick) }/>\n  );\n}\n\n\nhandleClick = () => {\n  this.setState({ displayColorPicker: !this.state.displayColorPicker })\n};\n\nhandleClose = () => {\n  this.setState({ displayColorPicker: false })\n};\n\ntempColorChange = (color) => {\n\n    console.log(this.state.color);\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const samplesRef = fire.database().ref(`colors/${user.uid}`);\n    const orderID = fire.database().ref(`/colors/${user.uid}/${orderID}`);\n    const sample = {\n      tempColor: color.hex\n    }\n    samplesRef.set(sample);\n    this.setState({\n      tempColor: color.hex,\n     });\n    });\n}\n\ntest = () => {\n  console.log(\"test\")\n}\n\n\nshowDrawer = () => {\n  this.setState({\n    visible: true,\n  });\n};\nonClose = () => {\n  this.setState({\n    visible: false,\n    visible1: false,\n    visible2: false,\n  });\n};\n\n\n\n\n\n\n\neditChart = (itemId) => {\n  let area = '';\n\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n\n  sampleRef.on('value', (snapshot) => {\n\n  let orders = snapshot.val();\n\n  let newState = [];\n\n  this.setState({\n\n    visible2: true,\n\n\n\n  })\n\n\n});\n});\n}\n\n\n\n\nfillParameterInfo = (e) => {\n  e.preventDefault();\n  //fire.database().ref('samples') refers to the main title of the fire database.\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const parameterListRef = fire.database().ref(`parameterList/${user.uid}`);\n\n  const parameterInfo = {\n    Parameter_Name: this.state.Parameter_Name,\n    Parameter_Units: this.state.Parameter_Units,\n    Parameter_Input: this.state.Parameter_Input,\n  }\n\n  parameterListRef.push(parameterInfo);\n  //this.setState is used to clear the text boxes after the form has been submitted.\n  this.setState({\n    Parameter_Name: '',\n    Parameter_Units: '',\n  });\n\n});\n}\n\nhandleSampleChange = idx => evt => {\n  const newParameters = this.state.Parameter_List.map((parameter, sidx) => {\n    if (idx !== sidx) return parameter;\n    return { ...parameter, Parameter_Input: evt.target.value };\n  });\n  this.setState({ Parameter_List: newParameters });\n  console.log(this.state.Parameter_List);\n\n\n  };\n\n  sampleSubmit = (e) => {\n    e.preventDefault();\n    //fire.database().ref('samples') refers to the main title of the fire database.\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const parameterListRef = fire.database().ref(`parameterSample/${user.uid}`);\n\n    const date = {date: this.state.sampleDate};\n    const parameterInfo = {\n\n      list: this.state.Parameter_List.map((parameter) => {\n\n                        return (\n                        {\n                        Parameter_Name: parameter.Parameter_Name,\n                        Parameter_Units: parameter.Parameter_Units,\n                        Parameter_Input: parameter.Parameter_Input,\n                      }\n                        )\n                      })\n\n    }\n    console.log(parameterInfo.list);\n\n  let kvArray = parameterInfo.list;\n\n  let array = kvArray.map(parameter => {\n    var rObj = {};\n    rObj[parameter.Parameter_Name] = parameter.Parameter_Input;\n    return rObj;\n\n\n  })\n\n  let newArray = array.unshift(date);\n\n\n\n\nconsole.log(array);\nthis.setState({\n  parameters: array,\n})\nconsole.log(this.state.parameters);\n\n\n\n\nvar arr = this.state.Parameter_List;\nvar object = arr.reduce(\n    (obj, item) => Object.assign(obj, {date: this.state.sampleDate, id: item.id, [item.Parameter_Name]: item.Parameter_Input}) ,{});\n\nconsole.log(object);\n\n\n\nparameterListRef.push(object);\n\n\n\n    //this.setState is used to clear the text boxes after the form has been submitted.\n    this.setState({\n      Parameter_Name: '',\n      Parameter_Units: '',\n      Parameter_Input: '',\n      visible: false,\n      visible1: false,\n      visible2: false,\n\n    });\n\n  });\n  }\n\n  handleDeleteButtonClick = (onClick) => {\n    // Custom your onClick event here,\n    // it's not necessary to implement this function if you have no any process before onClick\n    console.log('This is my custom function for DeleteButton click event');\n    onClick();\n  }\n  createCustomDeleteButton = (onClick, isSelected, row) => {\n    return (\n      <DeleteButton\n        btnText='CustomDeleteText'\n        btnContextual='btn-warning'\n        className='my-custom-class'\n        btnGlyphicon='glyphicon-edit'\n        onClick={() => this.removesample(`${row.id}`)}/>\n    );\n  }\n\n\n\n\n\n\n\n\n\n\n\n      render() {\n\n\n        function onRowSelect(row, isSelected, itemId, id) {\n\n\n\n        console.log(`${row.id}`);\n        removesample(`${row.id}`);\n\n        }\n\nfunction onSelectAll(isSelected, rows) {\n  alert(`is select all: ${isSelected}`);\n  if (isSelected) {\n    alert('Current display and selected data: ');\n  } else {\n    alert('unselect rows: ');\n  }\n  for (let i = 0; i < rows.length; i++) {\n    alert(rows[i].id);\n  }\n}\n\nconst selectRowProp = {\n  mode: 'checkbox',\n  clickToSelect: true,\n  onSelect: onRowSelect,  // enable click to select\n};\n\n\n\n\n        function handleButtonClick(e) {\n\n          console.log('click left button', e);\n        }\n\n        function handleMenuClick(e) {\n\n          console.log('click', e);\n        }\n\n\n\n\n        function buttonFormatter(cell, row){\n  return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n}\nconst options = {\n  exportCSVBtn: this.createCustomExportCSVButton,\n  deleteBtn: this.createCustomDeleteButton\n};\n\n   const popover = {\n      position: 'absolute',\n      zIndex: '2',\n    }\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n    }\n\n\n\n\n        return (\n          <Layout>\n\n            <div style={{ background: '#F0F0F0', padding: '5px' }}>\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n              <div style={{position: 'relative'}}>\n            <Col xs={24} sm={24} md={18} lg={18} xl={18}>\n              <h1><b>Monthly Samples</b></h1>\n              <h3><b>{this.state.lakeName}</b></h3>\n            </Col>\n            <Col xs={24} sm={24} md={6} lg={6} xl={6} style={{ textAlign: 'right'}}>\n          <Button size=\"large\" type=\"primary\" onClick={() => this.fillEmpty()}>+ Add Sample</Button>\n            <Drawer\n              title= \"Fill in Sample Form\"\n              placement={this.state.placement}\n              closable={false}\n              onClose={this.onClose}\n              visible={this.state.visible}\n              width={500}\n            >\n            <form>\n              <Row style={{textAlign: 'right'}}>\n              <Icon type=\"right-circle\"  style={{fontSize: '30px'}} onClick={() => this.onClose()}>+ Add Sample</Icon>\n              </Row>\n              <Row>\n            <FormGroup>\n            <Col xs={24} sm={6} md={6} lg={6} xl={6}><b>Sample Date</b></Col>\n            <Col xs={24} sm={18} md={18} lg={18} xl={18}>\n            <FormControl name='sampleDate' type='date' placeholder=\"Normal text\" value={this.state.sampleDate}\n            onChange={this.handleChange} /></Col>\n            </FormGroup>\n            </Row>\n            {this.state.Parameter_List.map((parameter, idx) => {\n\n                          return (\n                            <Row>\n                      <FormGroup>\n                        <Col xs={24} sm={6} md={6} lg={6} xl={6}><b>{parameter.Parameter_Name}</b></Col>\n                        <Col xs={24} sm={18} md={18} lg={18} xl={18}>\n                        <FormControl name={parameter.Parameter_Name}\n                          onChange={this.handleSampleChange(idx)}  type=\"number\" placeholder=\"Normal text\" value={parameter.Parameter_Input} /></Col>\n                      </FormGroup>\n                      </Row>\n                    )})};\n\n\n\n\n\n            <Row style={{paddingTop: '10px', textAlign: 'right'}}>\n            <Button type=\"primary\" onClick={this.sampleSubmit} bsStyle=\"primary\">Add sample</Button>\n            </Row>\n\n\n\n\n\n            </form>\n\n\n\n            </Drawer>\n\n\n\n            </Col>\n\n          </div>\n            </Row>\n\n            </div>\n\n            <div style={{ background: '#F0F0F0', paddingTop: '15px', paddingRight: '5px', paddingLeft: '5px' }}>\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n\n\n                  <Card\n\n\n                  >\n                  <Tabs defaultActiveKey=\"1\" >\n              <TabPane tab=\"GRAPHS\" key=\"1\">\n                <Row>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n\n\n\n                <Row >\n                <Col xs={24} sm={24} md={24} lg={24} xl={24} >\n\n                  {this.state.graphingKeys.map(txt => {\n                    return (\n                      <li>{txt}</li>\n                    )\n                  })}\n\n\n            </Col>\n            </Row>\n            <Row>\n            <Col span={24}>\n            <hr></hr>\n            </Col>\n            </Row>\n\n\n            <Row>\n              <Row >\n              <Col xs={24} sm={24} md={24} lg={24} xl={24} >\n                <ResponsiveContainer width=\"100%\" aspect={8/3.0} minHeight={200}>\n                  <ComposedChart data={this.state.graphingData}\n            syncId=\"anyId\">\n\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Brush />\n\n              {this.state.graphingKeys.map(txt => {\n                return (\n                  <Line type=\"monotone\" dataKey={txt}  fillOpacity={1} stroke=\"#0000FF\" fill=\"url(#colorNitrogen)\"><LabelList dataKey={txt} position=\"top\" /></Line>\n                )\n              })}\n\n\n\n\n\n\n\n            <Legend />\n\n          </ComposedChart>\n           </ResponsiveContainer>\n\n          </Col>\n          </Row>\n\n\n\n      </Row>\n\n\n\n\n\n\n\n\n\n\n\n\n            </Col>\n          </Row>\n\n              </TabPane>\n              <TabPane tab=\"DATA TABLE\" key=\"2\">\n                <Row>\n                <Col span={24} style={{paddingTop: '15px'}}>\n\n                    <p style={{lineHeight: '2px'}}><b>DATA TABLE</b></p>\n\n                    <hr></hr>\n              </Col>\n            </Row>\n\n                <Row>\n                <Col span={24}>\n                  <BootstrapTable\n                  data={this.state.graphingData}\n                  keyField='date'\n                  selectRow={ selectRowProp }\n                  options={options}\n                  exportCSV\n                  pagination\n                  deleteRow\n                  >\n\n\n\n                  {this.state.tableKeys.map(txt => {\n                    return (\n\n                      <TableHeaderColumn width='130px'  dataField={txt}   dataSort>{txt}</TableHeaderColumn>\n                    )\n                  })}\n\n\n\n\n\n\n\n\n\n\n\n\n                  </BootstrapTable>\n\n            </Col>\n            </Row>\n\n\n\n              </TabPane>\n\n            </Tabs>\n\n                  </Card>\n            </Col>\n            </Row>\n            </div>\n\n\n\n\n\n          </Layout>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}