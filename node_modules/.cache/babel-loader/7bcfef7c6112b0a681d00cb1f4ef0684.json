{"ast":null,"code":"import _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, Grid, Jumbotron, Row, Col, NavItem, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport { saveSvgAsPng, svgAsPngUri } from 'save-svg-as-png';\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport { LineChart, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this));\n\n    _this.ammoniaOn = function () {\n      var ammonia = \"ammoniaResult\";\n\n      _this.setState({\n        ammoniaPlot: ammonia\n      });\n    };\n\n    _this.ammoniaOff = function () {\n      var ammonia = '';\n\n      _this.setState({\n        ammoniaPlot: ammonia\n      });\n    };\n\n    _this.exportChart = function (asSVG) {\n      // A Recharts component is rendered as a div that contains namely an SVG\n      // which holds the chart. We can access this SVG by calling upon the first child/\n      var chartSVG = ReactDOM.findDOMNode(_this.currentChart).children[0];\n      console.log(chartSVG);\n      svgAsPngUri(document.getElementById(\"currentChart\"), {}, function (uri) {\n        console.log(uri);\n      });\n      console.log(\"test\");\n    };\n\n    _this.state = {\n      sampleDate: '',\n      sampleTime: '',\n      operator: '',\n      sampleLocation: '',\n      temperatureResult: '',\n      conductivityResult: '',\n      pHResult: '',\n      DOResult: '',\n      nitrateResult: '',\n      nitriteResult: '',\n      ammoniaResult: '',\n      totalInorganicNitrogen: '',\n      turbidityResult: '',\n      TSSResult: '',\n      id: '',\n      key: 1,\n      idKey: '',\n      page: '',\n      area: '',\n      areaData: [],\n      responsibility: '',\n      responsibilityData: [],\n      startDate: '',\n      startDateData: [],\n      endDate: '',\n      endDateData: [],\n      description: '',\n      descriptionData: [],\n      checkbox: '',\n      checkboxData: [],\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blob: '',\n      ammoniaPlot: 'ammoniaResult' //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"dailySamples/\".concat(user.uid));\n        samplesRef.on('value', function (snapshot) {\n          var startDateData = [];\n          var endDateData = [];\n          var descriptionData = [];\n          var responsibilityData = [];\n          var areaData = [];\n          var checkboxData = [];\n          var idData = [];\n          var sampleDateData = [];\n          var ammoniaResultData = [];\n          var dataList = snapshot.val();\n          var filter = [];\n          var orders = snapshot.val();\n          var orders2 = snapshot.val();\n          var orders3 = snapshot.val();\n          var newState = [];\n          var newState2 = [];\n          var newState3 = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              startDate: orders[order].startDate,\n              endDate: orders[order].endDate,\n              description: orders[order].description,\n              responsibility: orders[order].responsibility,\n              area: orders[order].area,\n              sampleDate: orders[order].sampleDate,\n              sampleTime: orders[order].sampleTime,\n              operator: orders[order].operator,\n              sampleLocation: orders[order].sampleLocation,\n              temperatureResult: orders[order].temperatureResult,\n              conductivityResult: orders[order].conductivityResult,\n              pHResult: orders[order].pHResult,\n              DOResult: orders[order].DOResult,\n              nitrateResult: orders[order].nitrateResult,\n              nitriteResult: orders[order].nitriteResult,\n              ammoniaResult: orders[order].ammoniaResult,\n              totalInorganicNitrogen: orders[order].totalInorganicNitrogen,\n              turbidityResult: orders[order].turbidityResult,\n              TSSResult: orders[order].TSSResult\n            });\n          }\n\n          for (var order2 in orders2) {\n            newState2.push({\n              sampleDate: orders2[order2].sampleDate,\n              DOResult: orders2[order2].DOResult,\n              nitrateResult: orders2[order2].nitrateResult,\n              nitriteResult: orders2[order2].nitriteResult,\n              ammoniaResult: orders2[order2].ammoniaResult\n            });\n          }\n\n          newState2.sort(function (a, b) {\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n          });\n          newState.sort(function (a, b) {\n            if (b.sampleDate === a.sampleDate) {\n              return 0;\n            }\n\n            return b.sampleDate > a.sampleDate ? 1 : -1;\n          });\n\n          _this2.setState({\n            orders: newState,\n            orders2: newState2,\n            dataList: newState\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          simple = _this$state.simple,\n          gap = _this$state.gap;\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 11,\n        sm: 11,\n        md: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Summer Lake\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Homeowners Association\"), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this3.exportChart();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Test\"), React.createElement(Button, {\n        onClick: function onClick(e) {\n          return _this3.exportChart();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \" Envia Proposta \\xBB\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, this.state.blob), React.createElement(Row, {\n        style: {\n          paddingTop: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 5,\n        sm: 5,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        id: \"currentChart\",\n        ref: function ref(chart) {\n          return _this3.currentChart = chart;\n        },\n        width: 500,\n        height: 300,\n        data: this.state.orders2,\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"DOResult\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"nitrateResult\",\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        title: \"Nitrite\",\n        dataKey: \"nitriteResult\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.ammoniaPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(ReferenceLine, {\n        y: 8,\n        strokeDasharray: \"5 5\",\n        label: \"Reporting Limit\",\n        stroke: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(Brush, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.ammoniaOn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Ammonia On\"), React.createElement(\"button\", {\n        onClick: this.ammoniaOff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Ammonia Off\")), React.createElement(Col, {\n        xs: 1,\n        sm: 1,\n        md: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(Col, {\n        xs: 5,\n        sm: 5,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        width: 500,\n        height: 300,\n        data: this.state.orders2,\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"DOResult\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"nitrateResult\",\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        title: \"Nitrite\",\n        dataKey: \"nitriteResult\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.ammoniaPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), React.createElement(ReferenceLine, {\n        y: 8,\n        strokeDasharray: \"5 5\",\n        label: \"Reporting Limit\",\n        stroke: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(Brush, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.ammoniaOn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Ammonia On\"), React.createElement(\"button\", {\n        onClick: this.ammoniaOff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Ammonia Off\"))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx"],"names":["React","Component","Navbar","Nav","Grid","Jumbotron","Row","Col","NavItem","Button","Link","ReactDOM","FileSaver","saveSvgAsPng","svgAsPngUri","firebase","fire","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiArrowSortedUp","TiPencil","TiTrash","LineChart","BarChart","Bar","Surface","ReferenceLine","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Dashboard","ammoniaOn","ammonia","setState","ammoniaPlot","ammoniaOff","exportChart","asSVG","chartSVG","findDOMNode","currentChart","children","console","log","document","getElementById","uri","state","sampleDate","sampleTime","operator","sampleLocation","temperatureResult","conductivityResult","pHResult","DOResult","nitrateResult","nitriteResult","ammoniaResult","totalInorganicNitrogen","turbidityResult","TSSResult","id","key","idKey","page","area","areaData","responsibility","responsibilityData","startDate","startDateData","endDate","endDateData","description","descriptionData","checkbox","checkboxData","samples","orders","orders2","dataList","filter","blob","removeAuthListener","auth","onAuthStateChanged","user","samplesRef","database","ref","uid","on","snapshot","idData","sampleDateData","ammoniaResultData","val","orders3","newState","newState2","newState3","order","push","order2","sort","a","b","simple","gap","e","paddingTop","chart","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Nav, Grid, Jumbotron, Row, Col, NavItem, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport {saveSvgAsPng, svgAsPngUri} from 'save-svg-as-png';\n\nimport firebase from 'firebase';\nimport { fire } from '../fire';\n\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport { LineChart, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\n\n\nexport default class Dashboard extends Component {\n\n  constructor() {\n      super();\n      this.state = {\n        sampleDate: '',\n        sampleTime: '',\n        operator: '',\n        sampleLocation: '',\n        temperatureResult: '',\n        conductivityResult: '',\n        pHResult: '',\n        DOResult: '',\n        nitrateResult: '',\n        nitriteResult: '',\n        ammoniaResult: '',\n        totalInorganicNitrogen: '',\n        turbidityResult: '',\n        TSSResult: '',\n\n        id: '',\n        key: 1,\n        idKey: '',\n        page: '',\n        area: '',\n        areaData: [],\n        responsibility: '',\n        responsibilityData: [],\n        startDate: '',\n        startDateData: [],\n        endDate: '',\n        endDateData: [],\n        description: '',\n        descriptionData: [],\n        checkbox: '',\n        checkboxData: [],\n        samples: [],\n        orders: [],\n        orders2: [],\n        dataList: [],\n        filter: \"\",\n        blob:'',\n\n        ammoniaPlot: 'ammoniaResult',\n\n\n\n      }\n      //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n\n\n\n\n    }\n\n\n  componentDidMount() {\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const samplesRef = fire.database().ref(`dailySamples/${user.uid}`);\n      samplesRef.on('value', (snapshot) => {\n\n        let startDateData = [];\n        let endDateData = [];\n        let descriptionData = [];\n        let responsibilityData = [];\n        let areaData = [];\n        let checkboxData = [];\n        let idData = [];\n        let sampleDateData = [];\n        let ammoniaResultData = [];\n\n        let dataList = snapshot.val();\n        let filter = [];\n\n\n      let orders = snapshot.val();\n      let orders2 = snapshot.val();\n      let orders3 = snapshot.val();\n\n      let newState = [];\n      let newState2 = [];\n      let newState3 = [];\n\n      for (let order in orders) {\n        newState.push({\n          id: order,\n          startDate: orders[order].startDate,\n          endDate: orders[order].endDate,\n          description: orders[order].description,\n          responsibility: orders[order].responsibility,\n          area: orders[order].area,\n\n          sampleDate: orders[order].sampleDate,\n          sampleTime: orders[order].sampleTime,\n          operator: orders[order].operator,\n          sampleLocation: orders[order].sampleLocation,\n          temperatureResult: orders[order].temperatureResult,\n          conductivityResult: orders[order].conductivityResult,\n          pHResult: orders[order].pHResult,\n          DOResult: orders[order].DOResult,\n          nitrateResult: orders[order].nitrateResult,\n          nitriteResult: orders[order].nitriteResult,\n          ammoniaResult: orders[order].ammoniaResult,\n          totalInorganicNitrogen: orders[order].totalInorganicNitrogen,\n          turbidityResult: orders[order].turbidityResult,\n          TSSResult: orders[order].TSSResult,\n\n        });\n      }\n      for (let order2 in orders2) {\n        newState2.push({\n\n          sampleDate: orders2[order2].sampleDate,\n          DOResult: orders2[order2].DOResult,\n          nitrateResult: orders2[order2].nitrateResult,\n          nitriteResult: orders2[order2].nitriteResult,\n          ammoniaResult: orders2[order2].ammoniaResult,\n\n        });\n      }\n      newState2.sort(function(a, b) {\n\n        if (a.sampleDate === b.sampleDate) {\n          return 0;\n        }\n        return a.sampleDate > b.sampleDate ? 1 : -1;\n    });\n    newState.sort(function(a, b) {\n\n      if (b.sampleDate === a.sampleDate) {\n        return 0;\n      }\n      return b.sampleDate > a.sampleDate ? 1 : -1;\n  });\n\n\n      this.setState({\n        orders: newState,\n        orders2: newState2,\n        dataList: newState,\n      });\n    });\n  });\n  }\n\n  ammoniaOn = () => {\n    let ammonia = \"ammoniaResult\";\n    this.setState({\n      ammoniaPlot: ammonia,\n\n    })\n  }\n\n  ammoniaOff = () => {\n    let ammonia = '';\n    this.setState({\n      ammoniaPlot: ammonia,\n\n    })\n\n  }\n\n  exportChart = (asSVG) => {\n\n    // A Recharts component is rendered as a div that contains namely an SVG\n    // which holds the chart. We can access this SVG by calling upon the first child/\n    let chartSVG = ReactDOM.findDOMNode(this.currentChart).children[0];\n    console.log(chartSVG);\n\n    svgAsPngUri(document.getElementById(\"currentChart\"), {}, function(uri) {\n\n    console.log(uri);\n\n});\n\n\n    console.log(\"test\");\n\n\n}\n\n\n\n\n\n\n\n  render() {\n    const { simple, gap } = this.state;\n\n    return (\n      <Grid>\n        <Row>\n          <Col xs={11} sm={11} md={11} >\n        <Jumbotron>\n          <h1>Summer Lake</h1>\n          <p>\n            Homeowners Association\n          </p>\n          <button onClick={(e) => this.exportChart()}>Test</button>\n          <Button onClick={(e) => this.exportChart()}> Envia Proposta »</Button>\n\n        </Jumbotron>\n        <hr></hr>\n        <p>{this.state.blob}</p>\n\n\n\n\n\n<Row style={{paddingTop: \"50px\"}}>\n  <Col xs={5} sm={5} md={5} >\n\n    <LineChart\n      id=\"currentChart\"\n      ref={(chart) => this.currentChart = chart}\n      width={500}\n      height={300} data={this.state.orders2}\n      margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n  <CartesianGrid strokeDasharray=\"3 3\"/>\n  <XAxis dataKey=\"sampleDate\"/>\n  <YAxis/>\n  <Tooltip/>\n    <Line type=\"monotone\" dataKey=\"DOResult\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n <Line type=\"monotone\" dataKey=\"nitrateResult\" stroke=\"#82ca9d\" />\n   <Line type=\"monotone\" title=\"Nitrite\" dataKey=\"nitriteResult\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n<Line type=\"monotone\" dataKey={this.state.ammoniaPlot} stroke=\"#82ca9d\" />\n<Legend />\n<ReferenceLine y={8} strokeDasharray=\"5 5\" label=\"Reporting Limit\" stroke=\"red\"/>\n<Brush />\n</LineChart>\n<button onClick={this.ammoniaOn}>Ammonia On</button>\n<button onClick={this.ammoniaOff}>Ammonia Off</button>\n</Col>\n\n<Col xs={1} sm={1} md={1}></Col>\n\n<Col xs={5} sm={5} md={5} >\n<LineChart width={500} height={300} data={this.state.orders2}\nmargin={{top: 10, right: 30, left: 0, bottom: 0}}>\n<CartesianGrid strokeDasharray=\"3 3\"/>\n<XAxis dataKey=\"sampleDate\"/>\n<YAxis/>\n<Tooltip/>\n<Line type=\"monotone\" dataKey=\"DOResult\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n<Line type=\"monotone\" dataKey=\"nitrateResult\" stroke=\"#82ca9d\" />\n<Line type=\"monotone\" title=\"Nitrite\" dataKey=\"nitriteResult\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n<Line type=\"monotone\" dataKey={this.state.ammoniaPlot} stroke=\"#82ca9d\" />\n<Legend />\n<ReferenceLine y={8} strokeDasharray=\"5 5\" label=\"Reporting Limit\" stroke=\"red\"/>\n<Brush />\n</LineChart>\n<button onClick={this.ammoniaOn}>Ammonia On</button>\n<button onClick={this.ammoniaOff}>Ammonia Off</button>\n</Col>\n\n</Row>\n\n\n\n\n\n\n\n        </Col>\n        </Row>\n      </Grid>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}