{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connect = exports.mergeConnectParametersWithOptions = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /// This method appends options onto existing connect parameters\n\n\nvar mergeConnectParametersWithOptions = exports.mergeConnectParametersWithOptions = function mergeConnectParametersWithOptions(originalConnect, newOptions) {\n  var _originalConnect = _slicedToArray(originalConnect, 4),\n      mapStateFromProps = _originalConnect[0],\n      mapDispatchFromProps = _originalConnect[1],\n      mergeProps = _originalConnect[2],\n      options = _originalConnect[3];\n\n  return [mapStateFromProps, mapDispatchFromProps, mergeProps, _extends({}, options, newOptions)];\n};\n\nvar griddleConnect = function griddleConnect() {\n  for (var _len = arguments.length, connectOptions = Array(_len), _key = 0; _key < _len; _key++) {\n    connectOptions[_key] = arguments[_key];\n  }\n\n  return function (OriginalComponent) {\n    var _class, _temp;\n\n    return _temp = _class = function (_React$Component) {\n      _inherits(_class, _React$Component);\n\n      function _class(props, context) {\n        _classCallCheck(this, _class);\n\n        var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props, context));\n\n        var newOptions = mergeConnectParametersWithOptions(connectOptions, {\n          storeKey: context.storeKey\n        });\n        _this.ConnectedComponent = _reactRedux.connect.apply(undefined, _toConsumableArray(newOptions))(OriginalComponent);\n        return _this;\n      }\n\n      _createClass(_class, [{\n        key: 'render',\n        value: function render() {\n          return _react2.default.createElement(this.ConnectedComponent, this.props);\n        }\n      }]);\n\n      return _class;\n    }(_react2.default.Component), _class.contextTypes = {\n      storeKey: _propTypes2.default.string\n    }, _temp;\n  };\n};\n\nexports.connect = griddleConnect;","map":null,"metadata":{},"sourceType":"script"}