{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, FormGroup, Checkbox, Grid, PageHeader, Jumbotron, NavItem, Modal, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { ChromePicker } from 'react-color';\nimport GoogleMapReact from 'google-map-react';\nimport { SketchPicker } from 'react-color';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport { ComposedChart, LineChart, LabelList, ResponsiveContainer, ReferenceArea, AreaChart, Brush, Area, Line, Tooltip, XAxis, YAxis, BarChart, Bar, CartesianGrid, Legend, Label } from 'recharts';\nimport { Row, Col, Tabs, Table, Divider, Tag, message, Card, Drawer, Menu, Dropdown, Button, Layout, Carousel, Input, Popover, Icon, Cascader, Switch, Select, AutoComplete, Radio } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nvar AnyReactComponent = function AnyReactComponent(_ref) {\n  var text = _ref.text;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, text);\n};\n\nvar TabPane = Tabs.TabPane;\nvar tabListNoTitle = [{\n  key: 'article',\n  tab: 'article'\n}, {\n  key: 'app',\n  tab: 'app'\n}, {\n  key: 'project',\n  tab: 'project'\n}];\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.onSelectChange = function (selectedRowKeys) {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.getColumnSearchProps = function (dataIndex) {\n      return {\n        filterDropdown: function filterDropdown(_ref2) {\n          var setSelectedKeys = _ref2.setSelectedKeys,\n              selectedKeys = _ref2.selectedKeys,\n              confirm = _ref2.confirm,\n              clearFilters = _ref2.clearFilters;\n          return React.createElement(\"div\", {\n            style: {\n              padding: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 522\n            },\n            __self: this\n          }, React.createElement(Input, {\n            ref: function ref(node) {\n              _this.searchInput = node;\n            },\n            placeholder: \"Search \".concat(dataIndex),\n            value: selectedKeys[0],\n            onChange: function onChange(e) {\n              return setSelectedKeys(e.target.value ? [e.target.value] : []);\n            },\n            onPressEnter: function onPressEnter() {\n              return _this.handleSearch(selectedKeys, confirm);\n            },\n            style: {\n              width: 188,\n              marginBottom: 8,\n              display: 'block'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 523\n            },\n            __self: this\n          }), React.createElement(Button, {\n            type: \"primary\",\n            onClick: function onClick() {\n              return _this.handleSearch(selectedKeys, confirm);\n            },\n            icon: \"search\",\n            size: \"small\",\n            style: {\n              width: 90,\n              marginRight: 8\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 531\n            },\n            __self: this\n          }, \"Search\"), React.createElement(Button, {\n            onClick: function onClick() {\n              return _this.handleReset(clearFilters);\n            },\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 540\n            },\n            __self: this\n          }, \"Reset\"));\n        },\n        filterIcon: function filterIcon(filtered) {\n          return React.createElement(Icon, {\n            type: \"search\",\n            style: {\n              color: filtered ? '#1890ff' : undefined\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 549\n            },\n            __self: this\n          });\n        },\n        onFilter: function onFilter(value, record) {\n          return record[dataIndex].toString().toLowerCase().includes(value.toLowerCase());\n        },\n        onFilterDropdownVisibleChange: function onFilterDropdownVisibleChange(visible) {\n          if (visible) {\n            setTimeout(function () {\n              return _this.searchInput.select();\n            });\n          }\n        }\n      };\n    };\n\n    _this.handleSearch = function (selectedKeys, confirm) {\n      confirm();\n\n      _this.setState({\n        searchText: selectedKeys[0]\n      });\n\n      console.log(selectedKeys[0]);\n      console.log(_this.state.searchText);\n    };\n\n    _this.handleReset = function (clearFilters) {\n      clearFilters();\n\n      _this.setState({\n        searchText: ''\n      });\n    };\n\n    _this.deleteRow = function (row, isSelected, e, id, key) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"delete\",\n        style: {\n          fontSize: '24px',\n          color: '#101441'\n        },\n        onClick: function onClick() {\n          return _this.removesample(isSelected.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, \"Click me\"));\n    };\n\n    _this.editRow = function (row, isSelected, e, id, key) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"copy\",\n        style: {\n          fontSize: '24px',\n          color: '#101441'\n        },\n        onClick: function onClick() {\n          return _this.fillStates(isSelected.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, \"Click me\"));\n    };\n\n    _this.editRow1 = function (row, isSelected, e, id, key) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"form\",\n        style: {\n          fontSize: '24px',\n          color: '#101441'\n        },\n        onClick: function onClick() {\n          return _this.fillParameterStates(isSelected.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, \"Click me\"));\n    };\n\n    _this.parameterOverwrite = function (e) {\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleListRef = fire.database().ref(\"sampleList/\".concat(user.uid, \"/\").concat(_this.state.id));\n        var object = {\n          Sample_Item: _this.state.Sample_Item,\n          color: _this.state.color,\n          dataType: _this.state.dataType,\n          Sample_Input: '',\n          id: _this.state.id\n        };\n        console.log(object);\n        sampleListRef.set(object); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this.setState({\n          visible3: false\n        });\n      });\n    };\n\n    _this.fillParameterInfo = function (e, itemId) {\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleListRef = fire.database().ref(\"sampleList/\".concat(user.uid));\n        var id = fire.database().ref().child(\"/sampleList/\".concat(user.uid, \"/\").concat(itemId)).key;\n        var sampleInfo = {\n          Sample_Item: _this.state.Sample_Item,\n          Sample_Input: '',\n          dataType: _this.state.dataType,\n          color: _this.state.color,\n          id: id\n        };\n        sampleListRef.push(sampleInfo); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this.setState({\n          Sample_Item: '',\n          dataType: '',\n          color: '#000000',\n          childrenDrawer: false,\n          visible4: false\n        });\n      });\n    };\n\n    _this.editRowColor = function (row, isSelected, e, id, key) {\n      var content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, React.createElement(SketchPicker, {\n        color: _this.state.color,\n        onChangeComplete: _this.overwriteColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }, React.createElement(Popover, {\n        content: content,\n        title: \"Title\",\n        trigger: \"click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"bg-colors\",\n        style: {\n          fontSize: '24px',\n          color: '#101441'\n        },\n        onClick: function onClick() {\n          return _this.changeColor(isSelected.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }, \"Click me\")));\n    };\n\n    _this.overwriteColor = function (color) {\n      var sampleListRef = fire.database().ref(\"sampleList/\".concat(_this.state.userID, \"/\").concat(_this.state.id));\n\n      _this.setState({\n        color: color.hex\n      });\n\n      var object = {\n        Sample_Item: _this.state.Sample_Item,\n        color: _this.state.color,\n        dataType: _this.state.dataType,\n        Sample_Input: '',\n        id: _this.state.id\n      };\n      sampleListRef.set(object);\n    };\n\n    _this.handleSampleChange = function (idx) {\n      return function (evt) {\n        var newParameters = _this.state.snapArray1.map(function (parameter, sidx) {\n          if (idx !== sidx) return parameter;\n          return _objectSpread({}, parameter, {\n            Sample_Input: evt.target.value\n          });\n        });\n\n        _this.setState({\n          snapArray1: newParameters\n        });\n      };\n    };\n\n    _this.handleSampleChange1 = function (idx) {\n      return function (evt) {\n        var newParameters = _this.state.arrayData2.map(function (parameter, sidx) {\n          if (idx !== sidx) return parameter;\n          return _objectSpread({}, parameter, {\n            Sample_Input: evt.target.value\n          });\n        });\n\n        _this.setState({\n          arrayData2: newParameters\n        });\n      };\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.sampleSubmit = function (e) {\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleListRef = fire.database().ref(\"sampleReport/\".concat(user.uid));\n        var arr = _this.state.snapArray1;\n        console.log(arr);\n\n        if (arr.length == 0) {\n          var object = {\n            date: _this.state.sampleDate,\n            ID: _this.state.sampleID,\n            Title: _this.state.sampleTitle,\n            Miscellaneous: _this.state.sampleMisc\n          };\n          console.log(object);\n          sampleListRef.push(object);\n        }\n\n        if (arr.length > 0) {\n          var object = arr.reduce(function (obj, item) {\n            return Object.assign(obj, _defineProperty({\n              date: _this.state.sampleDate,\n              ID: _this.state.sampleID,\n              Title: _this.state.sampleTitle,\n              Miscellaneous: _this.state.sampleMisc\n            }, item.Sample_Item, item.Sample_Input));\n          }, {});\n          console.log(object);\n          sampleListRef.push(object);\n          var sampleList2Ref = fire.database().ref(\"sampleList/\".concat(user.uid));\n          sampleList2Ref.on('value', function (snapshot) {\n            var maintenanceArray = _this.snapshotToArray(snapshot);\n\n            _this.setState({\n              snapArray1: maintenanceArray\n            });\n          });\n        } //this.setState is used to clear the text boxes after the form has been submitted.\n\n\n        _this.setState({\n          sampleDate: '',\n          sampleID: '',\n          sampleTitle: '',\n          sampleMisc: '',\n          visible: false,\n          visible1: false,\n          visible2: false\n        });\n      });\n    };\n\n    _this.sampleOverwrite = function (e) {\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleListRef = fire.database().ref(\"sampleReport/\".concat(user.uid, \"/\").concat(_this.state.id));\n        var arr = _this.state.arrayData2;\n        console.log(arr);\n\n        if (arr.length == 0) {\n          var object = {\n            date: _this.state.sampleDate,\n            ID: _this.state.sampleID,\n            Title: _this.state.sampleTitle,\n            Miscellaneous: _this.state.sampleMisc\n          };\n          console.log(object);\n          sampleListRef.set(object);\n        } else var object = arr.reduce(function (obj, item) {\n          return Object.assign(obj, _defineProperty({\n            date: _this.state.sampleDate,\n            ID: _this.state.sampleID,\n            Title: _this.state.sampleTitle,\n            Miscellaneous: _this.state.sampleMisc\n          }, item.Sample_Item, item.Sample_Input));\n        }, {});\n\n        console.log(object);\n        sampleListRef.set(object); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this.setState({\n          visible: false,\n          visible1: false,\n          visible2: false\n        });\n      });\n    };\n\n    _this.displayButtons = function () {\n      _this.setState({\n        overwriteReport: 'none',\n        addReport: null,\n        inputOverwrite: 'none',\n        inputAdd: null\n      });\n    };\n\n    _this.additionalItem = function (e, itemId, id) {\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      var array = _this.state.arrayData2;\n      var parameterInfo = {\n        Sample_Item: _this.state.Sample_Item,\n        Sample_Input: '',\n        dataType: _this.state.dataType,\n        color: _this.state.color,\n        id: id\n      };\n      array.push(parameterInfo); //this.setState is used to clear the text boxes after the form has been submitted.\n\n      _this.setState({\n        Sample_Item: '',\n        arrayData2: array,\n        dataType: '',\n        color: ''\n      });\n    };\n\n    _this.onChange = function (pagination, filters, sorter, extra) {\n      var data = extra.currentDataSource;\n      console.log(extra.currentDataSource);\n\n      _this.setState({\n        currentData: extra.currentDataSource\n      });\n    };\n\n    _this.handleChangeComplete = function (color) {\n      _this.setState({\n        color: color.hex,\n        colorDisplay: 'none'\n      });\n    };\n\n    _this.showChildrenDrawer = function () {\n      _this.setState({\n        childrenDrawer: true\n      });\n    };\n\n    _this.onChildrenDrawerClose = function () {\n      _this.setState({\n        childrenDrawer: false\n      });\n    };\n\n    _this.displayColor = function () {\n      _this.setState({\n        colorDisplay: null\n      });\n    };\n\n    _this.handleSizeChange = function (e) {\n      var sampleListRef = fire.database().ref(\"sampleList/\".concat(_this.state.userID, \"/\").concat(_this.state.id));\n\n      _this.setState({\n        dataType: e.target.value\n      });\n\n      var object = {\n        Sample_Item: _this.state.Sample_Item,\n        color: _this.state.color,\n        dataType: _this.state.dataType,\n        Sample_Input: '',\n        id: _this.state.id\n      };\n      sampleListRef.set(object);\n    };\n\n    _this.handleTimeFrameChange = function (e) {\n      _this.setState({\n        timeFrame: e.target.value\n      });\n\n      console.log(_this.state.timeFrame);\n\n      if (_this.state.timeframe == 'three') {\n        console.log(\"it's 3!!\");\n\n        _this.setState({\n          graphData: _this.state.threeData\n        });\n      }\n    };\n\n    _this.threeMonths = function () {\n      _this.setState({\n        graphData: _this.state.threeData\n      });\n    };\n\n    _this.sixMonths = function () {\n      _this.setState({\n        graphData: _this.state.sixData\n      });\n    };\n\n    _this.twelveMonths = function () {\n      _this.setState({\n        graphData: _this.state.twelveData\n      });\n    };\n\n    _this.allMonths = function () {\n      _this.setState({\n        graphData: _this.state.snapArray\n      });\n    };\n\n    _this.state = (_this$state = {\n      //The data that goes into the table showing weather data\n      weatherData: [],\n      iconData: [],\n      id: '',\n      key: 1,\n      currentCity: '',\n      currentTemp: '',\n      currentIcon: '',\n      currentDescription: '',\n      currentHumidity: '',\n      //checkbox status\n      checkboxState: true,\n      checkboxState1: true,\n      checkboxStatenitrogen: true,\n      checkboxStatephosphorus: true,\n      checkboxStatetds: true,\n      checkboxStatepH: true,\n      checkboxStatetss: true,\n      checkboxStatesalinity: true,\n      checkboxStateconductivity: true,\n      checkboxStatehardness: true,\n      checkboxStateturbidity: true,\n      checkboxStatedo: true,\n      //these are for the graphs\n      tempPlot: 'temp',\n      doPlot: 'do',\n      conductivityPlot: 'conductivity',\n      tdsPlot: 'tds',\n      salinityPlot: 'salinity',\n      pHPlot: 'pH',\n      turbidityPlot: 'turbidity',\n      nitrogenPlot: 'nitrogen',\n      phosphorusPlot: 'phosphorus',\n      totalHardnessPlot: 'totalHardness',\n      tssPlot: 'tss',\n      //this is the object array for the table\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      //averages\n      nitrogenAverage: [],\n      nitrogenAvg: '',\n      nitrogenLatest: '',\n      nitrogenGraph: [],\n      phosphorusAverage: [],\n      phosphorusAvg: '',\n      phosphorusGraph: [],\n      phoshporusLatest: '',\n      dissolvedOxygenAverage: [],\n      dissolvedOxygenAvg: '',\n      dissolvedOxygenGraph: [],\n      dissolvedOxygenLatest: '',\n      turbidityLatest: '',\n      turbidityAverage: [],\n      turbidityAvg: '',\n      turbidityGraph: [],\n      tssLatest: '',\n      tssAverage: [],\n      tssAvg: '',\n      tssGraph: [],\n      salinityLatest: '',\n      salinityAverage: [],\n      salinityAvg: '',\n      salinityGraph: []\n    }, _defineProperty(_this$state, \"key\", 'tab1'), _defineProperty(_this$state, \"noTitleKey\", 'app'), _defineProperty(_this$state, \"lakeName\", ''), _defineProperty(_this$state, \"locationCity\", ''), _defineProperty(_this$state, \"locationState\", ''), _defineProperty(_this$state, \"managementContact\", ''), _defineProperty(_this$state, \"hoaContact\", ''), _defineProperty(_this$state, \"managementContactNumber\", ''), _defineProperty(_this$state, \"hoaContactNumber\", ''), _defineProperty(_this$state, \"isLoading\", true), _defineProperty(_this$state, \"dataSource\", []), _defineProperty(_this$state, \"latitude\", null), _defineProperty(_this$state, \"longitude\", null), _defineProperty(_this$state, \"error\", null), _defineProperty(_this$state, \"weather\", ''), _defineProperty(_this$state, \"center\", {\n      lat: '',\n      lng: ''\n    }), _defineProperty(_this$state, \"userID\", ''), _defineProperty(_this$state, \"key\", \"1\"), _defineProperty(_this$state, \"snapArray\", []), _defineProperty(_this$state, \"snapArray1\", []), _defineProperty(_this$state, \"arrayData1\", []), _defineProperty(_this$state, \"arrayData2\", []), _defineProperty(_this$state, \"arrayKeys1\", []), _defineProperty(_this$state, \"arrayKeys2\", []), _defineProperty(_this$state, \"arrayValues2\", []), _defineProperty(_this$state, \"smallGraphKeys\", []), _defineProperty(_this$state, \"Sample_Item\", ''), _defineProperty(_this$state, \"sampleDate\", ''), _defineProperty(_this$state, \"sampleTitle\", ''), _defineProperty(_this$state, \"sampleID\", ''), _defineProperty(_this$state, \"sampleMisc\", ''), _defineProperty(_this$state, \"dataType\", ''), _defineProperty(_this$state, \"color\", '#000000'), _defineProperty(_this$state, \"item\", ''), _defineProperty(_this$state, \"timeFrame\", \"All\"), _defineProperty(_this$state, \"graphData\", []), _defineProperty(_this$state, \"turnedOffKeys\", []), _defineProperty(_this$state, \"currentData\", []), _defineProperty(_this$state, \"colorDisplay\", 'none'), _defineProperty(_this$state, \"childrenDrawer\", false), _defineProperty(_this$state, \"childrenDrawer1\", false), _defineProperty(_this$state, \"overwriteDisplay\", 'none'), _defineProperty(_this$state, \"addDisplay\", null), _defineProperty(_this$state, \"overwriteReport\", 'none'), _defineProperty(_this$state, \"addReport\", null), _defineProperty(_this$state, \"inputAdd\", null), _defineProperty(_this$state, \"inputOverwrite\", 'none'), _defineProperty(_this$state, \"tableKeys\", []), _defineProperty(_this$state, \"searchText\", ''), _defineProperty(_this$state, \"selectedRowKeys\", []), _defineProperty(_this$state, \"loading\", false), _defineProperty(_this$state, \"url\", null), _defineProperty(_this$state, \"blob\", null), _defineProperty(_this$state, \"file\", null), _defineProperty(_this$state, \"blobUrl\", null), _defineProperty(_this$state, \"visible\", false), _defineProperty(_this$state, \"visible1\", false), _defineProperty(_this$state, \"visible2\", false), _defineProperty(_this$state, \"visible3\", false), _defineProperty(_this$state, \"lakeName\", ''), _defineProperty(_this$state, \"locationCity\", ''), _defineProperty(_this$state, \"locationState\", ''), _defineProperty(_this$state, \"managementContact\", ''), _defineProperty(_this$state, \"hoaContact\", ''), _defineProperty(_this$state, \"managementContactNumber\", ''), _defineProperty(_this$state, \"hoaContactNumber\", ''), _this$state);\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //event triggered when text boxes of forms, values are changed\n\n\n  _createClass(Dashboard, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      this.setState(_defineProperty({}, name, value));\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    } //event triggered when form is submitted\n\n  }, {\n    key: \"snapshotToArray\",\n    value: function snapshotToArray(snapshot) {\n      var returnArr = [];\n      snapshot.forEach(function (childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        returnArr.push(item);\n      });\n      return returnArr;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n                  _this2.setState({\n                    userID: user.uid\n                  });\n\n                  var parameterList1Ref = fire.database().ref(\"sampleReport/\".concat(user.uid));\n                  parameterList1Ref.on('value', function (snapshot) {\n                    var snapArray = _this2.snapshotToArray(snapshot);\n\n                    if (snapArray.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (snapArray.length > 0) {\n                      var data = snapArray;\n                      var tableData1 = [];\n\n                      for (var i = 0; i < snapArray.length; i++) {\n                        //push send this data to the back of the chartData variable above.\n                        tableData1.push(Object.keys(snapArray[i]));\n                      }\n\n                      var tableData2 = tableData1.map(function (a) {\n                        return a.length;\n                      });\n                      tableData2.indexOf(Math.max.apply(Math, tableData2));\n                      var indexOfMaxValue = tableData2.reduce(function (iMax, x, i, arr) {\n                        return x > arr[iMax] ? i : iMax;\n                      }, 0);\n                      var table1Keys = Object.keys(snapArray[indexOfMaxValue]);\n                      table1Keys = table1Keys.filter(function (e) {\n                        return e !== 'ID';\n                      });\n                      table1Keys = table1Keys.filter(function (e) {\n                        return e !== 'Miscellaneous';\n                      });\n                      table1Keys = table1Keys.filter(function (e) {\n                        return e !== 'date';\n                      });\n                      table1Keys = table1Keys.filter(function (e) {\n                        return e !== 'Title';\n                      });\n                      table1Keys = table1Keys.filter(function (e) {\n                        return e !== 'key';\n                      });\n                      table1Keys = table1Keys.filter(function (e) {\n                        return e !== 'key';\n                      });\n\n                      if (_this2.state.turnedOffKeys.length == 0) {\n                        console.log(\"do nothing again\");\n                      }\n\n                      if (_this2.state.turnedOffKeys.lenth > 0) {\n                        _this2.state.turnedOffKeys.map(function (item) {\n                          table1Keys = table1Keys.filter(function (e) {\n                            return e !== item;\n                          });\n                        });\n                      }\n\n                      console.log(table1Keys);\n\n                      _this2.setState({\n                        smallGraphKeys: table1Keys\n                      });\n\n                      var tableKeys = table1Keys.map(function (txt) {\n                        return _objectSpread({\n                          title: txt,\n                          dataIndex: txt,\n                          key: txt\n                        }, _this2.getColumnSearchProps(txt), {\n                          width: 200\n                        });\n                      });\n                      tableKeys.unshift(_objectSpread({\n                        title: 'Title',\n                        dataIndex: 'Title',\n                        key: 'Title'\n                      }, _this2.getColumnSearchProps('Title'), {\n                        sorter: function sorter(a, b) {\n                          return a.Title.localeCompare(b.Title);\n                        },\n                        sortDirections: ['descend', 'ascend'],\n                        width: 200\n                      }));\n                      tableKeys.unshift(_objectSpread({\n                        title: 'Date',\n                        dataIndex: 'date',\n                        key: 'date'\n                      }, _this2.getColumnSearchProps('date'), {\n                        sorter: function sorter(a, b) {\n                          return a.date.localeCompare(b.date);\n                        },\n                        sortDirections: ['descend', 'ascend'],\n                        sortOrder: 'descend',\n                        width: 130\n                      }));\n                      tableKeys.unshift(_objectSpread({\n                        title: 'ID #',\n                        dataIndex: 'ID',\n                        key: 'ID'\n                      }, _this2.getColumnSearchProps('ID'), {\n                        sorter: function sorter(a, b) {\n                          return a.ID.localeCompare(b.ID);\n                        },\n                        sortDirections: ['descend', 'ascend'],\n                        width: 80\n                      }));\n                      tableKeys.unshift({\n                        title: 'Edit',\n                        dataIndex: '',\n                        key: 'x',\n                        fixed: 'left',\n                        render: _this2.editRow.bind(_this2),\n                        width: 60\n                      });\n                      tableKeys.unshift({\n                        title: 'Delete',\n                        dataIndex: '',\n                        fixed: 'left',\n                        key: 'y',\n                        render: _this2.deleteRow.bind(_this2),\n                        width: 60\n                      });\n                      console.log(data);\n                      var reverseData = data.reverse();\n                      var threeData = [data[2], data[1], data[0]];\n                      var sixData = [data[5], data[4], data[3], data[2], data[1], data[0]];\n                      var twelveData = [data[11], data[10], data[9], data[8], data[7], data[6], data[5], data[4], data[3], data[2], data[1], data[0]];\n                      var reverseData1 = data.reverse();\n\n                      _this2.setState({\n                        snapArray: data,\n                        threeData: threeData,\n                        sixData: sixData,\n                        twelveData: twelveData,\n                        graphData: data,\n                        tableKeys: tableKeys\n                      });\n                    }\n                  });\n                  var sampleList2Ref = fire.database().ref(\"sampleList/\".concat(user.uid));\n                  sampleList2Ref.on('value', function (snapshot) {\n                    var maintenanceArray = _this2.snapshotToArray(snapshot);\n\n                    console.log(maintenanceArray);\n\n                    _this2.setState({\n                      snapArray1: maintenanceArray\n                    });\n                  });\n                  var profileRef = fire.database().ref(\"profileInformation/\".concat(user.uid));\n                  profileRef.on('value', function (snapshot) {\n                    var that = _this2;\n\n                    _this2.setState({\n                      lakeName: snapshot.child('lakeName').val(),\n                      locationCity: snapshot.child('locationCity').val(),\n                      locationState: snapshot.child('locationState').val(),\n                      managementContact: snapshot.child('managementContact').val(),\n                      hoaContact: snapshot.child('hoaContact').val(),\n                      managementContactNumber: snapshot.child('managementContactNumber').val(),\n                      hoaContactNumber: snapshot.child('hoaContactNumber').val(),\n                      latitude: snapshot.child('latitude').val(),\n                      longitude: snapshot.child('longitude').val(),\n                      center: {\n                        lat: parseInt(snapshot.child('latitude').val()),\n                        lng: parseInt(snapshot.child('longitude').val())\n                      }\n                    });\n\n                    console.log(_this2.state.center);\n                    var myLat = \"\".concat(_this2.state.latitude);\n                    var myLon = \"\".concat(_this2.state.longitude);\n                    var API_WEATHER = \"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(myLat, \"&lon=\").concat(myLon, \"&units=imperial&appid=\", '30573b68170d7f4400c7ac9c1c671ccf');\n                    fetch(API_WEATHER).then(function (response) {\n                      return response.json();\n                    }).then(function (responseJson) {\n                      console.log(responseJson);\n                      console.log(responseJson.weather);\n                      console.log(responseJson.name);\n\n                      _this2.setState({\n                        isLoading: false,\n                        dataSource: responseJson,\n                        currentCity: _this2.state.lakeName,\n                        currentTemp: responseJson.main.temp,\n                        currentIcon: 'http://openweathermap.org/img/w/' + responseJson.weather[0].icon + '.png',\n                        currentDescription: responseJson.weather[0].main,\n                        currentHumidity: responseJson.main.humidity\n                      });\n                    }).catch(function (error) {\n                      console.log(error);\n                    });\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"removesample\",\n    value: function removesample(itemId) {\n      var sampleRef = fire.database().ref(\"/sampleReport/\".concat(this.state.userID, \"/\").concat(itemId));\n      sampleRef.remove();\n    }\n  }, {\n    key: \"removesample1\",\n    value: function removesample1(itemId) {\n      var sampleRef = fire.database().ref(\"/sampleList/\".concat(this.state.userID, \"/\").concat(itemId));\n      sampleRef.remove();\n    }\n  }, {\n    key: \"removesample2\",\n    value: function removesample2(itemId) {\n      var sampleRef = fire.database().ref(\"/sampleReport/\".concat(this.state.userID, \"/\").concat(this.state.id, \"/\").concat(itemId));\n      sampleRef.remove();\n      this.fillStates(this.state.id);\n    }\n  }, {\n    key: \"fillParameterStates\",\n    value: function fillParameterStates(itemId) {\n      var _this3 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        _this3.setState({\n          visible3: true\n        });\n\n        var sample1Ref = fire.database().ref(\"/sampleList/\".concat(user.uid, \"/\").concat(itemId));\n        var id = fire.database().ref().child(\"/sampleList/\".concat(user.uid, \"/\").concat(itemId)).key;\n        sample1Ref.on('value', function (snapshot) {\n          _this3.setState({\n            Sample_Item: snapshot.child('Sample_Item').val(),\n            dataType: snapshot.child('dataType').val(),\n            color: snapshot.child('color').val(),\n            id: id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"changeData\",\n    value: function changeData(itemId) {\n      var _this4 = this;\n\n      var sample1Ref = fire.database().ref(\"/sampleList/\".concat(this.state.userID, \"/\").concat(itemId));\n      var id = fire.database().ref().child(\"/sampleList/\".concat(this.state.userID, \"/\").concat(itemId)).key;\n      sample1Ref.on('value', function (snapshot) {\n        _this4.setState({\n          Sample_Item: snapshot.child('Sample_Item').val(),\n          Sample_Input: '',\n          dataType: snapshot.child('dataType').val(),\n          color: snapshot.child('color').val(),\n          id: id\n        });\n      });\n    }\n  }, {\n    key: \"changeColor\",\n    value: function changeColor(itemId) {\n      var _this5 = this;\n\n      var sample1Ref = fire.database().ref(\"/sampleList/\".concat(this.state.userID, \"/\").concat(itemId));\n      var id = fire.database().ref().child(\"/sampleList/\".concat(this.state.userID, \"/\").concat(itemId)).key;\n      sample1Ref.on('value', function (snapshot) {\n        _this5.setState({\n          Sample_Item: snapshot.child('Sample_Item').val(),\n          Sample_Input: '',\n          dataType: snapshot.child('dataType').val(),\n          color: snapshot.child('color').val(),\n          id: id\n        });\n      });\n    }\n  }, {\n    key: \"fillStates\",\n    value: function fillStates(itemId) {\n      var _this6 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        _this6.setState({\n          overwriteReport: null,\n          addReport: 'none',\n          inputOverwrite: null,\n          inputAdd: 'none',\n          visible: true\n        });\n\n        var sample1Ref = fire.database().ref(\"/sampleReport/\".concat(user.uid, \"/\").concat(itemId));\n        var id = fire.database().ref().child(\"/sampleReport/\".concat(user.uid, \"/\").concat(itemId)).key;\n        sample1Ref.on('value', function (snapshot) {\n          var maintenanceList = snapshot.val();\n\n          _this6.setState({\n            sampleDate: snapshot.child('date').val(),\n            sampleID: snapshot.child('ID').val(),\n            sampleTitle: snapshot.child('Title').val(),\n            sampleMisc: snapshot.child('Miscellaneous').val(),\n            id: id\n          });\n\n          var arr = snapshot.val();\n          delete arr.date;\n          delete arr.ID;\n          delete arr.Title;\n          delete arr.Miscellaneous;\n          var arrayKeys = Object.keys(arr);\n          var arrayValues = Object.values(arr);\n\n          _this6.setState({\n            arrayKeys1: arrayKeys,\n            arrayValues1: arrayValues\n          });\n        });\n        var sample2Ref = fire.database().ref(\"/sampleReport/\".concat(user.uid));\n        sample2Ref.on('value', function (snapshot) {\n          var maintenanceList = _this6.snapshotToArray(snapshot);\n\n          var keys = [maintenanceList.map(function (parameter) {\n            return parameter.key;\n          })];\n\n          _this6.setState({\n            arrayData1: keys\n          });\n        });\n        var arrayData = [];\n\n        for (var i = 0; i < _this6.state.arrayKeys1.length; i++) {\n          //push send this data to the back of the chartData variable above.\n          arrayData.push({\n            Sample_Input: _this6.state.arrayValues1[i],\n            Sample_Item: _this6.state.arrayKeys1[i],\n            key: _this6.state.arrayData1[i]\n          });\n        }\n\n        _this6.setState({\n          snapArray1: arrayData,\n          arrayData2: arrayData\n        });\n      });\n    }\n  }, {\n    key: \"getLocation\",\n    value: function getLocation() {\n      var _this7 = this;\n\n      // Get the current position of the user\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this7.setState(function (prevState) {\n          return {\n            latitude: 30,\n            longitude: 20\n          };\n        }, function () {\n          _this7.getWeather();\n        });\n      }, function (error) {\n        return _this7.setState({\n          weather: error.message\n        });\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var center = {\n        lat: this.state.latitude,\n        lng: this.state.longitude\n      };\n      var columns1 = [{\n        title: 'Edit',\n        dataIndex: '',\n        key: 'x',\n        render: this.editRow1.bind(this),\n        width: 60\n      }, {\n        title: 'Title',\n        dataIndex: 'Sample_Item',\n        key: 'Sample_Item',\n        width: 200\n      }, {\n        title: 'Data Type',\n        dataIndex: 'dataType',\n        key: 'dataType',\n        render: function render(text, record, isSelected, color) {\n          if (record.dataType == 'Bar') {\n            return React.createElement(\"div\", {\n              style: {\n                textAlign: 'left'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1173\n              },\n              __self: this\n            }, React.createElement(Popover, {\n              style: {\n                textAlign: 'center'\n              },\n              content: content,\n              title: \"Select Type and Save\",\n              trigger: \"click\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1174\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              type: \"bar-chart\",\n              style: {\n                fontSize: '32px',\n                color: record.color\n              },\n              onClick: function onClick() {\n                return _this8.changeData(record.key);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1175\n              },\n              __self: this\n            }, \"Click me\")));\n          }\n\n          if (record.dataType == 'Area') {\n            return React.createElement(\"div\", {\n              style: {\n                textAlign: 'left'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1183\n              },\n              __self: this\n            }, React.createElement(Popover, {\n              style: {\n                textAlign: 'center'\n              },\n              content: content,\n              title: \"Select Type and Save\",\n              trigger: \"click\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1184\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              type: \"area-chart\",\n              style: {\n                fontSize: '32px',\n                color: record.color\n              },\n              onClick: function onClick() {\n                return _this8.changeData(record.key);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1185\n              },\n              __self: this\n            }, \"Click me\")));\n          }\n\n          if (record.dataType == 'Line') {\n            return React.createElement(\"div\", {\n              style: {\n                textAlign: 'left'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1193\n              },\n              __self: this\n            }, React.createElement(Popover, {\n              style: {\n                textAlign: 'center'\n              },\n              content: content,\n              title: \"Select Type and Save\",\n              trigger: \"click\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1194\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              type: \"line-chart\",\n              style: {\n                fontSize: '32px',\n                color: record.color\n              },\n              onClick: function onClick() {\n                return _this8.changeData(record.key);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1195\n              },\n              __self: this\n            }, \"Click me\")));\n          }\n\n          if (record.dataType == 'Off') {\n            return React.createElement(\"div\", {\n              style: {\n                textAlign: 'left'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1203\n              },\n              __self: this\n            }, React.createElement(Popover, {\n              style: {\n                textAlign: 'center'\n              },\n              content: content,\n              title: \"Select Type and Save\",\n              trigger: \"click\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1204\n              },\n              __self: this\n            }, React.createElement(Icon, {\n              type: \"close\",\n              style: {\n                fontSize: '32px',\n                color: record.color\n              },\n              onClick: function onClick() {\n                return _this8.changeData(record.key);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1205\n              },\n              __self: this\n            }, \"Click me\")));\n          }\n        },\n        width: 200\n      }, {\n        title: 'Color',\n        dataIndex: 'color',\n        key: 'color',\n        render: function render(text, record, isSelected) {\n          return React.createElement(\"div\", {\n            style: {\n              textAlign: 'left'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1227\n            },\n            __self: this\n          }, React.createElement(Popover, {\n            content: content1,\n            title: \"Select Color\",\n            trigger: \"click\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1228\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            type: \"bg-colors\",\n            style: {\n              fontSize: '24px',\n              color: record.color\n            },\n            onClick: function onClick() {\n              return _this8.changeColor(record.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1229\n            },\n            __self: this\n          }, \"Click me\")));\n        },\n        width: 200\n      }];\n      var content1 = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1247\n        },\n        __self: this\n      }, React.createElement(SketchPicker, {\n        color: this.state.color,\n        onChangeComplete: this.overwriteColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1248\n        },\n        __self: this\n      }));\n      var content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256\n        },\n        __self: this\n      }, React.createElement(Radio.Group, {\n        size: \"default\",\n        value: this.state.dataType,\n        onChange: this.handleSizeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257\n        },\n        __self: this\n      }, React.createElement(Radio.Button, {\n        value: \"Bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258\n        },\n        __self: this\n      }, \"Bar\"), React.createElement(Radio.Button, {\n        value: \"Line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259\n        },\n        __self: this\n      }, \"Line\"), React.createElement(Radio.Button, {\n        value: \"Area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260\n        },\n        __self: this\n      }, \"Area\"), React.createElement(Radio.Button, {\n        value: \"Off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261\n        },\n        __self: this\n      }, \"Off\"))), React.createElement(Row, {\n        style: {\n          paddingTop: '10px',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.parameterOverwrite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267\n        },\n        __self: this\n      }, \"Save\")));\n      var columns = this.state.tableKeys;\n      var data = this.state.snapArray;\n      var dataReverse = this.state.graphData;\n      var data1 = this.state.snapArray1;\n      var csvData = this.state.snapArray;\n      var csvData1 = this.state.currentData;\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1284\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1288\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1292\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1293\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1295\n        },\n        __self: this\n      }, React.createElement(Radio.Group, {\n        size: \"small\",\n        value: this.state.timeFrame,\n        onChange: this.handleTimeFrameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1296\n        },\n        __self: this\n      }, React.createElement(Radio.Button, {\n        value: \"three\",\n        onClick: this.threeMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1297\n        },\n        __self: this\n      }, \"3 Months\"), React.createElement(Radio.Button, {\n        value: \"six\",\n        onClick: this.sixMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1298\n        },\n        __self: this\n      }, \"6 Months\"), React.createElement(Radio.Button, {\n        value: \"twelve\",\n        onClick: this.twelveMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1299\n        },\n        __self: this\n      }, \"12 Months\"), React.createElement(Radio.Button, {\n        value: \"All\",\n        onClick: this.allMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1300\n        },\n        __self: this\n      }, \"All\"))), React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 10 / 3.0,\n        minHeight: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1302\n        },\n        __self: this\n      }, React.createElement(ComposedChart, {\n        data: dataReverse,\n        syncId: \"anyId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307\n        },\n        __self: this\n      }, React.createElement(Label, {\n        offset: 200,\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307\n        },\n        __self: this\n      })), React.createElement(YAxis, {\n        hide: \"true\",\n        type: \"number\",\n        domain: [function (dataMin) {\n          return 0 - Math.abs(dataMin);\n        }, function (dataMax) {\n          return dataMax * 2;\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1309\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1310\n        },\n        __self: this\n      }), React.createElement(\"defs\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1313\n        },\n        __self: this\n      }, data1.map(function (parameter) {\n        return React.createElement(\"linearGradient\", {\n          id: parameter.Sample_Item,\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1317\n          },\n          __self: this\n        }, React.createElement(\"stop\", {\n          offset: \"5%\",\n          stopColor: parameter.color,\n          stopOpacity: 0.3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1318\n          },\n          __self: this\n        }), React.createElement(\"stop\", {\n          offset: \"95%\",\n          stopColor: parameter.color,\n          stopOpacity: 0.1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1319\n          },\n          __self: this\n        }));\n      })), data1.map(function (parameter) {\n        if (parameter.dataType == 'Bar') {\n          console.log('something 1');\n          var CustomTag = Bar;\n          return React.createElement(CustomTag, {\n            type: \"monotone\",\n            dataKey: parameter.Sample_Item,\n            fillOpacity: 1,\n            strokeWidth: 2,\n            stroke: parameter.color,\n            fill: \"url(#\" + parameter.Sample_Item + \")\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1336\n            },\n            __self: this\n          }, React.createElement(LabelList, {\n            dataKey: parameter.Sample_Item,\n            position: \"top\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1336\n            },\n            __self: this\n          }));\n        }\n\n        if (parameter.dataType == 'Line') {\n          console.log('something 2');\n          var _CustomTag = Line;\n          return React.createElement(_CustomTag, {\n            type: \"monotone\",\n            dataKey: parameter.Sample_Item,\n            fillOpacity: 1,\n            strokeWidth: 2,\n            stroke: parameter.color,\n            fill: \"url(#\" + parameter.Sample_Item + \")\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1343\n            },\n            __self: this\n          }, React.createElement(LabelList, {\n            dataKey: parameter.Sample_Item,\n            position: \"top\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1343\n            },\n            __self: this\n          }));\n        }\n\n        if (parameter.dataType == 'Area') {\n          console.log('something 3');\n          var _CustomTag2 = Area;\n          return React.createElement(_CustomTag2, {\n            type: \"monotone\",\n            dataKey: parameter.Sample_Item,\n            fillOpacity: 1,\n            strokeWidth: 2,\n            stroke: parameter.color,\n            fill: \"url(#\" + parameter.Sample_Item + \")\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1350\n            },\n            __self: this\n          }, React.createElement(LabelList, {\n            dataKey: parameter.Sample_Item,\n            position: \"top\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1350\n            },\n            __self: this\n          }));\n        }\n\n        if (parameter.dataType == 'Off') {\n          console.log('No graph');\n        }\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1369\n        },\n        __self: this\n      })))))), React.createElement(Row, {\n        style: {\n          paddingTop: '15px'\n        },\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1379\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1380\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: '100%'\n        },\n        bodyStyle: {\n          padding: \"0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1381\n        },\n        __self: this\n      }, React.createElement(Row, {\n        align: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1382\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          paddingTop: '25px',\n          paddingLeft: '20px',\n          fontSize: '24px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1383\n        },\n        __self: this\n      }, \"Water Quality\")), React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1385\n        },\n        __self: this\n      }, data1.map(function (parameter) {\n        return React.createElement(Col, {\n          xs: 24,\n          sm: 12,\n          md: 8,\n          lg: 8,\n          xl: 8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1392\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1393\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1394\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 4,\n          sm: 4,\n          md: 4,\n          lg: 4,\n          xl: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1395\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"up-circle\",\n          style: {\n            fontSize: '32px',\n            color: parameter.color\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1396\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 16,\n          sm: 16,\n          md: 16,\n          lg: 16,\n          xl: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1398\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          style: {\n            fontSize: '24px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1399\n          },\n          __self: this\n        }, parameter.Sample_Item))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1402\n          },\n          __self: this\n        }, React.createElement(ResponsiveContainer, {\n          width: \"100%\",\n          aspect: 6 / 3.0,\n          minHeight: 90,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1404\n          },\n          __self: this\n        }, React.createElement(ComposedChart, {\n          data: dataReverse,\n          syncId: \"anyId\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1406\n          },\n          __self: this\n        }, React.createElement(XAxis, {\n          dataKey: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1409\n          },\n          __self: this\n        }, React.createElement(Label, {\n          offset: 200,\n          position: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1409\n          },\n          __self: this\n        })), React.createElement(YAxis, {\n          hide: \"true\",\n          type: \"number\",\n          domain: [function (dataMin) {\n            return 0 - Math.abs(dataMin);\n          }, function (dataMax) {\n            return dataMax * 2;\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1411\n          },\n          __self: this\n        }), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1412\n          },\n          __self: this\n        }), React.createElement(Line, {\n          type: \"monotone\",\n          dataKey: parameter.Sample_Item,\n          fillOpacity: 1,\n          strokeWidth: 2,\n          stroke: parameter.color,\n          fill: \"url(#\" + parameter.Sample_Item + \")\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1414\n          },\n          __self: this\n        }))))));\n      }))))), React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1449\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1450\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1451\n        },\n        __self: this\n      }, this.state.currentCity), React.createElement(\"img\", {\n        style: {\n          width: '60px',\n          height: '60px'\n        },\n        src: this.state.currentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1452\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1453\n        },\n        __self: this\n      }, this.state.currentDescription), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1454\n        },\n        __self: this\n      }, \"Temperature: \", this.state.currentTemp, \" F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1455\n        },\n        __self: this\n      }, \"Humidity: \", this.state.currentHumidity, \"%\"))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 16,\n        lg: 16,\n        xl: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1460\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1461\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '29vh',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyAqe1Z8I94AcnNb3VsOam1tnUd_8WdubV4'\n        },\n        center: this.state.center,\n        defaultZoom: this.props.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463\n        },\n        __self: this\n      }, React.createElement(AnyReactComponent, {\n        lat: this.state.latitude,\n        lng: this.state.longitude,\n        text: this.state.lakeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1470\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.defaultProps = {\n  center: {\n    lat: 37.987636425563075,\n    lng: -121.63235758701154\n  },\n  zoom: 13\n};\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx"],"names":["React","Component","Navbar","Nav","FormGroup","Checkbox","Grid","PageHeader","Jumbotron","NavItem","Modal","Panel","Link","ReactDOM","FileSaver","jsPDF","domtoimage","fileDownload","Request","firebase","fire","ChromePicker","GoogleMapReact","SketchPicker","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiBrush","TiArrowSortedUp","TiPencil","TiTrash","ComposedChart","LineChart","LabelList","ResponsiveContainer","ReferenceArea","AreaChart","Brush","Area","Line","Tooltip","XAxis","YAxis","BarChart","Bar","CartesianGrid","Legend","Label","Row","Col","Tabs","Table","Divider","Tag","message","Card","Drawer","Menu","Dropdown","Button","Layout","Carousel","Input","Popover","Icon","Cascader","Switch","Select","AutoComplete","Radio","Highlighter","CSVLink","CSVDownload","AnyReactComponent","text","TabPane","tabListNoTitle","key","tab","Dashboard","props","onSelectChange","selectedRowKeys","console","log","setState","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","searchText","state","deleteRow","row","isSelected","id","textAlign","fontSize","removesample","editRow","fillStates","editRow1","fillParameterStates","parameterOverwrite","preventDefault","removeAuthListener","auth","onAuthStateChanged","user","sampleListRef","database","ref","uid","object","Sample_Item","dataType","Sample_Input","set","visible3","fillParameterInfo","itemId","child","sampleInfo","push","childrenDrawer","visible4","editRowColor","content","overwriteColor","changeColor","userID","hex","handleSampleChange","idx","evt","newParameters","snapArray1","map","parameter","sidx","handleSampleChange1","arrayData2","handleSubmit","form","validateFieldsAndScroll","err","values","sampleSubmit","arr","length","date","sampleDate","ID","sampleID","Title","sampleTitle","Miscellaneous","sampleMisc","reduce","obj","item","Object","assign","sampleList2Ref","on","snapshot","maintenanceArray","snapshotToArray","visible1","visible2","sampleOverwrite","displayButtons","overwriteReport","addReport","inputOverwrite","inputAdd","additionalItem","array","parameterInfo","onChange","pagination","filters","sorter","extra","data","currentDataSource","currentData","handleChangeComplete","colorDisplay","showChildrenDrawer","onChildrenDrawerClose","displayColor","handleSizeChange","handleTimeFrameChange","timeFrame","timeframe","graphData","threeData","threeMonths","sixMonths","sixData","twelveMonths","twelveData","allMonths","snapArray","weatherData","iconData","currentCity","currentTemp","currentIcon","currentDescription","currentHumidity","checkboxState","checkboxState1","checkboxStatenitrogen","checkboxStatephosphorus","checkboxStatetds","checkboxStatepH","checkboxStatetss","checkboxStatesalinity","checkboxStateconductivity","checkboxStatehardness","checkboxStateturbidity","checkboxStatedo","tempPlot","doPlot","conductivityPlot","tdsPlot","salinityPlot","pHPlot","turbidityPlot","nitrogenPlot","phosphorusPlot","totalHardnessPlot","tssPlot","samples","orders","orders2","dataList","filter","blobUrl","nitrogenAverage","nitrogenAvg","nitrogenLatest","nitrogenGraph","phosphorusAverage","phosphorusAvg","phosphorusGraph","phoshporusLatest","dissolvedOxygenAverage","dissolvedOxygenAvg","dissolvedOxygenGraph","dissolvedOxygenLatest","turbidityLatest","turbidityAverage","turbidityAvg","turbidityGraph","tssLatest","tssAverage","tssAvg","tssGraph","salinityLatest","salinityAverage","salinityAvg","salinityGraph","lat","lng","handleChange","bind","name","returnArr","forEach","childSnapshot","val","parameterList1Ref","tableData1","i","keys","tableData2","a","indexOf","Math","max","apply","indexOfMaxValue","iMax","x","table1Keys","turnedOffKeys","lenth","smallGraphKeys","tableKeys","txt","title","unshift","b","localeCompare","sortDirections","sortOrder","fixed","render","reverseData","reverse","reverseData1","profileRef","that","lakeName","locationCity","locationState","managementContact","hoaContact","managementContactNumber","hoaContactNumber","latitude","longitude","center","parseInt","myLat","myLon","API_WEATHER","fetch","then","response","json","responseJson","weather","isLoading","dataSource","main","temp","icon","humidity","catch","error","sampleRef","remove","sample1Ref","maintenanceList","arrayKeys","arrayValues","arrayKeys1","arrayValues1","sample2Ref","arrayData1","arrayData","navigator","geolocation","getCurrentPosition","position","prevState","getWeather","enableHighAccuracy","timeout","maximumAge","columns1","changeData","content1","paddingTop","columns","dataReverse","data1","csvData","csvData1","dataMin","abs","dataMax","CustomTag","paddingLeft","height","zoom","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Nav, FormGroup, Checkbox, Grid, PageHeader, Jumbotron, NavItem, Modal, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\n\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { ChromePicker } from 'react-color';\nimport GoogleMapReact from 'google-map-react';\n\nimport { SketchPicker } from 'react-color';\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport { ComposedChart, LineChart, LabelList, ResponsiveContainer, ReferenceArea, AreaChart, Brush, Area, Line, Tooltip, XAxis, YAxis, BarChart, Bar, CartesianGrid, Legend, Label} from 'recharts';\n\nimport { Row, Col, Tabs, Table, Divider, Tag, message, Card, Drawer, Menu, Dropdown, Button, Layout, Carousel, Input, Popover, Icon, Cascader, Switch, Select, AutoComplete, Radio } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst TabPane = Tabs.TabPane;\n\nconst tabListNoTitle = [{\n  key: 'article',\n  tab: 'article',\n}, {\n  key: 'app',\n  tab: 'app',\n}, {\n  key: 'project',\n  tab: 'project',\n}];\n\nexport default class Dashboard extends Component {\n\n  static defaultProps = {\n  center: {\n  lat: 37.987636425563075,\n  lng: -121.63235758701154\n  },\n  zoom: 13\n  };\n\n\n\n\n  constructor(props) {\n      super(props);\n\n\n\n      this.state = {\n\n        //The data that goes into the table showing weather data\n        weatherData: [],\n        iconData: [],\n\n        id: '',\n        key: 1,\n\n        currentCity: '',\n        currentTemp: '',\n        currentIcon: '',\n        currentDescription: '',\n        currentHumidity: '',\n\n        //checkbox status\n        checkboxState: true,\n        checkboxState1: true,\n        checkboxStatenitrogen: true,\n        checkboxStatephosphorus: true,\n        checkboxStatetds: true,\n        checkboxStatepH: true,\n        checkboxStatetss: true,\n        checkboxStatesalinity: true,\n        checkboxStateconductivity: true,\n        checkboxStatehardness: true,\n        checkboxStateturbidity: true,\n        checkboxStatedo: true,\n\n        //these are for the graphs\n        tempPlot: 'temp',\n        doPlot: 'do',\n        conductivityPlot: 'conductivity',\n        tdsPlot: 'tds',\n        salinityPlot: 'salinity',\n        pHPlot: 'pH',\n        turbidityPlot: 'turbidity',\n        nitrogenPlot: 'nitrogen',\n        phosphorusPlot: 'phosphorus',\n        totalHardnessPlot: 'totalHardness',\n        tssPlot: 'tss',\n\n        //this is the object array for the table\n        samples: [],\n        orders: [],\n        orders2: [],\n        dataList: [],\n        filter: \"\",\n        blobUrl: null,\n\n        //averages\n        nitrogenAverage: [],\n        nitrogenAvg: '',\n        nitrogenLatest: '',\n        nitrogenGraph: [],\n        phosphorusAverage: [],\n        phosphorusAvg: '',\n        phosphorusGraph: [],\n        phoshporusLatest: '',\n        dissolvedOxygenAverage: [],\n        dissolvedOxygenAvg: '',\n        dissolvedOxygenGraph: [],\n        dissolvedOxygenLatest: '',\n\n        turbidityLatest: '',\n        turbidityAverage: [],\n        turbidityAvg: '',\n        turbidityGraph: [],\n        tssLatest: '',\n        tssAverage: [],\n        tssAvg: '',\n        tssGraph: [],\n        salinityLatest: '',\n        salinityAverage: [],\n        salinityAvg: '',\n        salinityGraph: [],\n\n        key: 'tab1',\n        noTitleKey: 'app',\n\n        //Inputs for Profile Page\n        lakeName: '',\n        locationCity: '',\n        locationState: '',\n        managementContact: '',\n        hoaContact: '',\n        managementContactNumber: '',\n        hoaContactNumber: '',\n        isLoading: true,\n        dataSource: [],\n        latitude: null,\n        longitude: null,\n        error: null,\n        weather: '',\n        center: {\n          lat: '',\n          lng: ''\n        },\n\n        userID: '',\n        key: \"1\",\n        snapArray: [],\n        snapArray1: [],\n        arrayData1: [],\n        arrayData2: [],\n        arrayKeys1: [],\n        arrayKeys2: [],\n        arrayValues2: [],\n        smallGraphKeys: [],\n\n        Sample_Item: '',\n        sampleDate: '',\n        sampleTitle: '',\n        sampleID: '',\n        sampleMisc: '',\n        dataType: '',\n        color: '#000000',\n\n        item: '',\n        timeFrame: \"All\",\n        graphData: [],\n        turnedOffKeys: [],\n\n        currentData: [],\n        colorDisplay: 'none',\n\n        childrenDrawer: false,\n        childrenDrawer1: false,\n\n        overwriteDisplay: 'none',\n        addDisplay: null,\n\n        overwriteReport: 'none',\n        addReport: null,\n\n        inputAdd: null,\n        inputOverwrite: 'none',\n\n\n        tableKeys: [],\n        searchText: '',\n        selectedRowKeys: [], // Check here to configure the default column\n        loading: false,\n\n\n\n        url: null,\n        blob: null,\n        file:null,\n        blobUrl: null,\n\n\n        //for drawers\n        visible: false,\n        visible1: false,\n        visible2: false,\n        visible3: false,\n\n        //Inputs for Profile Page\n        lakeName: '',\n        locationCity: '',\n        locationState: '',\n        managementContact: '',\n        hoaContact: '',\n        managementContactNumber: '',\n        hoaContactNumber: '',\n\n\n\n\n\n\n\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n\n\n\n    }\n\n\n    //event triggered when text boxes of forms, values are changed\n    handleChange(e) {\n      const name = e.target.name;\n  const value = e.target.value;\n  this.setState({ [name]: value });\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n\n\n    }\n    //event triggered when form is submitted\n\n\n   snapshotToArray(snapshot) {\n      var returnArr = [];\n\n      snapshot.forEach(function(childSnapshot) {\n          var item = childSnapshot.val();\n          item.key = childSnapshot.key;\n\n          returnArr.push(item);\n      });\n\n      return returnArr;\n  };\n  async componentDidMount() {\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n      this.setState({\n        userID: user.uid,\n      })\n\n\n\n      const parameterList1Ref = fire.database().ref(`sampleReport/${user.uid}`);\n      parameterList1Ref.on('value', (snapshot) => {\n        let snapArray = this.snapshotToArray(snapshot);\n\n        if (snapArray.length == 0) {\n          console.log(\"do nothing\")\n        }\n\n\n        if (snapArray.length > 0) {\n          let data = snapArray;\n\n\n          let tableData1 = [];\n          for (let i=0; i < snapArray.length; i++) {\n          //push send this data to the back of the chartData variable above.\n          tableData1.push(Object.keys(snapArray[i]));\n          }\n\n          let tableData2 = tableData1.map(function(a){return a.length;});\n          tableData2.indexOf(Math.max.apply(Math, tableData2));\n\n          let indexOfMaxValue = tableData2.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n          let table1Keys = Object.keys(snapArray[indexOfMaxValue]);\n          table1Keys = table1Keys.filter(e => e !== 'ID');\n          table1Keys = table1Keys.filter(e => e !== 'Miscellaneous');\n          table1Keys = table1Keys.filter(e => e !== 'date');\n          table1Keys = table1Keys.filter(e => e !== 'Title');\n          table1Keys = table1Keys.filter(e => e !== 'key');\n          table1Keys = table1Keys.filter(e => e !== 'key');\n\n          if (this.state.turnedOffKeys.length == 0) {\n            console.log(\"do nothing again\")\n          }\n\n          if (this.state.turnedOffKeys.lenth > 0) {\n            this.state.turnedOffKeys.map((item) => {\n\n              table1Keys = table1Keys.filter(e => e !== item);\n            })\n          }\n\n          console.log(table1Keys)\n\n          this.setState({\n            smallGraphKeys: table1Keys,\n          })\n\n\n          let tableKeys = table1Keys.map((txt) => {\n            return (\n\n            {\n            title:txt,\n            dataIndex: txt,\n            key: txt,\n            ...this.getColumnSearchProps(txt),\n\n            width: 200,\n          }\n          )})\n\n          tableKeys.unshift({\n          title: 'Title',\n          dataIndex: 'Title',\n          key: 'Title',\n          ...this.getColumnSearchProps('Title'),\n          sorter: (a, b) => { return a.Title.localeCompare(b.Title)},\n          sortDirections: ['descend', 'ascend'],\n          width: 200,\n\n          })\n\n          tableKeys.unshift({\n          title: 'Date',\n          dataIndex: 'date',\n          key: 'date',\n          ...this.getColumnSearchProps('date'),\n          sorter: (a, b) => { return a.date.localeCompare(b.date)},\n          sortDirections: ['descend', 'ascend'],\n          sortOrder: 'descend',\n          width: 130,\n          })\n\n          tableKeys.unshift({\n          title: 'ID #',\n          dataIndex: 'ID',\n          key: 'ID',\n          ...this.getColumnSearchProps('ID'),\n          sorter: (a, b) => { return a.ID.localeCompare(b.ID)},\n          sortDirections: ['descend', 'ascend'],\n          width: 80,\n          })\n\n\n          tableKeys.unshift({\n            title: 'Edit',\n            dataIndex: '',\n            key: 'x',\n            fixed: 'left',\n            render: this.editRow.bind(this),\n            width: 60,\n\n          })\n\n          tableKeys.unshift({\n            title: 'Delete',\n            dataIndex: '',\n            fixed: 'left',\n            key: 'y',\n            render: this.deleteRow.bind(this),\n            width: 60,\n\n          })\n          console.log(data);\n          let reverseData = data.reverse();\n          let threeData = [data[2], data[1], data[0]];\n          let sixData = [\n          data[5],\n          data[4],\n          data[3],\n          data[2],\n          data[1],\n          data[0]];\n          let twelveData = [\n            data[11],\n            data[10],\n            data[9],\n            data[8],\n            data[7],\n            data[6],\n          data[5],\n          data[4],\n          data[3],\n          data[2],\n          data[1],\n          data[0]];\n\n          let reverseData1 = data.reverse();\n\n\n          this.setState({\n            snapArray: data,\n            threeData: threeData,\n            sixData: sixData,\n            twelveData: twelveData,\n            graphData: data,\n            tableKeys: tableKeys,\n          })\n\n\n        }\n\n         })\n\n         const sampleList2Ref = fire.database().ref(`sampleList/${user.uid}`);\n         sampleList2Ref.on('value', (snapshot) => {\n           let maintenanceArray = this.snapshotToArray(snapshot);\n           console.log(maintenanceArray)\n           this.setState({\n             snapArray1: maintenanceArray,\n\n           })\n         })\n\n\n    const profileRef = fire.database().ref(`profileInformation/${user.uid}`);\n    profileRef.on('value', (snapshot) => {\n      var that = this;\n\n\n    this.setState({\n      lakeName: snapshot.child('lakeName').val(),\n      locationCity: snapshot.child('locationCity').val(),\n      locationState: snapshot.child('locationState').val(),\n      managementContact: snapshot.child('managementContact').val(),\n      hoaContact: snapshot.child('hoaContact').val(),\n      managementContactNumber: snapshot.child('managementContactNumber').val(),\n      hoaContactNumber: snapshot.child('hoaContactNumber').val(),\n      latitude: snapshot.child('latitude').val(),\n      longitude: snapshot.child('longitude').val(),\n      center: {\n        lat: parseInt(snapshot.child('latitude').val()),\n        lng: parseInt(snapshot.child('longitude').val())\n      },\n\n    });\n\n\n    console.log(this.state.center);\n              var myLat = `${this.state.latitude}`;\n                var myLon = `${this.state.longitude}`;\n             let API_WEATHER = `http://api.openweathermap.org/data/2.5/weather?lat=${myLat}&lon=${myLon}&units=imperial&appid=${'30573b68170d7f4400c7ac9c1c671ccf'}`;\n\n             fetch(API_WEATHER)\n          .then(response => response.json())\n          .then(responseJson => {\n            console.log(responseJson);\n            console.log(responseJson.weather);\n            console.log(responseJson.name);\n            this.setState({\n              isLoading: false,\n              dataSource: responseJson,\n              currentCity: this.state.lakeName,\n              currentTemp: responseJson.main.temp,\n              currentIcon: 'http://openweathermap.org/img/w/' + responseJson.weather[0].icon + '.png',\n              currentDescription: responseJson.weather[0].main,\n              currentHumidity: responseJson.main.humidity,\n\n\n            });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n\n\n  });\n\n\n\n  });\n\n\n\n\n\n\n  }\n\n\n\n\n\n\n  onSelectChange = (selectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  }\n\n  getColumnSearchProps = (dataIndex) => ({\n      filterDropdown: ({\n        setSelectedKeys, selectedKeys, confirm, clearFilters,\n      }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={node => { this.searchInput = node; }}\n            placeholder={`Search ${dataIndex}`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm)}\n            icon=\"search\"\n            size=\"small\"\n            style={{ width: 90, marginRight: 8 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </div>\n      ),\n      filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: (visible) => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n\n    })\n\n    handleSearch = (selectedKeys, confirm) => {\n      confirm();\n      this.setState({ searchText: selectedKeys[0] });\n      console.log(selectedKeys[0]);\n      console.log(this.state.searchText);\n    }\n\n    handleReset = (clearFilters) => {\n      clearFilters();\n      this.setState({ searchText: '' });\n    }\n\n\n\n\n    deleteRow = (row, isSelected, e, id, key) =>\n    {\n      return (\n        <div style={{textAlign: 'center'}}>\n        <Icon type=\"delete\" style={{fontSize: '24px', color: '#101441'}}\n        onClick={() => this.removesample(isSelected.key)}>\n          Click me\n        </Icon>\n        </div>\n      )\n    }\n    removesample(itemId) {\n\n     const sampleRef = fire.database().ref(`/sampleReport/${this.state.userID}/${itemId}`);\n     sampleRef.remove();\n    }\n\n\n\n    removesample1(itemId) {\n\n    const sampleRef = fire.database().ref(`/sampleList/${this.state.userID}/${itemId}`);\n    sampleRef.remove();\n    }\n\n    removesample2(itemId) {\n\n    const sampleRef = fire.database().ref(`/sampleReport/${this.state.userID}/${this.state.id}/${itemId}`);\n    sampleRef.remove();\n    this.fillStates(this.state.id);\n\n\n    }\n\n    editRow = (row, isSelected, e, id, key) =>\n    {\n      return (\n        <div style={{textAlign: 'center'}}>\n        <Icon type=\"copy\" style={{fontSize: '24px', color: '#101441'}}\n        onClick={() => this.fillStates(isSelected.key)}>\n          Click me\n        </Icon>\n        </div>\n      )\n    }\n\n    editRow1 = (row, isSelected, e, id, key) =>\n    {\n      return (\n        <div style={{textAlign: 'center'}}>\n        <Icon type=\"form\" style={{fontSize: '24px', color: '#101441'}}\n        onClick={() => this.fillParameterStates(isSelected.key)}>\n          Click me\n        </Icon>\n        </div>\n      )\n    }\n\n    fillParameterStates(itemId) {\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n        this.setState({\n          visible3: true,\n\n        })\n\n      const sample1Ref = fire.database().ref(`/sampleList/${user.uid}/${itemId}`);\n      let id = fire.database().ref().child(`/sampleList/${user.uid}/${itemId}`).key;\n      sample1Ref.on('value', (snapshot) => {\n\n        this.setState({\n          Sample_Item: snapshot.child('Sample_Item').val(),\n          dataType: snapshot.child('dataType').val(),\n          color: snapshot.child('color').val(),\n          id: id,\n        });\n\n    });\n\n    });\n    }\n\n    parameterOverwrite = (e) => {\n    e.preventDefault();\n    //fire.database().ref('samples') refers to the main title of the fire database.\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleListRef = fire.database().ref(`sampleList/${user.uid}/${this.state.id}`);\n\n\n    var object = {Sample_Item: this.state.Sample_Item, color: this.state.color, dataType: this.state.dataType, Sample_Input: '', id: this.state.id}\n      console.log(object);\n      sampleListRef.set(object);\n\n    //this.setState is used to clear the text boxes after the form has been submitted.\n    this.setState({\n      visible3: false,\n\n    });\n\n    });\n    }\n\n\n    fillParameterInfo = (e, itemId) => {\n      e.preventDefault();\n      //fire.database().ref('samples') refers to the main title of the fire database.\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleListRef = fire.database().ref(`sampleList/${user.uid}`);\n      let id = fire.database().ref().child(`/sampleList/${user.uid}/${itemId}`).key;\n      const sampleInfo = {\n        Sample_Item: this.state.Sample_Item,\n        Sample_Input: '',\n        dataType: this.state.dataType,\n        color: this.state.color,\n        id: id,\n\n      }\n\n      sampleListRef.push(sampleInfo);\n      //this.setState is used to clear the text boxes after the form has been submitted.\n      this.setState({\n        Sample_Item: '',\n        dataType: '',\n        color: '#000000',\n        childrenDrawer: false,\n        visible4: false,\n      });\n\n    });\n    }\n\n\n\n\n    changeData(itemId) {\n      const sample1Ref = fire.database().ref(`/sampleList/${this.state.userID}/${itemId}`);\n      let id = fire.database().ref().child(`/sampleList/${this.state.userID}/${itemId}`).key;\n      sample1Ref.on('value', (snapshot) => {\n        this.setState({\n          Sample_Item: snapshot.child('Sample_Item').val(),\n          Sample_Input: '',\n          dataType: snapshot.child('dataType').val(),\n          color: snapshot.child('color').val(),\n          id: id,\n      });\n    });\n\n\n    }\n\n    editRowColor = (row, isSelected, e, id, key) =>\n    {\n\n      const content = (\n    <div>\n      <SketchPicker\n    color={ this.state.color }\n    onChangeComplete={ this.overwriteColor }\n      />\n    </div>\n    );\n\n      return (\n        <div style={{textAlign: 'left'}}>\n          <Popover content={content} title=\"Title\" trigger=\"click\">\n            <Icon type=\"bg-colors\" style={{fontSize: '24px', color: '#101441'}}\n            onClick={() => this.changeColor(isSelected.key)}>\n              Click me\n            </Icon>\n      </Popover>\n        </div>\n      )\n    }\n\n    changeColor(itemId) {\n\n\n      const sample1Ref = fire.database().ref(`/sampleList/${this.state.userID}/${itemId}`);\n      let id = fire.database().ref().child(`/sampleList/${this.state.userID}/${itemId}`).key;\n      sample1Ref.on('value', (snapshot) => {\n\n        this.setState({\n          Sample_Item: snapshot.child('Sample_Item').val(),\n          Sample_Input: '',\n          dataType: snapshot.child('dataType').val(),\n          color: snapshot.child('color').val(),\n          id: id,\n        });\n\n    });\n\n    }\n\n    overwriteColor = (color) => {\n\n      const sampleListRef = fire.database().ref(`sampleList/${this.state.userID}/${this.state.id}`);\n\n       this.setState({ color: color.hex });\n\n      var object = {Sample_Item: this.state.Sample_Item, color: this.state.color, dataType: this.state.dataType, Sample_Input: '', id: this.state.id};\n\n      sampleListRef.set(object);\n\n\n     };\n\n\n\n\n\n\n    handleSampleChange = idx => evt => {\n      const newParameters = this.state.snapArray1.map((parameter, sidx) => {\n        if (idx !== sidx) return parameter;\n        return { ...parameter, Sample_Input: evt.target.value };\n      });\n      this.setState({ snapArray1: newParameters });\n\n\n\n      };\n\n      handleSampleChange1 = idx => evt => {\n        const newParameters = this.state.arrayData2.map((parameter, sidx) => {\n          if (idx !== sidx) return parameter;\n          return { ...parameter, Sample_Input: evt.target.value };\n        });\n        this.setState({ arrayData2: newParameters });\n\n\n\n        };\n\n\n      handleSubmit = (e) => {\n          e.preventDefault();\n          this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n              console.log('Received values of form: ', values);\n            }\n          });\n        }\n\n        sampleSubmit = (e) => {\n          e.preventDefault();\n          //fire.database().ref('samples') refers to the main title of the fire database.\n          this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n          const sampleListRef = fire.database().ref(`sampleReport/${user.uid}`);\n\n\n      var arr = this.state.snapArray1;\n      console.log(arr);\n\n\n      if (arr.length == 0){\n        var object = {date: this.state.sampleDate, ID: this.state.sampleID, Title: this.state.sampleTitle, Miscellaneous: this.state.sampleMisc}\n        console.log(object);\n        sampleListRef.push(object);\n      }\n\n    if (arr.length > 0){\n\n        var object = arr.reduce(\n            (obj, item) => Object.assign(obj, {date: this.state.sampleDate, ID: this.state.sampleID, Title: this.state.sampleTitle, Miscellaneous: this.state.sampleMisc, [item.Sample_Item]: item.Sample_Input}) ,{});\n            console.log(object);\n            sampleListRef.push(object);\n\n            const sampleList2Ref = fire.database().ref(`sampleList/${user.uid}`);\n            sampleList2Ref.on('value', (snapshot) => {\n              let maintenanceArray = this.snapshotToArray(snapshot);\n\n              this.setState({\n                snapArray1: maintenanceArray,\n\n              })\n            })\n\n          }\n\n\n\n\n\n          //this.setState is used to clear the text boxes after the form has been submitted.\n          this.setState({\n            sampleDate: '',\n            sampleID: '',\n            sampleTitle: '',\n            sampleMisc: '',\n\n            visible: false,\n            visible1: false,\n            visible2: false,\n\n          });\n\n        });\n        }\n\n        fillStates(itemId) {\n\n          this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n            this.setState({\n              overwriteReport: null,\n              addReport: 'none',\n              inputOverwrite: null,\n              inputAdd: 'none',\n              visible: true,\n\n            })\n\n          const sample1Ref = fire.database().ref(`/sampleReport/${user.uid}/${itemId}`);\n          let id = fire.database().ref().child(`/sampleReport/${user.uid}/${itemId}`).key;\n          sample1Ref.on('value', (snapshot) => {\n\n            let maintenanceList = snapshot.val();\n\n\n\n\n            this.setState({\n              sampleDate: snapshot.child('date').val(),\n              sampleID: snapshot.child('ID').val(),\n              sampleTitle: snapshot.child('Title').val(),\n              sampleMisc: snapshot.child('Miscellaneous').val(),\n              id: id,\n            });\n\n            let arr = snapshot.val();\n            delete arr.date;\n            delete arr.ID;\n            delete arr.Title;\n            delete arr.Miscellaneous;\n\n            let arrayKeys = Object.keys(arr);\n            let arrayValues = Object.values(arr);\n            this.setState({\n              arrayKeys1: arrayKeys,\n              arrayValues1: arrayValues,\n\n            })\n\n    });\n\n    const sample2Ref = fire.database().ref(`/sampleReport/${user.uid}`);\n    sample2Ref.on('value', (snapshot) => {\n    let maintenanceList = this.snapshotToArray(snapshot);\n\n\n    let keys = [maintenanceList.map((parameter) => {\n    return (\n    parameter.key\n    )\n    })]\n\n    this.setState({\n    arrayData1: keys,\n    })\n    })\n\n    let arrayData = [];\n    for (let i=0; i < this.state.arrayKeys1.length; i++) {\n    //push send this data to the back of the chartData variable above.\n    arrayData.push({Sample_Input: this.state.arrayValues1[i], Sample_Item: this.state.arrayKeys1[i], key: this.state.arrayData1[i]});\n\n    }\n\n    this.setState({\n    snapArray1: arrayData,\n    arrayData2: arrayData,\n    })\n\n        });\n      }\n\n\n      sampleOverwrite = (e) => {\n        e.preventDefault();\n        //fire.database().ref('samples') refers to the main title of the fire database.\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n        const sampleListRef = fire.database().ref(`sampleReport/${user.uid}/${this.state.id}`);\n\n\n    var arr = this.state.arrayData2;\n    console.log(arr);\n\n\n    if (arr.length == 0){\n      var object = {date: this.state.sampleDate, ID: this.state.sampleID, Title: this.state.sampleTitle, Miscellaneous: this.state.sampleMisc}\n      console.log(object);\n      sampleListRef.set(object);\n\n    }\n    else\n\n\n      var object = arr.reduce(\n          (obj, item) => Object.assign(obj, {date: this.state.sampleDate, ID: this.state.sampleID, Title: this.state.sampleTitle, Miscellaneous: this.state.sampleMisc, [item.Sample_Item]: item.Sample_Input}) ,{});\n          console.log(object);\n          sampleListRef.set(object);\n\n\n\n        //this.setState is used to clear the text boxes after the form has been submitted.\n        this.setState({\n\n\n          visible: false,\n          visible1: false,\n          visible2: false,\n\n        });\n\n      });\n      }\n\n\n      displayButtons = () => {\n\n     this.setState({\n       overwriteReport: 'none',\n       addReport: null,\n       inputOverwrite: 'none',\n       inputAdd: null,\n     })\n\n\n      }\n\n\n      additionalItem = (e, itemId, id) => {\n        e.preventDefault();\n        //fire.database().ref('samples') refers to the main title of the fire database.\n\n        let array = this.state.arrayData2;\n\n        const parameterInfo = {\n\n          Sample_Item: this.state.Sample_Item,\n          Sample_Input: '',\n          dataType: this.state.dataType,\n          color: this.state.color,\n          id: id,\n\n        }\n\n        array.push(parameterInfo);\n        //this.setState is used to clear the text boxes after the form has been submitted.\n        this.setState({\n          Sample_Item: '',\n          arrayData2: array,\n          dataType: '',\n          color: '',\n\n        });\n\n\n      }\n\n      onChange = (pagination, filters, sorter, extra: { currentDataSource: [] }) => {\n        const data = extra.currentDataSource;\n     console.log(extra.currentDataSource);\n     this.setState({\n       currentData: extra.currentDataSource,\n     })\n    }\n\n    handleChangeComplete = (color) => {\n      this.setState({ color: color.hex, colorDisplay: 'none' });\n    };\n\n    showChildrenDrawer = () => {\n      this.setState({\n        childrenDrawer: true,\n      });\n    };\n\n    onChildrenDrawerClose = () => {\n      this.setState({\n        childrenDrawer: false,\n      });\n    };\n\n    displayColor = () => {\n      this.setState({\n        colorDisplay: null,\n      })\n    }\n\n    handleSizeChange = (e) => {\n\n    const sampleListRef = fire.database().ref(`sampleList/${this.state.userID}/${this.state.id}`);\n\n    this.setState({ dataType: e.target.value });\n\n    var object = {Sample_Item: this.state.Sample_Item, color: this.state.color, dataType: this.state.dataType, Sample_Input: '', id: this.state.id};\n\n    sampleListRef.set(object);\n\n\n\n    }\n\n    handleTimeFrameChange = (e) => {\n    this.setState({ timeFrame: e.target.value });\n    console.log(this.state.timeFrame)\n    if (this.state.timeframe == 'three') {\n    console.log(\"it's 3!!\")\n    this.setState({\n      graphData: this.state.threeData,\n    })\n    }\n\n\n    }\n\n    threeMonths = () => {\n    this.setState({\n    graphData: this.state.threeData,\n    })\n    }\n    sixMonths = () => {\n    this.setState({\n    graphData: this.state.sixData,\n    })\n    }\n    twelveMonths = () => {\n    this.setState({\n    graphData: this.state.twelveData,\n    })\n    }\n    allMonths = () => {\n    this.setState({\n    graphData: this.state.snapArray,\n    })\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n   getLocation(){\n\n       // Get the current position of the user\n       navigator.geolocation.getCurrentPosition(\n       (position) => {\n           this.setState(\n           (prevState) => ({\n               latitude: 30,\n               longitude: 20\n               }), () => { this.getWeather(); }\n           );\n       },\n           (error) => this.setState({ weather: error.message }),\n           { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 },\n       );\n   }\n\n\n\n\n  render() {\n\n    const center = {\n      lat: this.state.latitude,\n      lng: this.state.longitude\n    };\n\n\n\n    const columns1 = [\n      {\n        title: 'Edit',\n        dataIndex: '',\n        key: 'x',\n        render: this.editRow1.bind(this),\n        width: 60,\n      },\n      {\n    title: 'Title',\n    dataIndex: 'Sample_Item',\n    key: 'Sample_Item',\n    width: 200,\n    },\n    {\n    title: 'Data Type',\n    dataIndex: 'dataType',\n    key: 'dataType',\n    render: (text, record, isSelected, color) => {\n    if (record.dataType == 'Bar') {\n    return <div style={{textAlign: 'left'}}>\n    <Popover style={{textAlign: 'center'}} content={content} title=\"Select Type and Save\" trigger=\"click\">\n    <Icon type=\"bar-chart\" style={{fontSize: '32px', color: record.color}}\n    onClick={() => this.changeData(record.key)}>\n      Click me\n    </Icon>\n    </Popover>\n    </div>\n    }\n    if (record.dataType == 'Area') {\n    return <div style={{textAlign: 'left'}}>\n    <Popover style={{textAlign: 'center'}} content={content} title=\"Select Type and Save\" trigger=\"click\">\n    <Icon type=\"area-chart\" style={{fontSize: '32px', color: record.color}}\n    onClick={() => this.changeData(record.key)}>\n      Click me\n    </Icon>\n    </Popover>\n    </div>\n    }\n    if (record.dataType == 'Line') {\n    return <div style={{textAlign: 'left'}}>\n    <Popover style={{textAlign: 'center'}} content={content} title=\"Select Type and Save\" trigger=\"click\">\n    <Icon type=\"line-chart\" style={{fontSize: '32px', color: record.color}}\n    onClick={() => this.changeData(record.key)}>\n      Click me\n    </Icon>\n    </Popover>\n    </div>\n    }\n    if (record.dataType == 'Off') {\n    return <div style={{textAlign: 'left'}}>\n    <Popover style={{textAlign: 'center'}} content={content} title=\"Select Type and Save\" trigger=\"click\">\n    <Icon type=\"close\" style={{fontSize: '32px', color: record.color}}\n    onClick={() => this.changeData(record.key)}>\n      Click me\n    </Icon>\n    </Popover>\n    </div>\n    }\n\n    },\n\n\n\n\n    width: 200,\n    },\n    {\n    title: 'Color',\n    dataIndex: 'color',\n    key: 'color',\n    render: (text, record, isSelected) =>\n    (\n\n    <div style={{textAlign: 'left'}}>\n    <Popover content={content1} title=\"Select Color\" trigger=\"click\">\n    <Icon type=\"bg-colors\" style={{fontSize: '24px', color: record.color}}\n    onClick={() => this.changeColor(record.key)}>\n      Click me\n    </Icon>\n    </Popover>\n    </div>\n\n    )\n\n    ,\n    width: 200,\n    },\n\n\n\n    ]\n\n\n    const content1 = (<div>\n    <SketchPicker\n    color={ this.state.color }\n    onChangeComplete={ this.overwriteColor }\n    />\n    </div>);\n\n    const content = (\n    <div>\n    <Row>\n    <Radio.Group size=\"default\" value={this.state.dataType} onChange={this.handleSizeChange}>\n    <Radio.Button value=\"Bar\">Bar</Radio.Button>\n    <Radio.Button value=\"Line\">Line</Radio.Button>\n    <Radio.Button value=\"Area\">Area</Radio.Button>\n    <Radio.Button value=\"Off\">Off</Radio.Button>\n    </Radio.Group>\n    </Row>\n\n\n    <Row style={{paddingTop: '10px', textAlign: 'center'}}>\n    <Button type=\"primary\"onClick={this.parameterOverwrite}>Save</Button>\n    </Row>\n    </div>\n    );\n\n    const columns = this.state.tableKeys;\n\n    const data = this.state.snapArray;\n    const dataReverse = this.state.graphData;\n    const data1 = this.state.snapArray1;\n    const csvData = this.state.snapArray;\n    const csvData1 = this.state.currentData;\n\n\n\n    return (\n\n      <Layout>\n\n\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={24} sm={24} md={24} lg={24} xl={24} style={{textAlign: 'left'}}>\n\n\n\n          <Row type=\"flex\" justify=\"center\">\n            <Col span={24} style={{textAlign: 'center'}}>\n              <Card style={{ width: '100%' }}>\n                <div style={{textAlign: 'right'}}>\n                  <Radio.Group size=\"small\" value={this.state.timeFrame} onChange={this.handleTimeFrameChange}>\n            <Radio.Button value=\"three\" onClick={this.threeMonths}>3 Months</Radio.Button>\n            <Radio.Button value=\"six\" onClick={this.sixMonths}>6 Months</Radio.Button>\n            <Radio.Button value=\"twelve\" onClick={this.twelveMonths}>12 Months</Radio.Button>\n            <Radio.Button value=\"All\" onClick={this.allMonths}>All</Radio.Button>\n          </Radio.Group></div>\n        <ResponsiveContainer width=\"100%\" aspect={10/3.0} minHeight={300}>\n                  <ComposedChart data={dataReverse}\n            syncId=\"anyId\">\n\n\n            <XAxis dataKey=\"date\"><Label  offset={200} position=\"top\" /></XAxis>\n\n            <YAxis hide= \"true\" type=\"number\" domain={[dataMin => (0 - Math.abs(dataMin)), dataMax => (dataMax * 2)]} />\n            <Tooltip />\n\n\n            <defs>\n              {data1.map(parameter => {\n                return (\n\n                    <linearGradient id={parameter.Sample_Item} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                      <stop offset=\"5%\" stopColor={parameter.color} stopOpacity={0.3}/>\n                      <stop offset=\"95%\" stopColor={parameter.color} stopOpacity={0.1}/>\n                    </linearGradient>\n\n\n                )\n              })}\n  </defs>\n\n\n\n\n              {data1.map(parameter => {\n\n                if (parameter.dataType == 'Bar') {\n                  console.log('something 1')\n                  const CustomTag = Bar;\n                  return(\n                    <CustomTag type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}><LabelList dataKey={parameter.Sample_Item} position=\"top\" /></CustomTag>\n                  )\n                }\n                if (parameter.dataType == 'Line') {\n                  console.log('something 2')\n                  const CustomTag = Line;\n                  return(\n                    <CustomTag type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}><LabelList dataKey={parameter.Sample_Item} position=\"top\" /></CustomTag>\n                  )\n                }\n                if (parameter.dataType == 'Area') {\n                  console.log('something 3')\n                  const CustomTag = Area;\n                  return(\n                    <CustomTag type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}><LabelList dataKey={parameter.Sample_Item} position=\"top\" /></CustomTag>\n                  )\n                }\n\n                if (parameter.dataType == 'Off') {\n                  console.log('No graph')\n\n\n                }\n\n\n              })}\n\n\n\n\n\n\n\n            <Legend />\n\n          </ComposedChart>\n           </ResponsiveContainer>\n              </Card>\n            </Col>\n\n\n          </Row>\n\n          <Row style={{paddingTop: '15px'}} type=\"flex\" justify=\"center\">\n            <Col span={24}>\n            <Card style={{ width: '100%'}} bodyStyle={{padding: \"0\"}}>\n              <Row align=\"middle\">\n                <p style={{paddingTop: '25px', paddingLeft: '20px', fontSize: '24px'}}>Water Quality</p>\n              </Row>\n              <Row  type=\"flex\" justify=\"center\">\n\n\n                {data1.map(parameter => {\n\n\n                    return(\n                      <Col xs={24} sm={12} md={8} lg={8} xl={8}>\n                        <Card >\n                          <Row>\n                            <Col xs={4} sm={4} md={4} lg={4} xl={4}>\n                            <Icon type=\"up-circle\"style={{fontSize: '32px',color: parameter.color}} />\n                            </Col>\n                            <Col  xs={16} sm={16} md={16} lg={16} xl={16}>\n                            <b style={{fontSize: '24px'}}>{parameter.Sample_Item}</b>\n                            </Col>\n                            </Row>\n                            <Row>\n\n                      <ResponsiveContainer width=\"100%\" aspect={6/3.0} minHeight={90}>\n\n                      <ComposedChart data={dataReverse}\n                syncId=\"anyId\">\n\n                <XAxis dataKey=\"date\"><Label  offset={200} position=\"top\" /></XAxis>\n\n                <YAxis hide= \"true\" type=\"number\" domain={[dataMin => (0 - Math.abs(dataMin)), dataMax => (dataMax * 2)]} />\n                <Tooltip />\n\n                      <Line type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}></Line>\n\n\n\n\n              </ComposedChart>\n              </ResponsiveContainer>\n              </Row>\n              </Card>\n              </Col>\n                    )\n\n\n\n\n                })}\n\n\n\n\n                        </Row>\n\n            </Card>\n            </Col>\n\n          </Row>\n\n\n\n\n\n\n\n\n\n         <Card  style={{textAlign: 'left'}} bordered={true} >\n           <div style={{textAlign: 'center'}}>\n           <h3>{this.state.currentCity}</h3>\n             <img style={{width: '60px', height: '60px'}} src={this.state.currentIcon} />\n             <h3>{this.state.currentDescription}</h3>\n             <p>Temperature: {this.state.currentTemp} F</p>\n             <p>Humidity: {this.state.currentHumidity}%</p>\n             </div>\n         </Card>\n\n\n        <Col xs={24} sm={24} md={16} lg={16} xl={16}>\n         <Card  style={{textAlign: 'left'}} bordered={true} >\n           <div style={{ height: '29vh', width: '100%' }}>\n             <GoogleMapReact\n               bootstrapURLKeys={{ key: 'AIzaSyAqe1Z8I94AcnNb3VsOam1tnUd_8WdubV4'}}\n               center={\n                 this.state.center\n               }\n               defaultZoom={this.props.zoom}\n             >\n               <AnyReactComponent\n                 lat={this.state.latitude}\n                 lng={this.state.longitude}\n                 text={this.state.lakeName}\n               />\n             </GoogleMapReact>\n           </div>\n         </Card>\n\n        </Col>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</Col>\n</Row>\n\n\n\n\n\n\n\n\n      </Layout>\n\n\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}