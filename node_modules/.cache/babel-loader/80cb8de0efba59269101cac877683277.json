{"ast":null,"code":"import _objectSpread from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/Container.js\";\nimport React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport Card1 from './Card';\nimport { DropTarget } from 'react-dnd';\nimport { Row, Col, Tabs, Table, Divider, Tag, message, Card, Drawer, Menu, Dropdown, Button, Layout, Carousel, Input, Popover, Icon, Cascader, Switch, Select, AutoComplete, Radio } from 'antd';\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n    _this.state = {\n      cards: props.list\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"pushCard\",\n    value: function pushCard(card) {\n      this.setState(update(this.state, {\n        cards: {\n          $push: [card]\n        }\n      }));\n    }\n  }, {\n    key: \"removeCard\",\n    value: function removeCard(index) {\n      this.setState(update(this.state, {\n        cards: {\n          $splice: [[index, 1]]\n        }\n      }));\n    }\n  }, {\n    key: \"moveCard\",\n    value: function moveCard(dragIndex, hoverIndex) {\n      var cards = this.state.cards;\n      var dragCard = cards[dragIndex];\n      this.setState(update(this.state, {\n        cards: {\n          $splice: [[dragIndex, 1], [hoverIndex, 0, dragCard]]\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cards = this.state.cards;\n      var _this$props = this.props,\n          canDrop = _this$props.canDrop,\n          isOver = _this$props.isOver,\n          connectDropTarget = _this$props.connectDropTarget;\n      var isActive = canDrop && isOver;\n      var style = {\n        width: \"300px\",\n        height: \"600px\",\n        border: '1px dashed gray'\n      };\n      var backgroundColor = isActive ? 'lightgreen' : '#FFF';\n      return connectDropTarget(React.createElement(\"div\", {\n        style: _objectSpread({}, style, {\n          backgroundColor: backgroundColor\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, cards.map(function (card, i) {\n        return React.createElement(Card1, {\n          key: card.id,\n          index: i,\n          listId: _this2.props.id,\n          card: card,\n          removeCard: _this2.removeCard.bind(_this2),\n          moveCard: _this2.moveCard.bind(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nvar cardTarget = {\n  drop: function drop(props, monitor, component) {\n    var id = props.id;\n    var sourceObj = monitor.getItem();\n    if (id !== sourceObj.listId) component.pushCard(sourceObj.card);\n    return {\n      listId: id\n    };\n  }\n};\nexport default DropTarget(\"CARD\", cardTarget, function (connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop()\n  };\n})(Container);","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/Container.js"],"names":["React","Component","update","Card1","DropTarget","Row","Col","Tabs","Table","Divider","Tag","message","Card","Drawer","Menu","Dropdown","Button","Layout","Carousel","Input","Popover","Icon","Cascader","Switch","Select","AutoComplete","Radio","Container","props","state","cards","list","card","setState","$push","index","$splice","dragIndex","hoverIndex","dragCard","canDrop","isOver","connectDropTarget","isActive","style","width","height","border","backgroundColor","map","i","id","removeCard","bind","moveCard","cardTarget","drop","monitor","component","sourceObj","getItem","listId","pushCard","connect","dropTarget"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyCC,GAAzC,EAA8CC,OAA9C,EAAuDC,IAAvD,EAA6DC,MAA7D,EAAqEC,IAArE,EAA2EC,QAA3E,EAAqFC,MAArF,EAA6FC,MAA7F,EAAqGC,QAArG,EAA+GC,KAA/G,EAAsHC,OAAtH,EAA+HC,IAA/H,EAAqIC,QAArI,EAA+IC,MAA/I,EAAuJC,MAAvJ,EAA+JC,YAA/J,EAA6KC,KAA7K,QAA0L,MAA1L;;IAGMC,S;;;;;AAEL,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAEF,KAAK,CAACG;AAAf,KAAb;AAFkB;AAGlB;;;;6BAEQC,I,EAAM;AACd,WAAKC,QAAL,CAAc/B,MAAM,CAAC,KAAK2B,KAAN,EAAa;AAChCC,QAAAA,KAAK,EAAE;AACNI,UAAAA,KAAK,EAAE,CAAEF,IAAF;AADD;AADyB,OAAb,CAApB;AAKA;;;+BAEUG,K,EAAO;AACjB,WAAKF,QAAL,CAAc/B,MAAM,CAAC,KAAK2B,KAAN,EAAa;AAChCC,QAAAA,KAAK,EAAE;AACNM,UAAAA,OAAO,EAAE,CACR,CAACD,KAAD,EAAQ,CAAR,CADQ;AADH;AADyB,OAAb,CAApB;AAOA;;;6BAEQE,S,EAAWC,U,EAAY;AAAA,UACvBR,KADuB,GACb,KAAKD,KADQ,CACvBC,KADuB;AAE/B,UAAMS,QAAQ,GAAGT,KAAK,CAACO,SAAD,CAAtB;AAEA,WAAKJ,QAAL,CAAc/B,MAAM,CAAC,KAAK2B,KAAN,EAAa;AAChCC,QAAAA,KAAK,EAAE;AACNM,UAAAA,OAAO,EAAE,CACR,CAACC,SAAD,EAAY,CAAZ,CADQ,EAER,CAACC,UAAD,EAAa,CAAb,EAAgBC,QAAhB,CAFQ;AADH;AADyB,OAAb,CAApB;AAQA;;;6BAEQ;AAAA;;AAAA,UACAT,KADA,GACU,KAAKD,KADf,CACAC,KADA;AAAA,wBAEuC,KAAKF,KAF5C;AAAA,UAEAY,OAFA,eAEAA,OAFA;AAAA,UAESC,MAFT,eAESA,MAFT;AAAA,UAEiBC,iBAFjB,eAEiBA,iBAFjB;AAGR,UAAMC,QAAQ,GAAGH,OAAO,IAAIC,MAA5B;AACA,UAAMG,KAAK,GAAG;AACbC,QAAAA,KAAK,EAAE,OADM;AAEbC,QAAAA,MAAM,EAAE,OAFK;AAGbC,QAAAA,MAAM,EAAE;AAHK,OAAd;AAMA,UAAMC,eAAe,GAAGL,QAAQ,GAAG,YAAH,GAAkB,MAAlD;AAEA,aAAOD,iBAAiB,CACvB;AAAK,QAAA,KAAK,oBAAME,KAAN;AAAaI,UAAAA,eAAe,EAAfA;AAAb,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACElB,KAAK,CAACmB,GAAN,CAAU,UAACjB,IAAD,EAAOkB,CAAP,EAAa;AACvB,eACC,oBAAC,KAAD;AACC,UAAA,GAAG,EAAElB,IAAI,CAACmB,EADX;AAEC,UAAA,KAAK,EAAED,CAFR;AAGC,UAAA,MAAM,EAAE,MAAI,CAACtB,KAAL,CAAWuB,EAHpB;AAIC,UAAA,IAAI,EAAEnB,IAJP;AAKC,UAAA,UAAU,EAAE,MAAI,CAACoB,UAAL,CAAgBC,IAAhB,CAAqB,MAArB,CALb;AAMC,UAAA,QAAQ,EAAE,MAAI,CAACC,QAAL,CAAcD,IAAd,CAAmB,MAAnB,CANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,OAVA,CADF,CADuB,CAAxB;AAeC;;;;EAlEqBpD,S;;AAqExB,IAAMsD,UAAU,GAAG;AAClBC,EAAAA,IADkB,gBACb5B,KADa,EACN6B,OADM,EACGC,SADH,EACe;AAAA,QACxBP,EADwB,GACjBvB,KADiB,CACxBuB,EADwB;AAEhC,QAAMQ,SAAS,GAAGF,OAAO,CAACG,OAAR,EAAlB;AACA,QAAKT,EAAE,KAAKQ,SAAS,CAACE,MAAtB,EAA+BH,SAAS,CAACI,QAAV,CAAmBH,SAAS,CAAC3B,IAA7B;AAC/B,WAAO;AACN6B,MAAAA,MAAM,EAAEV;AADF,KAAP;AAGA;AARiB,CAAnB;AAWA,eAAe/C,UAAU,CAAC,MAAD,EAASmD,UAAT,EAAqB,UAACQ,OAAD,EAAUN,OAAV;AAAA,SAAuB;AACpEf,IAAAA,iBAAiB,EAAEqB,OAAO,CAACC,UAAR,EADiD;AAEpEvB,IAAAA,MAAM,EAAEgB,OAAO,CAAChB,MAAR,EAF4D;AAGpED,IAAAA,OAAO,EAAEiB,OAAO,CAACjB,OAAR;AAH2D,GAAvB;AAAA,CAArB,CAAV,CAIXb,SAJW,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport Card1 from './Card';\nimport { DropTarget } from 'react-dnd';\nimport { Row, Col, Tabs, Table, Divider, Tag, message, Card, Drawer, Menu, Dropdown, Button, Layout, Carousel, Input, Popover, Icon, Cascader, Switch, Select, AutoComplete, Radio } from 'antd';\n\n\nclass Container extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { cards: props.list };\n\t}\n\n\tpushCard(card) {\n\t\tthis.setState(update(this.state, {\n\t\t\tcards: {\n\t\t\t\t$push: [ card ]\n\t\t\t}\n\t\t}));\n\t}\n\n\tremoveCard(index) {\n\t\tthis.setState(update(this.state, {\n\t\t\tcards: {\n\t\t\t\t$splice: [\n\t\t\t\t\t[index, 1]\n\t\t\t\t]\n\t\t\t}\n\t\t}));\n\t}\n\n\tmoveCard(dragIndex, hoverIndex) {\n\t\tconst { cards } = this.state;\n\t\tconst dragCard = cards[dragIndex];\n\n\t\tthis.setState(update(this.state, {\n\t\t\tcards: {\n\t\t\t\t$splice: [\n\t\t\t\t\t[dragIndex, 1],\n\t\t\t\t\t[hoverIndex, 0, dragCard]\n\t\t\t\t]\n\t\t\t}\n\t\t}));\n\t}\n\n\trender() {\n\t\tconst { cards } = this.state;\n\t\tconst { canDrop, isOver, connectDropTarget } = this.props;\n\t\tconst isActive = canDrop && isOver;\n\t\tconst style = {\n\t\t\twidth: \"300px\",\n\t\t\theight: \"600px\",\n\t\t\tborder: '1px dashed gray'\n\t\t};\n\n\t\tconst backgroundColor = isActive ? 'lightgreen' : '#FFF';\n\n\t\treturn connectDropTarget(\n\t\t\t<div style={{...style, backgroundColor}}>\n\t\t\t\t{cards.map((card, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card1\n\t\t\t\t\t\t\tkey={card.id}\n\t\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\t\tlistId={this.props.id}\n\t\t\t\t\t\t\tcard={card}\n\t\t\t\t\t\t\tremoveCard={this.removeCard.bind(this)}\n\t\t\t\t\t\t\tmoveCard={this.moveCard.bind(this)} />\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n  }\n}\n\nconst cardTarget = {\n\tdrop(props, monitor, component ) {\n\t\tconst { id } = props;\n\t\tconst sourceObj = monitor.getItem();\n\t\tif ( id !== sourceObj.listId ) component.pushCard(sourceObj.card);\n\t\treturn {\n\t\t\tlistId: id\n\t\t};\n\t}\n}\n\nexport default DropTarget(\"CARD\", cardTarget, (connect, monitor) => ({\n\tconnectDropTarget: connect.dropTarget(),\n\tisOver: monitor.isOver(),\n\tcanDrop: monitor.canDrop()\n}))(Container);\n"]},"metadata":{},"sourceType":"module"}