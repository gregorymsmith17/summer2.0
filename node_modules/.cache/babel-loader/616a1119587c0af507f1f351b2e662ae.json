{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, FormGroup, Checkbox, Grid, PageHeader, Jumbotron, NavItem, Modal, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { ChromePicker } from 'react-color';\nimport GoogleMapReact from 'google-map-react';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport { LineChart, LabelList, ResponsiveContainer, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { Row, Col, Tabs, Card, Drawer, Menu, Icon, Button, Layout, Carousel } from 'antd';\n\nvar AnyReactComponent = function AnyReactComponent(_ref) {\n  var text = _ref.text;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, text);\n};\n\nvar TabPane = Tabs.TabPane;\nvar tabListNoTitle = [{\n  key: 'article',\n  tab: 'article'\n}, {\n  key: 'app',\n  tab: 'app'\n}, {\n  key: 'project',\n  tab: 'project'\n}];\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.imageFormatter = function (cell, row) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      }));\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    _this.tempColorChange = function (color) {\n      console.log(_this.state.color);\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"colors/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/colors/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          tempColor: color.hex\n        };\n        samplesRef.set(sample);\n\n        _this.setState({\n          tempColor: color.hex\n        });\n      });\n    };\n\n    _this.onTabChange = function (key, type) {\n      console.log(key, type);\n\n      _this.setState(_defineProperty({}, type, key));\n    };\n\n    _this.state = (_this$state = {\n      //The data that goes into the table showing weather data\n      weatherData: [],\n      iconData: [],\n      id: '',\n      key: 1,\n      currentCity: '',\n      currentTemp: '',\n      currentIcon: '',\n      currentDescription: '',\n      currentHumidity: '',\n      //checkbox status\n      checkboxState: true,\n      checkboxState1: true,\n      checkboxStatenitrogen: true,\n      checkboxStatephosphorus: true,\n      checkboxStatetds: true,\n      checkboxStatepH: true,\n      checkboxStatetss: true,\n      checkboxStatesalinity: true,\n      checkboxStateconductivity: true,\n      checkboxStatehardness: true,\n      checkboxStateturbidity: true,\n      checkboxStatedo: true,\n      //these are for the graphs\n      tempPlot: 'temp',\n      doPlot: 'do',\n      conductivityPlot: 'conductivity',\n      tdsPlot: 'tds',\n      salinityPlot: 'salinity',\n      pHPlot: 'pH',\n      turbidityPlot: 'turbidity',\n      nitrogenPlot: 'nitrogen',\n      phosphorusPlot: 'phosphorus',\n      totalHardnessPlot: 'totalHardness',\n      tssPlot: 'tss',\n      //this is the object array for the table\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      //averages\n      nitrogenAverage: [],\n      nitrogenAvg: '',\n      nitrogenLatest: '',\n      nitrogenGraph: [],\n      phosphorusAverage: [],\n      phosphorusAvg: '',\n      phosphorusGraph: [],\n      phoshporusLatest: '',\n      dissolvedOxygenAverage: [],\n      dissolvedOxygenAvg: '',\n      dissolvedOxygenGraph: [],\n      dissolvedOxygenLatest: '',\n      turbidityLatest: '',\n      turbidityAverage: [],\n      turbidityAvg: '',\n      turbidityGraph: [],\n      tssLatest: '',\n      tssAverage: [],\n      tssAvg: '',\n      tssGraph: [],\n      salinityLatest: '',\n      salinityAverage: [],\n      salinityAvg: '',\n      salinityGraph: []\n    }, _defineProperty(_this$state, \"key\", 'tab1'), _defineProperty(_this$state, \"noTitleKey\", 'app'), _defineProperty(_this$state, \"lakeName\", ''), _defineProperty(_this$state, \"locationCity\", ''), _defineProperty(_this$state, \"locationState\", ''), _defineProperty(_this$state, \"managementContact\", ''), _defineProperty(_this$state, \"hoaContact\", ''), _defineProperty(_this$state, \"managementContactNumber\", ''), _defineProperty(_this$state, \"hoaContactNumber\", ''), _defineProperty(_this$state, \"isLoading\", true), _defineProperty(_this$state, \"dataSource\", []), _defineProperty(_this$state, \"latitude\", null), _defineProperty(_this$state, \"longitude\", null), _defineProperty(_this$state, \"error\", null), _defineProperty(_this$state, \"weather\", ''), _defineProperty(_this$state, \"center\", {\n      lat: 37.987636425563075,\n      lng: -121.63235758701154\n    }), _this$state);\n    return _this;\n  } //async allows await to be used for API calls.  Without ASYNC an error will be called saying that await is a reserved word.\n  //ComponentDidMount runs over and over again\n\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n                  var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n                  samplesRef.on('value', function (snapshot) {\n                    var dataList = snapshot.val();\n                    var filter = [];\n                    var orders = snapshot.val();\n                    var orders2 = snapshot.val();\n                    var orders3 = [snapshot.val()];\n                    console.log(orders3);\n                    var newState = [];\n                    var newState2 = [];\n                    var newState3 = [];\n                    var nitrogenAverage = [];\n                    var phosphorusAverage = [];\n                    var dissolvedOxygenAverage = [];\n                    var tssAverage = [];\n                    var turbidityAverage = [];\n                    var salinityAverage = [];\n\n                    for (var order in orders) {\n                      newState.push({\n                        id: order,\n                        sampleDate: orders[order].sampleDate,\n                        sampleTaker: orders[order].sampleTaker,\n                        temp: orders[order].temp,\n                        do: orders[order].do,\n                        conductivity: orders[order].conductivity,\n                        tds: orders[order].tds,\n                        salinity: orders[order].salinity,\n                        pH: orders[order].pH,\n                        turbidity: orders[order].turbidity,\n                        nitrogen: orders[order].nitrogen,\n                        phosphorus: orders[order].phosphorus,\n                        totalHardness: orders[order].totalHardness,\n                        tss: orders[order].tss,\n                        sampleNotes: orders[order].sampleNotes\n                      });\n                      newState2.push({\n                        id: order,\n                        sampleDate: orders[order].sampleDate,\n                        sampleTaker: orders[order].sampleTaker,\n                        temp: orders[order].temp,\n                        do: orders[order].do,\n                        conductivity: orders[order].conductivity,\n                        tds: orders[order].tds,\n                        salinity: orders[order].salinity,\n                        pH: orders[order].pH,\n                        turbidity: orders[order].turbidity,\n                        nitrogen: orders[order].nitrogen,\n                        phosphorus: orders[order].phosphorus,\n                        totalHardness: orders[order].totalHardness,\n                        tss: orders[order].tss,\n                        sampleNotes: orders[order].sampleNotes\n                      });\n                    }\n\n                    newState2.sort(function (a, b) {\n                      if (a.sampleDate === b.sampleDate) {\n                        return 0;\n                      }\n\n                      return a.sampleDate > b.sampleDate ? 1 : -1;\n                    });\n                    newState.sort(function (a, b) {\n                      if (b.sampleDate === a.sampleDate) {\n                        return 0;\n                      }\n\n                      return b.sampleDate > a.sampleDate ? 1 : -1;\n                    });\n\n                    _this2.setState({\n                      orders: newState,\n                      orders2: newState2,\n                      dataList: newState,\n                      color: _this2.state.color\n                    });\n\n                    console.log(orders2);\n                    snapshot.forEach(function (ss) {\n                      nitrogenAverage.push({\n                        nitrogen: ss.child('nitrogen').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      nitrogenAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        nitrogenAverage: nitrogenAverage\n                      });\n                    });\n                    console.log(nitrogenAverage);\n\n                    if (nitrogenAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (nitrogenAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var nitrogenData = [];\n\n                      for (var i = 0; i < nitrogenAverage.length; i++) {\n                        //push send this data to the back of the chartData variable above.\n                        nitrogenData.push(parseFloat(nitrogenAverage[i].nitrogen));\n                      }\n\n                      var nitrogenReverse2 = nitrogenAverage.reverse();\n                      var nitrogenGraph = [{\n                        nitrogen: nitrogenReverse2[0].nitrogen,\n                        date: nitrogenReverse2[0].date\n                      }];\n                      console.log(nitrogenGraph);\n                      var nitrogenReverse = nitrogenData.reverse();\n                      var nitrogen = ([nitrogenReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(nitrogenReverse[0]);\n\n                      _this2.setState({\n                        nitrogenLatest: nitrogenReverse[0],\n                        nitrogenAvg: nitrogen,\n                        nitrogenGraph: nitrogenGraph\n                      });\n                    }\n\n                    if (nitrogenAverage.length == 2) {\n                      var _nitrogenData = [];\n\n                      for (var _i = 0; _i < nitrogenAverage.length; _i++) {\n                        //push send this data to the back of the chartData variable above.\n                        _nitrogenData.push(parseFloat(nitrogenAverage[_i].nitrogen));\n                      }\n\n                      var _nitrogenReverse = nitrogenAverage.reverse();\n\n                      var _nitrogenGraph = [{\n                        nitrogen: _nitrogenReverse[1].nitrogen,\n                        date: _nitrogenReverse[1].date\n                      }, {\n                        nitrogen: _nitrogenReverse[0].nitrogen,\n                        date: _nitrogenReverse[0].date\n                      }];\n                      console.log(_nitrogenGraph);\n\n                      var _nitrogenReverse2 = _nitrogenData.reverse();\n\n                      var _nitrogen = ([_nitrogenReverse2[0], _nitrogenReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_nitrogenReverse2[0]);\n\n                      _this2.setState({\n                        nitrogenLatest: _nitrogenReverse2[0],\n                        nitrogenAvg: _nitrogen,\n                        nitrogenGraph: _nitrogenGraph\n                      });\n                    }\n\n                    if (nitrogenAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _nitrogenData2 = [];\n\n                      for (var _i2 = 0; _i2 < nitrogenAverage.length; _i2++) {\n                        //push send this data to the back of the chartData variable above.\n                        _nitrogenData2.push(parseFloat(nitrogenAverage[_i2].nitrogen));\n                      }\n\n                      var _nitrogenReverse3 = nitrogenAverage.reverse();\n\n                      var _nitrogenGraph2 = [{\n                        nitrogen: _nitrogenReverse3[2].nitrogen,\n                        date: _nitrogenReverse3[2].date\n                      }, {\n                        nitrogen: _nitrogenReverse3[1].nitrogen,\n                        date: _nitrogenReverse3[1].date\n                      }, {\n                        nitrogen: _nitrogenReverse3[0].nitrogen,\n                        date: _nitrogenReverse3[0].date\n                      }];\n                      console.log(_nitrogenGraph2);\n\n                      var _nitrogenReverse4 = _nitrogenData2.reverse();\n\n                      var _nitrogen2 = ([_nitrogenReverse4[0], _nitrogenReverse4[1], _nitrogenReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_nitrogenReverse4[0]);\n\n                      _this2.setState({\n                        nitrogenLatest: _nitrogenReverse4[0],\n                        nitrogenAvg: _nitrogen2,\n                        nitrogenGraph: _nitrogenGraph2\n                      });\n                    }\n\n                    snapshot.forEach(function (ss) {\n                      phosphorusAverage.push({\n                        phosphorus: ss.child('phosphorus').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      phosphorusAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        phosphorusAverage: phosphorusAverage\n                      });\n                    });\n                    console.log(phosphorusAverage);\n\n                    if (phosphorusAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (phosphorusAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var phosphorusData = [];\n\n                      for (var _i3 = 0; _i3 < phosphorusAverage.length; _i3++) {\n                        //push send this data to the back of the chartData variable above.\n                        phosphorusData.push(parseFloat(phosphorusAverage[_i3].phosphorus));\n                      }\n\n                      var phosphorusReverse2 = phosphorusAverage.reverse();\n                      var phosphorusGraph = [{\n                        phosphorus: phosphorusReverse2[0].phosphorus,\n                        date: phosphorusReverse2[0].date\n                      }];\n                      console.log(phosphorusGraph);\n                      var phosphorusReverse = phosphorusData.reverse();\n                      var phosphorus = ([phosphorusReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(phosphorusReverse[0]);\n\n                      _this2.setState({\n                        phosphorusLatest: phosphorusReverse[0],\n                        phosphorusAvg: phosphorus,\n                        phosphorusGraph: phosphorusGraph\n                      });\n                    }\n\n                    if (phosphorusAverage.length == 2) {\n                      var _phosphorusData = [];\n\n                      for (var _i4 = 0; _i4 < phosphorusAverage.length; _i4++) {\n                        //push send this data to the back of the chartData variable above.\n                        _phosphorusData.push(parseFloat(phosphorusAverage[_i4].phosphorus));\n                      }\n\n                      var _phosphorusReverse = phosphorusAverage.reverse();\n\n                      var _phosphorusGraph = [{\n                        phosphorus: _phosphorusReverse[1].phosphorus,\n                        date: _phosphorusReverse[1].date\n                      }, {\n                        phosphorus: _phosphorusReverse[0].phosphorus,\n                        date: _phosphorusReverse[0].date\n                      }];\n                      console.log(_phosphorusGraph);\n\n                      var _phosphorusReverse2 = _phosphorusData.reverse();\n\n                      var _phosphorus = ([_phosphorusReverse2[0], _phosphorusReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_phosphorusReverse2[0]);\n\n                      _this2.setState({\n                        phosphorusLatest: _phosphorusReverse2[0],\n                        phosphorusAvg: _phosphorus,\n                        phosphorusGraph: _phosphorusGraph\n                      });\n                    }\n\n                    if (phosphorusAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _phosphorusData2 = [];\n\n                      for (var _i5 = 0; _i5 < phosphorusAverage.length; _i5++) {\n                        //push send this data to the back of the chartData variable above.\n                        _phosphorusData2.push(parseFloat(phosphorusAverage[_i5].phosphorus));\n                      }\n\n                      var _phosphorusReverse3 = phosphorusAverage.reverse();\n\n                      var _phosphorusGraph2 = [{\n                        phosphorus: _phosphorusReverse3[2].phosphorus,\n                        date: _phosphorusReverse3[2].date\n                      }, {\n                        phosphorus: _phosphorusReverse3[1].phosphorus,\n                        date: _phosphorusReverse3[1].date\n                      }, {\n                        phosphorus: _phosphorusReverse3[0].phosphorus,\n                        date: _phosphorusReverse3[0].date\n                      }];\n                      console.log(_phosphorusGraph2);\n\n                      var _phosphorusReverse4 = _phosphorusData2.reverse();\n\n                      var _phosphorus2 = ([_phosphorusReverse4[0], _phosphorusReverse4[1], _phosphorusReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_phosphorusReverse4[0]);\n\n                      _this2.setState({\n                        phosphorusLatest: _phosphorusReverse4[0],\n                        phosphorusAvg: _phosphorus2,\n                        phosphorusGraph: _phosphorusGraph2\n                      });\n                    }\n\n                    snapshot.forEach(function (ss) {\n                      dissolvedOxygenAverage.push({\n                        do: ss.child('do').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      dissolvedOxygenAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        dissolvedOxygenAverage: dissolvedOxygenAverage\n                      });\n                    });\n                    console.log(dissolvedOxygenAverage);\n\n                    if (dissolvedOxygenAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (dissolvedOxygenAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var dissolvedoxygenData = [];\n\n                      for (var _i6 = 0; _i6 < dissolvedOxygenAverage.length; _i6++) {\n                        //push send this data to the back of the chartData variable above.\n                        dissolvedoxygenData.push(parseFloat(dissolvedOxygenAverage[_i6].do));\n                      }\n\n                      var dissolvedOxygenReverse2 = dissolvedOxygenAverage.reverse();\n                      var dissolvedOxygenGraph = [{\n                        do: dissolvedOxygenReverse2[0].do,\n                        date: dissolvedOxygenReverse2[0].date\n                      }];\n                      console.log(dissolvedOxygenGraph);\n                      var dissolvedOxygenReverse = dissolvedoxygenData.reverse();\n                      var dissolvedOxygen = ([dissolvedOxygenReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(dissolvedOxygenReverse[0]);\n\n                      _this2.setState({\n                        dissolvedOxygenLatest: dissolvedOxygenReverse[0],\n                        dissolvedOxygenAvg: dissolvedOxygen,\n                        dissolvedOxygenGraph: dissolvedOxygenGraph\n                      });\n                    }\n\n                    if (dissolvedOxygenAverage.length == 2) {\n                      console.log(\"do two things\");\n                      var _dissolvedoxygenData = [];\n\n                      for (var _i7 = 0; _i7 < dissolvedOxygenAverage.length; _i7++) {\n                        //push send this data to the back of the chartData variable above.\n                        _dissolvedoxygenData.push(parseFloat(dissolvedOxygenAverage[_i7].do));\n                      }\n\n                      var _dissolvedOxygenReverse = dissolvedOxygenAverage.reverse();\n\n                      var _dissolvedOxygenGraph = [{\n                        do: _dissolvedOxygenReverse[0].do,\n                        date: _dissolvedOxygenReverse[0].date\n                      }, {\n                        do: _dissolvedOxygenReverse[1].do,\n                        date: _dissolvedOxygenReverse[1].date\n                      }];\n                      console.log(_dissolvedOxygenGraph);\n\n                      var _dissolvedOxygenReverse2 = _dissolvedoxygenData.reverse();\n\n                      var _dissolvedOxygen = ([_dissolvedOxygenReverse2[0], _dissolvedOxygenReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_dissolvedOxygenReverse2[0]);\n\n                      _this2.setState({\n                        dissolvedOxygenLatest: _dissolvedOxygenReverse2[0],\n                        dissolvedOxygenAvg: _dissolvedOxygen,\n                        dissolvedOxygenGraph: _dissolvedOxygenGraph\n                      });\n                    }\n\n                    if (phosphorusAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _dissolvedoxygenData2 = [];\n\n                      for (var _i8 = 0; _i8 < dissolvedOxygenAverage.length; _i8++) {\n                        //push send this data to the back of the chartData variable above.\n                        _dissolvedoxygenData2.push(parseFloat(dissolvedOxygenAverage[_i8].do));\n                      }\n\n                      var _dissolvedOxygenReverse3 = dissolvedOxygenAverage.reverse();\n\n                      var _dissolvedOxygenGraph2 = [{\n                        do: _dissolvedOxygenReverse3[0].do,\n                        date: _dissolvedOxygenReverse3[0].date\n                      }, {\n                        do: _dissolvedOxygenReverse3[1].do,\n                        date: _dissolvedOxygenReverse3[1].date\n                      }, {\n                        do: _dissolvedOxygenReverse3[2].do,\n                        date: _dissolvedOxygenReverse3[2].date\n                      }];\n                      console.log(_dissolvedOxygenGraph2);\n\n                      var _dissolvedOxygenReverse4 = _dissolvedoxygenData2.reverse();\n\n                      var _dissolvedOxygen2 = ([_dissolvedOxygenReverse4[0], _dissolvedOxygenReverse4[1], _dissolvedOxygenReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_dissolvedOxygenReverse4[0]);\n\n                      _this2.setState({\n                        dissolvedOxygenLatest: _dissolvedOxygenReverse4[0],\n                        dissolvedOxygenAvg: _dissolvedOxygen2,\n                        dissolvedOxygenGraph: _dissolvedOxygenGraph2\n                      });\n                    }\n\n                    snapshot.forEach(function (ss) {\n                      salinityAverage.push({\n                        salinity: ss.child('salinity').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      salinityAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        salinityAverage: salinityAverage\n                      });\n                    });\n                    console.log(salinityAverage);\n\n                    if (salinityAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (salinityAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var salinityData = [];\n\n                      for (var _i9 = 0; _i9 < salinityAverage.length; _i9++) {\n                        //push send this data to the back of the chartData variable above.\n                        salinityData.push(parseFloat(salinityAverage[_i9].salinity));\n                      }\n\n                      var salinityReverse2 = salinityAverage.reverse();\n                      var salinityGraph = [{\n                        salinity: salinityReverse2[0].salinity,\n                        date: salinityReverse2[0].date\n                      }];\n                      console.log(salinityGraph);\n                      var salinityReverse = salinityData.reverse();\n                      var salinity = ([salinityReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(salinityReverse[0]);\n\n                      _this2.setState({\n                        salinityLatest: salinityReverse[0],\n                        salinityAvg: salinity,\n                        salinityGraph: salinityGraph\n                      });\n                    }\n\n                    if (salinityAverage.length == 2) {\n                      var _salinityData = [];\n\n                      for (var _i10 = 0; _i10 < salinityAverage.length; _i10++) {\n                        //push send this data to the back of the chartData variable above.\n                        _salinityData.push(parseFloat(salinityAverage[_i10].salinity));\n                      }\n\n                      var _salinityReverse = salinityAverage.reverse();\n\n                      var _salinityGraph = [{\n                        salinity: _salinityReverse[1].salinity,\n                        date: _salinityReverse[1].date\n                      }, {\n                        salinity: _salinityReverse[0].salinity,\n                        date: _salinityReverse[0].date\n                      }];\n                      console.log(_salinityGraph);\n\n                      var _salinityReverse2 = _salinityData.reverse();\n\n                      var _salinity = ([_salinityReverse2[0], _salinityReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_salinityReverse2[0]);\n\n                      _this2.setState({\n                        salinityLatest: _salinityReverse2[0],\n                        salinityAvg: _salinity,\n                        salinityGraph: _salinityGraph\n                      });\n                    }\n\n                    if (salinityAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _salinityData2 = [];\n\n                      for (var _i11 = 0; _i11 < salinityAverage.length; _i11++) {\n                        //push send this data to the back of the chartData variable above.\n                        _salinityData2.push(parseFloat(salinityAverage[_i11].salinity));\n                      }\n\n                      var _salinityReverse3 = salinityAverage.reverse();\n\n                      var _salinityGraph2 = [{\n                        salinity: _salinityReverse3[2].salinity,\n                        date: _salinityReverse3[2].date\n                      }, {\n                        salinity: _salinityReverse3[1].salinity,\n                        date: _salinityReverse3[1].date\n                      }, {\n                        salinity: _salinityReverse3[0].salinity,\n                        date: _salinityReverse3[0].date\n                      }];\n                      console.log(_salinityGraph2);\n\n                      var _salinityReverse4 = _salinityData2.reverse();\n\n                      var _salinity2 = ([_salinityReverse4[0], _salinityReverse4[1], _salinityReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_salinityReverse4[0]);\n\n                      _this2.setState({\n                        salinityLatest: _salinityReverse4[0],\n                        salinityAvg: _salinity2,\n                        salinityGraph: _salinityGraph2\n                      });\n                    }\n\n                    snapshot.forEach(function (ss) {\n                      turbidityAverage.push({\n                        turbidity: ss.child('turbidity').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      turbidityAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        turbidityAverage: turbidityAverage\n                      });\n                    });\n                    console.log(turbidityAverage);\n\n                    if (turbidityAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (turbidityAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var turbidityData = [];\n\n                      for (var _i12 = 0; _i12 < turbidityAverage.length; _i12++) {\n                        //push send this data to the back of the chartData variable above.\n                        turbidityData.push(parseFloat(turbidityAverage[_i12].turbidity));\n                      }\n\n                      var turbidityReverse2 = turbidityAverage.reverse();\n                      var turbidityGraph = [{\n                        turbidity: turbidityReverse2[0].turbidity,\n                        date: turbidityReverse2[0].date\n                      }];\n                      console.log(turbidityGraph);\n                      var turbidityReverse = turbidityData.reverse();\n                      var turbidity = ([turbidityReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(turbidityReverse[0]);\n\n                      _this2.setState({\n                        turbidityLatest: turbidityReverse[0],\n                        turbidityAvg: turbidity,\n                        turbidityGraph: turbidityGraph\n                      });\n                    }\n\n                    if (turbidityAverage.length == 2) {\n                      var _turbidityData = [];\n\n                      for (var _i13 = 0; _i13 < turbidityAverage.length; _i13++) {\n                        //push send this data to the back of the chartData variable above.\n                        _turbidityData.push(parseFloat(turbidityAverage[_i13].turbidity));\n                      }\n\n                      var _turbidityReverse = turbidityAverage.reverse();\n\n                      var _turbidityGraph = [{\n                        turbidity: _turbidityReverse[1].turbidity,\n                        date: _turbidityReverse[1].date\n                      }, {\n                        turbidity: _turbidityReverse[0].turbidity,\n                        date: _turbidityReverse[0].date\n                      }];\n                      console.log(_turbidityGraph);\n\n                      var _turbidityReverse2 = _turbidityData.reverse();\n\n                      var _turbidity = ([_turbidityReverse2[0], _turbidityReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_turbidityReverse2[0]);\n\n                      _this2.setState({\n                        turbidityLatest: _turbidityReverse2[0],\n                        turbidityAvg: _turbidity,\n                        turbidityGraph: _turbidityGraph\n                      });\n                    }\n\n                    if (turbidityAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _turbidityData2 = [];\n\n                      for (var _i14 = 0; _i14 < turbidityAverage.length; _i14++) {\n                        //push send this data to the back of the chartData variable above.\n                        _turbidityData2.push(parseFloat(turbidityAverage[_i14].turbidity));\n                      }\n\n                      var _turbidityReverse3 = turbidityAverage.reverse();\n\n                      var _turbidityGraph2 = [{\n                        turbidity: _turbidityReverse3[2].turbidity,\n                        date: _turbidityReverse3[2].date\n                      }, {\n                        turbidity: _turbidityReverse3[1].turbidity,\n                        date: _turbidityReverse3[1].date\n                      }, {\n                        turbidity: _turbidityReverse3[0].turbidity,\n                        date: _turbidityReverse3[0].date\n                      }];\n                      console.log(_turbidityGraph2);\n\n                      var _turbidityReverse4 = _turbidityData2.reverse();\n\n                      var _turbidity2 = ([_turbidityReverse4[0], _turbidityReverse4[1], _turbidityReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_turbidityReverse4[0]);\n\n                      _this2.setState({\n                        turbidityLatest: _turbidityReverse4[0],\n                        turbidityAvg: _turbidity2,\n                        turbidityGraph: _turbidityGraph2\n                      });\n                    }\n\n                    snapshot.forEach(function (ss) {\n                      tssAverage.push({\n                        tss: ss.child('tss').val(),\n                        date: ss.child('sampleDate').val()\n                      });\n                      tssAverage.sort(function (a, b) {\n                        if (a.date === b.date) {\n                          return 0;\n                        }\n\n                        return a.date > b.date ? 1 : -1;\n                      });\n\n                      _this2.setState({\n                        tssAverage: tssAverage\n                      });\n                    });\n                    console.log(tssAverage);\n\n                    if (tssAverage.length == 0) {\n                      console.log(\"do nothing\");\n                    }\n\n                    if (tssAverage.length == 1) {\n                      console.log(\"do one thing\");\n                      var tssData = [];\n\n                      for (var _i15 = 0; _i15 < tssAverage.length; _i15++) {\n                        //push send this data to the back of the chartData variable above.\n                        tssData.push(parseFloat(tssAverage[_i15].tss));\n                      }\n\n                      var tssReverse2 = tssAverage.reverse();\n                      var tssGraph = [{\n                        tss: tssReverse2[0].tss,\n                        date: tssReverse2[0].date\n                      }];\n                      console.log(tssGraph);\n                      var tssReverse = tssData.reverse();\n                      var tss = ([tssReverse[0]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 1).toFixed(2);\n                      console.log(tssReverse[0]);\n\n                      _this2.setState({\n                        tssLatest: tssReverse[0],\n                        tssAvg: tss,\n                        tssGraph: tssGraph\n                      });\n                    }\n\n                    if (tssAverage.length == 2) {\n                      var _tssData = [];\n\n                      for (var _i16 = 0; _i16 < tssAverage.length; _i16++) {\n                        //push send this data to the back of the chartData variable above.\n                        _tssData.push(parseFloat(tssAverage[_i16].tss));\n                      }\n\n                      var _tssReverse = tssAverage.reverse();\n\n                      var _tssGraph = [{\n                        tss: _tssReverse[1].tss,\n                        date: _tssReverse[1].date\n                      }, {\n                        tss: _tssReverse[0].tss,\n                        date: _tssReverse[0].date\n                      }];\n                      console.log(_tssGraph);\n\n                      var _tssReverse2 = _tssData.reverse();\n\n                      var _tss = ([_tssReverse2[0], _tssReverse2[1]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 2).toFixed(2);\n\n                      console.log(_tssReverse2[0]);\n\n                      _this2.setState({\n                        tssLatest: _tssReverse2[0],\n                        tssAvg: _tss,\n                        tssGraph: _tssGraph\n                      });\n                    }\n\n                    if (tssAverage.length > 2) {\n                      console.log(\"do one three things or more\");\n                      var _tssData2 = [];\n\n                      for (var _i17 = 0; _i17 < tssAverage.length; _i17++) {\n                        //push send this data to the back of the chartData variable above.\n                        _tssData2.push(parseFloat(tssAverage[_i17].tss));\n                      }\n\n                      var _tssReverse3 = tssAverage.reverse();\n\n                      var _tssGraph2 = [{\n                        tss: _tssReverse3[2].tss,\n                        date: _tssReverse3[2].date\n                      }, {\n                        tss: _tssReverse3[1].tss,\n                        date: _tssReverse3[1].date\n                      }, {\n                        tss: _tssReverse3[0].tss,\n                        date: _tssReverse3[0].date\n                      }];\n                      console.log(_tssGraph2);\n\n                      var _tssReverse4 = _tssData2.reverse();\n\n                      var _tss2 = ([_tssReverse4[0], _tssReverse4[1], _tssReverse4[2]].reduce(function (a, b) {\n                        return a + b;\n                      }, 0) / 3).toFixed(2);\n\n                      console.log(_tssReverse4[0]);\n\n                      _this2.setState({\n                        tssLatest: _tssReverse4[0],\n                        tssAvg: _tss2,\n                        tssGraph: _tssGraph2\n                      });\n                    }\n                  });\n                  var profileRef = fire.database().ref(\"profileInformation/\".concat(user.uid));\n                  profileRef.on('value', function (snapshot) {\n                    var that = _this2;\n\n                    _this2.setState({\n                      lakeName: snapshot.child('lakeName').val(),\n                      locationCity: snapshot.child('locationCity').val(),\n                      locationState: snapshot.child('locationState').val(),\n                      managementContact: snapshot.child('managementContact').val(),\n                      hoaContact: snapshot.child('hoaContact').val(),\n                      managementContactNumber: snapshot.child('managementContactNumber').val(),\n                      hoaContactNumber: snapshot.child('hoaContactNumber').val(),\n                      latitude: snapshot.child('latitude').val(),\n                      longitude: snapshot.child('longitude').val(),\n                      center: {\n                        lat: snapshot.child('latitude').val(),\n                        lng: snapshot.child('longitude').val()\n                      }\n                    });\n\n                    console.log(_this2.state.center);\n                    var myLat = \"\".concat(_this2.state.latitude);\n                    var myLon = \"\".concat(_this2.state.longitude);\n                    var API_WEATHER = \"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(myLat, \"&lon=\").concat(myLon, \"&units=imperial&appid=\", '30573b68170d7f4400c7ac9c1c671ccf');\n                    fetch(API_WEATHER).then(function (response) {\n                      return response.json();\n                    }).then(function (responseJson) {\n                      console.log(responseJson);\n                      console.log(responseJson.weather);\n                      console.log(responseJson.name);\n\n                      _this2.setState({\n                        isLoading: false,\n                        dataSource: responseJson,\n                        currentCity: _this2.state.lakeName,\n                        currentTemp: responseJson.main.temp,\n                        currentIcon: 'http://openweathermap.org/img/w/' + responseJson.weather[0].icon + '.png',\n                        currentDescription: responseJson.weather[0].main,\n                        currentHumidity: responseJson.main.humidity\n                      });\n                    }).catch(function (error) {\n                      console.log(error);\n                    });\n                  });\n                  var colorsRef = fire.database().ref(\"colors/\".concat(user.uid));\n                  colorsRef.on('value', function (snapshot) {\n                    var colorList = snapshot.val();\n                    console.log(colorList);\n\n                    _this2.setState({\n                      tempColor: snapshot.child('tempColor').val()\n                    });\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"toggleNitrogen\",\n    value: function toggleNitrogen(event) {\n      this.setState({\n        checkboxState: !this.state.checkboxState\n      });\n      var checkboxState = this.state.checkboxState;\n\n      if (checkboxState) {\n        this.setState({\n          nitrogenPlot: ''\n        });\n      } else {\n        this.setState({\n          nitrogenPlot: 'nitrogen'\n        });\n      }\n    }\n  }, {\n    key: \"togglePhosphorus\",\n    value: function togglePhosphorus(event) {\n      this.setState({\n        checkboxStatephosphorus: !this.state.checkboxStatephosphorus\n      });\n      var checkboxState = this.state.checkboxStatephosphorus;\n\n      if (checkboxState) {\n        this.setState({\n          phosphorusPlot: ''\n        });\n      } else {\n        this.setState({\n          phosphorusPlot: 'phosphorus'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTemp\",\n    value: function toggleTemp(event) {\n      this.setState({\n        checkboxStatenitrogen: !this.state.checkboxStatenitrogen\n      });\n      var checkboxState = this.state.checkboxStatenitrogen;\n\n      if (checkboxState) {\n        this.setState({\n          tempPlot: ''\n        });\n      } else {\n        this.setState({\n          tempPlot: 'temp'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTDS\",\n    value: function toggleTDS(event) {\n      this.setState({\n        checkboxStatetds: !this.state.checkboxStatetds\n      });\n      var checkboxState = this.state.checkboxStatetds;\n\n      if (checkboxState) {\n        this.setState({\n          tdsPlot: ''\n        });\n      } else {\n        this.setState({\n          tdsPlot: 'tds'\n        });\n      }\n    }\n  }, {\n    key: \"togglepH\",\n    value: function togglepH(event) {\n      this.setState({\n        checkboxStatepH: !this.state.checkboxStatepH\n      });\n      var checkboxState = this.state.checkboxStatepH;\n\n      if (checkboxState) {\n        this.setState({\n          pHPlot: ''\n        });\n      } else {\n        this.setState({\n          pHPlot: 'pH'\n        });\n      }\n    }\n  }, {\n    key: \"toggletss\",\n    value: function toggletss(event) {\n      this.setState({\n        checkboxStatetss: !this.state.checkboxStatetss\n      });\n      var checkboxState = this.state.checkboxStatetss;\n\n      if (checkboxState) {\n        this.setState({\n          tssPlot: ''\n        });\n      } else {\n        this.setState({\n          tssPlot: 'tss'\n        });\n      }\n    }\n  }, {\n    key: \"togglesalinity\",\n    value: function togglesalinity(event) {\n      this.setState({\n        checkboxStatesalinity: !this.state.checkboxStatesalinity\n      });\n      var checkboxState = this.state.checkboxStatesalinity;\n\n      if (checkboxState) {\n        this.setState({\n          salinityPlot: ''\n        });\n      } else {\n        this.setState({\n          salinityPlot: 'salinity'\n        });\n      }\n    }\n  }, {\n    key: \"toggleHardness\",\n    value: function toggleHardness(event) {\n      this.setState({\n        checkboxStatehardness: !this.state.checkboxStatehardness\n      });\n      var checkboxState = this.state.checkboxStatehardness;\n\n      if (checkboxState) {\n        this.setState({\n          totalHardnessPlot: ''\n        });\n      } else {\n        this.setState({\n          totalHardnessPlot: 'totalHardness'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTurbidity\",\n    value: function toggleTurbidity(event) {\n      this.setState({\n        checkboxStateturbidity: !this.state.checkboxStateturbidity\n      });\n      var checkboxState = this.state.checkboxStateturbidity;\n\n      if (checkboxState) {\n        this.setState({\n          turbidityPlot: ''\n        });\n      } else {\n        this.setState({\n          turbidityPlot: 'turbidity'\n        });\n      }\n    }\n  }, {\n    key: \"toggleDO\",\n    value: function toggleDO(event) {\n      this.setState({\n        checkboxStatedo: !this.state.checkboxStatedo\n      });\n      var checkboxState = this.state.checkboxStatedo;\n\n      if (checkboxState) {\n        this.setState({\n          doPlot: ''\n        });\n      } else {\n        this.setState({\n          doPlot: 'do'\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"getLocation\",\n    value: function getLocation() {\n      var _this3 = this;\n\n      // Get the current position of the user\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this3.setState(function (prevState) {\n          return {\n            latitude: 30,\n            longitude: 20\n          };\n        }, function () {\n          _this3.getWeather();\n        });\n      }, function (error) {\n        return _this3.setState({\n          weather: error.message\n        });\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var doCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1121\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleDO.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127\n        },\n        __self: this\n      }, \"DO\"));\n      var nitrogenCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        inline: true,\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleNitrogen.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139\n        },\n        __self: this\n      }, \"Nitrogen\"));\n      var phosphorusCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglePhosphorus.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144\n        },\n        __self: this\n      }, \"Phosphorus\"));\n      var tempCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTemp.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1149\n        },\n        __self: this\n      }, \"Temperature\"));\n      var tdsCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTDS.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154\n        },\n        __self: this\n      }, \"TDS\"));\n      var pHCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglepH.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159\n        },\n        __self: this\n      }, \"pH\"));\n      var tssCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggletss.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164\n        },\n        __self: this\n      }, \"TSS\"));\n      var salinityCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglesalinity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169\n        },\n        __self: this\n      }, \"Salinity\"));\n      var hardnessCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleHardness.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174\n        },\n        __self: this\n      }, \"Total Hardness\"));\n      var turbidityCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1178\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTurbidity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1178\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1179\n        },\n        __self: this\n      }, \"Turbidity\"));\n      var popover = {\n        position: 'absolute',\n        zIndex: '2'\n      };\n      var cover = {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      };\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1201\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209\n        },\n        __self: this\n      }, React.createElement(Radio.Group, {\n        size: \"small\",\n        value: this.state.timeFrame,\n        onChange: this.handleTimeFrameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210\n        },\n        __self: this\n      }, React.createElement(Radio.Button, {\n        value: \"three\",\n        onClick: this.threeMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1211\n        },\n        __self: this\n      }, \"3 Months\"), React.createElement(Radio.Button, {\n        value: \"six\",\n        onClick: this.sixMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1212\n        },\n        __self: this\n      }, \"6 Months\"), React.createElement(Radio.Button, {\n        value: \"twelve\",\n        onClick: this.twelveMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213\n        },\n        __self: this\n      }, \"12 Months\"), React.createElement(Radio.Button, {\n        value: \"All\",\n        onClick: this.allMonths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214\n        },\n        __self: this\n      }, \"All\"))), React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 10 / 3.0,\n        minHeight: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216\n        },\n        __self: this\n      }, React.createElement(ComposedChart, {\n        data: dataReverse,\n        syncId: \"anyId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1217\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1221\n        },\n        __self: this\n      }, React.createElement(Label, {\n        offset: 200,\n        position: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1221\n        },\n        __self: this\n      })), React.createElement(YAxis, {\n        hide: \"true\",\n        type: \"number\",\n        domain: [function (dataMin) {\n          return 0 - Math.abs(dataMin);\n        }, function (dataMax) {\n          return dataMax * 2;\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224\n        },\n        __self: this\n      }), React.createElement(\"defs\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1227\n        },\n        __self: this\n      }, data1.map(function (parameter) {\n        return React.createElement(\"linearGradient\", {\n          id: parameter.Sample_Item,\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1231\n          },\n          __self: this\n        }, React.createElement(\"stop\", {\n          offset: \"5%\",\n          stopColor: parameter.color,\n          stopOpacity: 0.3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1232\n          },\n          __self: this\n        }), React.createElement(\"stop\", {\n          offset: \"95%\",\n          stopColor: parameter.color,\n          stopOpacity: 0.1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1233\n          },\n          __self: this\n        }));\n      })), data1.map(function (parameter) {\n        if (parameter.dataType == 'Bar') {\n          console.log('something 1');\n          var CustomTag = Bar;\n          return React.createElement(CustomTag, {\n            type: \"monotone\",\n            dataKey: parameter.Sample_Item,\n            fillOpacity: 1,\n            strokeWidth: 2,\n            stroke: parameter.color,\n            fill: \"url(#\" + parameter.Sample_Item + \")\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1250\n            },\n            __self: this\n          }, React.createElement(LabelList, {\n            dataKey: parameter.Sample_Item,\n            position: \"top\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1250\n            },\n            __self: this\n          }));\n        }\n\n        if (parameter.dataType == 'Line') {\n          console.log('something 2');\n          var _CustomTag = Line;\n          return React.createElement(_CustomTag, {\n            type: \"monotone\",\n            dataKey: parameter.Sample_Item,\n            fillOpacity: 1,\n            strokeWidth: 2,\n            stroke: parameter.color,\n            fill: \"url(#\" + parameter.Sample_Item + \")\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1257\n            },\n            __self: this\n          }, React.createElement(LabelList, {\n            dataKey: parameter.Sample_Item,\n            position: \"top\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1257\n            },\n            __self: this\n          }));\n        }\n\n        if (parameter.dataType == 'Area') {\n          console.log('something 3');\n          var _CustomTag2 = Area;\n          return React.createElement(_CustomTag2, {\n            type: \"monotone\",\n            dataKey: parameter.Sample_Item,\n            fillOpacity: 1,\n            strokeWidth: 2,\n            stroke: parameter.color,\n            fill: \"url(#\" + parameter.Sample_Item + \")\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1264\n            },\n            __self: this\n          }, React.createElement(LabelList, {\n            dataKey: parameter.Sample_Item,\n            position: \"top\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1264\n            },\n            __self: this\n          }));\n        }\n\n        if (parameter.dataType == 'Off') {\n          console.log('No graph');\n        }\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1283\n        },\n        __self: this\n      })))))), React.createElement(Row, {\n        style: {\n          paddingTop: '15px'\n        },\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1293\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: '100%'\n        },\n        bodyStyle: {\n          padding: \"0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1295\n        },\n        __self: this\n      }, React.createElement(Row, {\n        align: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1296\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          paddingTop: '25px',\n          paddingLeft: '20px',\n          fontSize: '24px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1297\n        },\n        __self: this\n      }, \"Water Quality\")), React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1299\n        },\n        __self: this\n      }, data1.map(function (parameter) {\n        return React.createElement(Col, {\n          xs: 24,\n          sm: 12,\n          md: 8,\n          lg: 8,\n          xl: 8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1306\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1307\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1308\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 4,\n          sm: 4,\n          md: 4,\n          lg: 4,\n          xl: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1309\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"up-circle\",\n          style: {\n            fontSize: '32px',\n            color: parameter.color\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1310\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 16,\n          sm: 16,\n          md: 16,\n          lg: 16,\n          xl: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1312\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          style: {\n            fontSize: '24px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1313\n          },\n          __self: this\n        }, parameter.Sample_Item))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1316\n          },\n          __self: this\n        }, React.createElement(ResponsiveContainer, {\n          width: \"100%\",\n          aspect: 6 / 3.0,\n          minHeight: 90,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1318\n          },\n          __self: this\n        }, React.createElement(ComposedChart, {\n          data: dataReverse,\n          syncId: \"anyId\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1320\n          },\n          __self: this\n        }, React.createElement(XAxis, {\n          dataKey: \"date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1323\n          },\n          __self: this\n        }, React.createElement(Label, {\n          offset: 200,\n          position: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1323\n          },\n          __self: this\n        })), React.createElement(YAxis, {\n          hide: \"true\",\n          type: \"number\",\n          domain: [function (dataMin) {\n            return 0 - Math.abs(dataMin);\n          }, function (dataMax) {\n            return dataMax * 2;\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1325\n          },\n          __self: this\n        }), React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1326\n          },\n          __self: this\n        }), React.createElement(Line, {\n          type: \"monotone\",\n          dataKey: parameter.Sample_Item,\n          fillOpacity: 1,\n          strokeWidth: 2,\n          stroke: parameter.color,\n          fill: \"url(#\" + parameter.Sample_Item + \")\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1328\n          },\n          __self: this\n        }))))));\n      }))))), React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1363\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1364\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1365\n        },\n        __self: this\n      }, this.state.currentCity), React.createElement(\"img\", {\n        style: {\n          width: '60px',\n          height: '60px'\n        },\n        src: this.state.currentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1366\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1367\n        },\n        __self: this\n      }, this.state.currentDescription), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1368\n        },\n        __self: this\n      }, \"Temperature: \", this.state.currentTemp, \" F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1369\n        },\n        __self: this\n      }, \"Humidity: \", this.state.currentHumidity, \"%\"))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 16,\n        lg: 16,\n        xl: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1374\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          textAlign: 'left'\n        },\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1375\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '29vh',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1376\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyAqe1Z8I94AcnNb3VsOam1tnUd_8WdubV4'\n        },\n        center: this.state.center,\n        defaultZoom: this.props.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1377\n        },\n        __self: this\n      }, React.createElement(AnyReactComponent, {\n        lat: this.state.latitude,\n        lng: this.state.longitude,\n        text: this.state.lakeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1382\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.defaultProps = {\n  center: {\n    lat: 37.987636425563075,\n    lng: -121.63235758701154\n  },\n  zoom: 13\n};\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/dashboard.jsx"],"names":["React","Component","Navbar","Nav","FormGroup","Checkbox","Grid","PageHeader","Jumbotron","NavItem","Modal","Panel","Link","ReactDOM","FileSaver","jsPDF","domtoimage","fileDownload","Request","firebase","fire","ChromePicker","GoogleMapReact","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiBrush","TiArrowSortedUp","TiPencil","TiTrash","LineChart","LabelList","ResponsiveContainer","BarChart","Bar","Surface","ReferenceLine","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Row","Col","Tabs","Card","Drawer","Menu","Icon","Button","Layout","Carousel","AnyReactComponent","text","TabPane","tabListNoTitle","key","tab","Dashboard","props","imageFormatter","cell","row","handleClick","setState","displayColorPicker","state","handleClose","tempColorChange","color","console","log","removeAuthListener","auth","onAuthStateChanged","user","samplesRef","database","ref","uid","orderID","sample","tempColor","hex","set","onTabChange","type","weatherData","iconData","id","currentCity","currentTemp","currentIcon","currentDescription","currentHumidity","checkboxState","checkboxState1","checkboxStatenitrogen","checkboxStatephosphorus","checkboxStatetds","checkboxStatepH","checkboxStatetss","checkboxStatesalinity","checkboxStateconductivity","checkboxStatehardness","checkboxStateturbidity","checkboxStatedo","tempPlot","doPlot","conductivityPlot","tdsPlot","salinityPlot","pHPlot","turbidityPlot","nitrogenPlot","phosphorusPlot","totalHardnessPlot","tssPlot","samples","orders","orders2","dataList","filter","blobUrl","nitrogenAverage","nitrogenAvg","nitrogenLatest","nitrogenGraph","phosphorusAverage","phosphorusAvg","phosphorusGraph","phoshporusLatest","dissolvedOxygenAverage","dissolvedOxygenAvg","dissolvedOxygenGraph","dissolvedOxygenLatest","turbidityLatest","turbidityAverage","turbidityAvg","turbidityGraph","tssLatest","tssAverage","tssAvg","tssGraph","salinityLatest","salinityAverage","salinityAvg","salinityGraph","lat","lng","on","snapshot","val","orders3","newState","newState2","newState3","order","push","sampleDate","sampleTaker","temp","do","conductivity","tds","salinity","pH","turbidity","nitrogen","phosphorus","totalHardness","tss","sampleNotes","sort","a","b","forEach","ss","child","date","length","nitrogenData","i","parseFloat","nitrogenReverse2","reverse","nitrogenReverse","reduce","toFixed","phosphorusData","phosphorusReverse2","phosphorusReverse","phosphorusLatest","dissolvedoxygenData","dissolvedOxygenReverse2","dissolvedOxygenReverse","dissolvedOxygen","salinityData","salinityReverse2","salinityReverse","turbidityData","turbidityReverse2","turbidityReverse","tssData","tssReverse2","tssReverse","profileRef","that","lakeName","locationCity","locationState","managementContact","hoaContact","managementContactNumber","hoaContactNumber","latitude","longitude","center","myLat","myLon","API_WEATHER","fetch","then","response","json","responseJson","weather","name","isLoading","dataSource","main","icon","humidity","catch","error","colorsRef","colorList","event","preventDefault","navigator","geolocation","getCurrentPosition","position","prevState","getWeather","message","enableHighAccuracy","timeout","maximumAge","doCheckbox","toggleDO","bind","nitrogenCheckbox","toggleNitrogen","phosphorusCheckbox","togglePhosphorus","tempCheckbox","toggleTemp","tdsCheckbox","toggleTDS","pHCheckbox","togglepH","tssCheckbox","toggletss","salinityCheckbox","togglesalinity","hardnessCheckbox","toggleHardness","turbidityCheckbox","toggleTurbidity","popover","zIndex","cover","top","right","bottom","left","textAlign","width","timeFrame","handleTimeFrameChange","threeMonths","sixMonths","twelveMonths","allMonths","dataReverse","dataMin","Math","abs","dataMax","data1","map","parameter","Sample_Item","dataType","CustomTag","paddingTop","padding","paddingLeft","fontSize","height","zoom","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Navbar, Nav, FormGroup, Checkbox, Grid, PageHeader, Jumbotron, NavItem, Modal, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport FileSaver from 'file-saver';\nimport * as jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport Request from 'superagent';\n\nimport firebase from 'firebase';\nimport { fire } from '../fire';\nimport { ChromePicker } from 'react-color';\nimport GoogleMapReact from 'google-map-react';\n\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport { LineChart, LabelList, ResponsiveContainer, BarChart, Bar, Surface, ReferenceLine, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\nimport { Row, Col, Tabs, Card, Drawer, Menu, Icon, Button, Layout, Carousel } from 'antd';\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst TabPane = Tabs.TabPane;\n\nconst tabListNoTitle = [{\n  key: 'article',\n  tab: 'article',\n}, {\n  key: 'app',\n  tab: 'app',\n}, {\n  key: 'project',\n  tab: 'project',\n}];\n\nexport default class Dashboard extends Component {\n\n  static defaultProps = {\ncenter: {\n  lat: 37.987636425563075,\n  lng: -121.63235758701154\n},\nzoom: 13\n};\n\n\n\n\n  constructor(props) {\n      super(props);\n\n\n\n      this.state = {\n\n        //The data that goes into the table showing weather data\n        weatherData: [],\n        iconData: [],\n\n        id: '',\n        key: 1,\n\n        currentCity: '',\n        currentTemp: '',\n        currentIcon: '',\n        currentDescription: '',\n        currentHumidity: '',\n\n        //checkbox status\n        checkboxState: true,\n        checkboxState1: true,\n        checkboxStatenitrogen: true,\n        checkboxStatephosphorus: true,\n        checkboxStatetds: true,\n        checkboxStatepH: true,\n        checkboxStatetss: true,\n        checkboxStatesalinity: true,\n        checkboxStateconductivity: true,\n        checkboxStatehardness: true,\n        checkboxStateturbidity: true,\n        checkboxStatedo: true,\n\n        //these are for the graphs\n        tempPlot: 'temp',\n        doPlot: 'do',\n        conductivityPlot: 'conductivity',\n        tdsPlot: 'tds',\n        salinityPlot: 'salinity',\n        pHPlot: 'pH',\n        turbidityPlot: 'turbidity',\n        nitrogenPlot: 'nitrogen',\n        phosphorusPlot: 'phosphorus',\n        totalHardnessPlot: 'totalHardness',\n        tssPlot: 'tss',\n\n        //this is the object array for the table\n        samples: [],\n        orders: [],\n        orders2: [],\n        dataList: [],\n        filter: \"\",\n        blobUrl: null,\n\n        //averages\n        nitrogenAverage: [],\n        nitrogenAvg: '',\n        nitrogenLatest: '',\n        nitrogenGraph: [],\n        phosphorusAverage: [],\n        phosphorusAvg: '',\n        phosphorusGraph: [],\n        phoshporusLatest: '',\n        dissolvedOxygenAverage: [],\n        dissolvedOxygenAvg: '',\n        dissolvedOxygenGraph: [],\n        dissolvedOxygenLatest: '',\n\n        turbidityLatest: '',\n        turbidityAverage: [],\n        turbidityAvg: '',\n        turbidityGraph: [],\n        tssLatest: '',\n        tssAverage: [],\n        tssAvg: '',\n        tssGraph: [],\n        salinityLatest: '',\n        salinityAverage: [],\n        salinityAvg: '',\n        salinityGraph: [],\n\n        key: 'tab1',\n        noTitleKey: 'app',\n\n        //Inputs for Profile Page\n        lakeName: '',\n        locationCity: '',\n        locationState: '',\n        managementContact: '',\n        hoaContact: '',\n        managementContactNumber: '',\n        hoaContactNumber: '',\n        isLoading: true,\n        dataSource: [],\n        latitude: null,\n        longitude: null,\n        error: null,\n        weather: '',\n        center: {\n          lat: 37.987636425563075,\n          lng: -121.63235758701154\n        },\n\n\n\n      }\n\n    }\n\n\n\n\n\n\n    //async allows await to be used for API calls.  Without ASYNC an error will be called saying that await is a reserved word.\n\n    //ComponentDidMount runs over and over again\n\n  async componentDidMount() {\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n      samplesRef.on('value', (snapshot) => {\n\n\n        let dataList = snapshot.val();\n        let filter = [];\n        let orders = snapshot.val();\n\n        let orders2 = snapshot.val();\n        let orders3 = [snapshot.val()]\n        console.log(orders3);\n\n        let newState = [];\n        let newState2 = [];\n        let newState3 = [];\n\n        let nitrogenAverage = [];\n        let phosphorusAverage = [];\n        let dissolvedOxygenAverage = [];\n        let tssAverage = [];\n        let turbidityAverage = [];\n        let salinityAverage = [];\n\n\n\n\n\n\n\n      for (let order in orders) {\n        newState.push({\n          id: order,\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n          sampleNotes: orders[order].sampleNotes,\n        });\n        newState2.push({\n          id: order,\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n          sampleNotes: orders[order].sampleNotes,\n        });\n\n\n\n\n      }\n\n      newState2.sort(function(a, b) {\n\n        if (a.sampleDate === b.sampleDate) {\n          return 0;\n        }\n        return a.sampleDate > b.sampleDate ? 1 : -1;\n    });\n    newState.sort(function(a, b) {\n\n      if (b.sampleDate === a.sampleDate) {\n        return 0;\n      }\n      return b.sampleDate > a.sampleDate ? 1 : -1;\n  });\n\n\n\n      this.setState({\n        orders: newState,\n        orders2: newState2,\n        dataList: newState,\n        color: this.state.color,\n      });\n      console.log(orders2)\n\n      snapshot.forEach(ss => {\n          nitrogenAverage.push({nitrogen: ss.child('nitrogen').val(), date: ss.child('sampleDate').val()} );\n          nitrogenAverage.sort(function(a, b) {\n            if (a.date === b.date) {\n              return 0;\n            }\n            return a.date > b.date ? 1 : -1;\n        });\n          this.setState({\n            nitrogenAverage: (nitrogenAverage),\n          })\n        });\n        console.log(nitrogenAverage);\n        if (nitrogenAverage.length == 0) {\n          console.log(\"do nothing\")\n        }\n        if (nitrogenAverage.length == 1) {\n          console.log(\"do one thing\")\n          let nitrogenData = [];\n          for (let i=0; i < nitrogenAverage.length; i++) {\n          //push send this data to the back of the chartData variable above.\n          nitrogenData.push(parseFloat(nitrogenAverage[i].nitrogen));\n\n        }\n\n          let nitrogenReverse2 = nitrogenAverage.reverse();\n          let nitrogenGraph = ([{nitrogen: nitrogenReverse2[0].nitrogen, date: nitrogenReverse2[0].date} ]);\n          console.log(nitrogenGraph)\n\n          let nitrogenReverse = nitrogenData.reverse();\n          let nitrogen = ([nitrogenReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n          console.log(nitrogenReverse[0])\n          this.setState({\n            nitrogenLatest: nitrogenReverse[0],\n            nitrogenAvg: nitrogen,\n            nitrogenGraph: nitrogenGraph,\n          })\n        }\n        if (nitrogenAverage.length == 2) {\n          let nitrogenData = [];\n          for (let i=0; i < nitrogenAverage.length; i++) {\n          //push send this data to the back of the chartData variable above.\n          nitrogenData.push(parseFloat(nitrogenAverage[i].nitrogen));\n\n        }\n\n\n        let nitrogenReverse2 = nitrogenAverage.reverse();\n\n\n        let nitrogenGraph = ([{nitrogen: nitrogenReverse2[1].nitrogen, date: nitrogenReverse2[1].date}, {nitrogen: nitrogenReverse2[0].nitrogen, date: nitrogenReverse2[0].date} ]);\n        console.log(nitrogenGraph)\n\n\n\n\n          let nitrogenReverse = nitrogenData.reverse();\n          let nitrogen = ([nitrogenReverse[0], nitrogenReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n          console.log(nitrogenReverse[0])\n          this.setState({\n            nitrogenLatest: nitrogenReverse[0],\n            nitrogenAvg: nitrogen,\n            nitrogenGraph: nitrogenGraph,\n          })\n        }\n        if (nitrogenAverage.length > 2) {\n          console.log(\"do one three things or more\")\n          let nitrogenData = [];\n          for (let i=0; i < nitrogenAverage.length; i++) {\n          //push send this data to the back of the chartData variable above.\n          nitrogenData.push(parseFloat(nitrogenAverage[i].nitrogen));\n\n        }\n\n\n        let nitrogenReverse2 = nitrogenAverage.reverse();\n\n\n        let nitrogenGraph = ([{nitrogen: nitrogenReverse2[2].nitrogen, date: nitrogenReverse2[2].date}, {nitrogen: nitrogenReverse2[1].nitrogen, date: nitrogenReverse2[1].date}, {nitrogen: nitrogenReverse2[0].nitrogen, date: nitrogenReverse2[0].date} ]);\n        console.log(nitrogenGraph)\n\n        let nitrogenReverse = nitrogenData.reverse();\n        let nitrogen = ([nitrogenReverse[0], nitrogenReverse[1], nitrogenReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n        console.log(nitrogenReverse[0])\n        this.setState({\n          nitrogenLatest: nitrogenReverse[0],\n          nitrogenAvg: nitrogen,\n          nitrogenGraph: nitrogenGraph,\n        })\n        }\n        snapshot.forEach(ss => {\n            phosphorusAverage.push({phosphorus: ss.child('phosphorus').val(), date: ss.child('sampleDate').val()} );\n            phosphorusAverage.sort(function(a, b) {\n              if (a.date === b.date) {\n                return 0;\n              }\n              return a.date > b.date ? 1 : -1;\n          });\n            this.setState({\n              phosphorusAverage: (phosphorusAverage),\n            })\n          });\n          console.log(phosphorusAverage);\n          if (phosphorusAverage.length == 0) {\n            console.log(\"do nothing\")\n          }\n          if (phosphorusAverage.length == 1) {\n            console.log(\"do one thing\")\n            let phosphorusData = [];\n            for (let i=0; i < phosphorusAverage.length; i++) {\n            //push send this data to the back of the chartData variable above.\n            phosphorusData.push(parseFloat(phosphorusAverage[i].phosphorus));\n\n          }\n\n            let phosphorusReverse2 = phosphorusAverage.reverse();\n            let phosphorusGraph = ([{phosphorus: phosphorusReverse2[0].phosphorus, date: phosphorusReverse2[0].date} ]);\n            console.log(phosphorusGraph)\n\n            let phosphorusReverse = phosphorusData.reverse();\n            let phosphorus = ([phosphorusReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n            console.log(phosphorusReverse[0])\n            this.setState({\n              phosphorusLatest: phosphorusReverse[0],\n              phosphorusAvg: phosphorus,\n              phosphorusGraph: phosphorusGraph,\n            })\n          }\n          if (phosphorusAverage.length == 2) {\n            let phosphorusData = [];\n            for (let i=0; i < phosphorusAverage.length; i++) {\n            //push send this data to the back of the chartData variable above.\n            phosphorusData.push(parseFloat(phosphorusAverage[i].phosphorus));\n\n          }\n\n\n          let phosphorusReverse2 = phosphorusAverage.reverse();\n\n\n          let phosphorusGraph = ([{phosphorus: phosphorusReverse2[1].phosphorus, date: phosphorusReverse2[1].date}, {phosphorus: phosphorusReverse2[0].phosphorus, date: phosphorusReverse2[0].date} ]);\n          console.log(phosphorusGraph)\n\n\n\n\n            let phosphorusReverse = phosphorusData.reverse();\n            let phosphorus = ([phosphorusReverse[0], phosphorusReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n            console.log(phosphorusReverse[0])\n            this.setState({\n              phosphorusLatest: phosphorusReverse[0],\n              phosphorusAvg: phosphorus,\n              phosphorusGraph: phosphorusGraph,\n            })\n          }\n          if (phosphorusAverage.length > 2) {\n            console.log(\"do one three things or more\")\n            let phosphorusData = [];\n            for (let i=0; i < phosphorusAverage.length; i++) {\n            //push send this data to the back of the chartData variable above.\n            phosphorusData.push(parseFloat(phosphorusAverage[i].phosphorus));\n\n          }\n\n\n          let phosphorusReverse2 = phosphorusAverage.reverse();\n\n\n          let phosphorusGraph = ([{phosphorus: phosphorusReverse2[2].phosphorus, date: phosphorusReverse2[2].date}, {phosphorus: phosphorusReverse2[1].phosphorus, date: phosphorusReverse2[1].date}, {phosphorus: phosphorusReverse2[0].phosphorus, date: phosphorusReverse2[0].date} ]);\n          console.log(phosphorusGraph)\n\n          let phosphorusReverse = phosphorusData.reverse();\n          let phosphorus = ([phosphorusReverse[0], phosphorusReverse[1], phosphorusReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n          console.log(phosphorusReverse[0])\n          this.setState({\n            phosphorusLatest: phosphorusReverse[0],\n            phosphorusAvg: phosphorus,\n            phosphorusGraph: phosphorusGraph,\n          })\n          }\n\n          snapshot.forEach(ss => {\n              dissolvedOxygenAverage.push({do: ss.child('do').val(), date: ss.child('sampleDate').val()} );\n              dissolvedOxygenAverage.sort(function(a, b) {\n                if (a.date === b.date) {\n                  return 0;\n                }\n                return a.date > b.date ? 1 : -1;\n            });\n              this.setState({\n                dissolvedOxygenAverage: (dissolvedOxygenAverage),\n              })\n            });\n            console.log(dissolvedOxygenAverage);\n            if (dissolvedOxygenAverage.length == 0) {\n              console.log(\"do nothing\")\n            }\n            if (dissolvedOxygenAverage.length == 1) {\n              console.log(\"do one thing\")\n              let dissolvedoxygenData = [];\n              for (let i=0; i < dissolvedOxygenAverage.length; i++) {\n              //push send this data to the back of the chartData variable above.\n              dissolvedoxygenData.push(parseFloat(dissolvedOxygenAverage[i].do));\n\n            }\n\n              let dissolvedOxygenReverse2 = dissolvedOxygenAverage.reverse();\n              let dissolvedOxygenGraph = ([{do: dissolvedOxygenReverse2[0].do, date: dissolvedOxygenReverse2[0].date} ]);\n              console.log(dissolvedOxygenGraph)\n\n              let dissolvedOxygenReverse = dissolvedoxygenData.reverse();\n              let dissolvedOxygen = ([dissolvedOxygenReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n              console.log(dissolvedOxygenReverse[0])\n              this.setState({\n                dissolvedOxygenLatest: dissolvedOxygenReverse[0],\n                dissolvedOxygenAvg: dissolvedOxygen,\n                dissolvedOxygenGraph: dissolvedOxygenGraph,\n              })\n            }\n            if (dissolvedOxygenAverage.length == 2) {\n              console.log(\"do two things\")\n              let dissolvedoxygenData = [];\n              for (let i=0; i < dissolvedOxygenAverage.length; i++) {\n              //push send this data to the back of the chartData variable above.\n              dissolvedoxygenData.push(parseFloat(dissolvedOxygenAverage[i].do));\n\n            }\n\n              let dissolvedOxygenReverse2 = dissolvedOxygenAverage.reverse();\n              let dissolvedOxygenGraph = ([{do: dissolvedOxygenReverse2[0].do, date: dissolvedOxygenReverse2[0].date}, {do: dissolvedOxygenReverse2[1].do, date: dissolvedOxygenReverse2[1].date} ]);\n              console.log(dissolvedOxygenGraph)\n\n              let dissolvedOxygenReverse = dissolvedoxygenData.reverse();\n              let dissolvedOxygen = ([dissolvedOxygenReverse[0], dissolvedOxygenReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n              console.log(dissolvedOxygenReverse[0])\n              this.setState({\n                dissolvedOxygenLatest: dissolvedOxygenReverse[0],\n                dissolvedOxygenAvg: dissolvedOxygen,\n                dissolvedOxygenGraph: dissolvedOxygenGraph,\n              })\n            }\n            if (phosphorusAverage.length > 2) {\n              console.log(\"do one three things or more\")\n              let dissolvedoxygenData = [];\n              for (let i=0; i < dissolvedOxygenAverage.length; i++) {\n              //push send this data to the back of the chartData variable above.\n              dissolvedoxygenData.push(parseFloat(dissolvedOxygenAverage[i].do));\n\n            }\n\n              let dissolvedOxygenReverse2 = dissolvedOxygenAverage.reverse();\n              let dissolvedOxygenGraph = ([{do: dissolvedOxygenReverse2[0].do, date: dissolvedOxygenReverse2[0].date}, {do: dissolvedOxygenReverse2[1].do, date: dissolvedOxygenReverse2[1].date}, {do: dissolvedOxygenReverse2[2].do, date: dissolvedOxygenReverse2[2].date} ]);\n              console.log(dissolvedOxygenGraph)\n\n              let dissolvedOxygenReverse = dissolvedoxygenData.reverse();\n              let dissolvedOxygen = ([dissolvedOxygenReverse[0], dissolvedOxygenReverse[1], dissolvedOxygenReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n              console.log(dissolvedOxygenReverse[0])\n              this.setState({\n                dissolvedOxygenLatest: dissolvedOxygenReverse[0],\n                dissolvedOxygenAvg: dissolvedOxygen,\n                dissolvedOxygenGraph: dissolvedOxygenGraph,\n              })\n\n            }\n\n            snapshot.forEach(ss => {\n                salinityAverage.push({salinity: ss.child('salinity').val(), date: ss.child('sampleDate').val()} );\n                salinityAverage.sort(function(a, b) {\n                  if (a.date === b.date) {\n                    return 0;\n                  }\n                  return a.date > b.date ? 1 : -1;\n              });\n                this.setState({\n                  salinityAverage: (salinityAverage),\n                })\n              });\n              console.log(salinityAverage);\n              if (salinityAverage.length == 0) {\n                console.log(\"do nothing\")\n              }\n              if (salinityAverage.length == 1) {\n                console.log(\"do one thing\")\n                let salinityData = [];\n                for (let i=0; i < salinityAverage.length; i++) {\n                //push send this data to the back of the chartData variable above.\n                salinityData.push(parseFloat(salinityAverage[i].salinity));\n\n              }\n\n                let salinityReverse2 = salinityAverage.reverse();\n                let salinityGraph = ([{salinity: salinityReverse2[0].salinity, date: salinityReverse2[0].date} ]);\n                console.log(salinityGraph)\n\n                let salinityReverse = salinityData.reverse();\n                let salinity = ([salinityReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n                console.log(salinityReverse[0])\n                this.setState({\n                  salinityLatest: salinityReverse[0],\n                  salinityAvg: salinity,\n                  salinityGraph: salinityGraph,\n                })\n              }\n              if (salinityAverage.length == 2) {\n                let salinityData = [];\n                for (let i=0; i < salinityAverage.length; i++) {\n                //push send this data to the back of the chartData variable above.\n                salinityData.push(parseFloat(salinityAverage[i].salinity));\n\n              }\n\n\n              let salinityReverse2 = salinityAverage.reverse();\n\n\n              let salinityGraph = ([{salinity: salinityReverse2[1].salinity, date: salinityReverse2[1].date}, {salinity: salinityReverse2[0].salinity, date: salinityReverse2[0].date} ]);\n              console.log(salinityGraph)\n\n\n\n\n                let salinityReverse = salinityData.reverse();\n                let salinity = ([salinityReverse[0], salinityReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n                console.log(salinityReverse[0])\n                this.setState({\n                  salinityLatest: salinityReverse[0],\n                  salinityAvg: salinity,\n                  salinityGraph: salinityGraph,\n                })\n              }\n              if (salinityAverage.length > 2) {\n                console.log(\"do one three things or more\")\n                let salinityData = [];\n                for (let i=0; i < salinityAverage.length; i++) {\n                //push send this data to the back of the chartData variable above.\n                salinityData.push(parseFloat(salinityAverage[i].salinity));\n\n              }\n\n\n              let salinityReverse2 = salinityAverage.reverse();\n\n\n              let salinityGraph = ([{salinity: salinityReverse2[2].salinity, date: salinityReverse2[2].date}, {salinity: salinityReverse2[1].salinity, date: salinityReverse2[1].date}, {salinity: salinityReverse2[0].salinity, date: salinityReverse2[0].date} ]);\n              console.log(salinityGraph)\n\n              let salinityReverse = salinityData.reverse();\n              let salinity = ([salinityReverse[0], salinityReverse[1], salinityReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n              console.log(salinityReverse[0])\n              this.setState({\n                salinityLatest: salinityReverse[0],\n                salinityAvg: salinity,\n                salinityGraph: salinityGraph,\n              })\n              }\n              snapshot.forEach(ss => {\n                  turbidityAverage.push({turbidity: ss.child('turbidity').val(), date: ss.child('sampleDate').val()} );\n                  turbidityAverage.sort(function(a, b) {\n                    if (a.date === b.date) {\n                      return 0;\n                    }\n                    return a.date > b.date ? 1 : -1;\n                });\n                  this.setState({\n                    turbidityAverage: (turbidityAverage),\n                  })\n                });\n                console.log(turbidityAverage);\n                if (turbidityAverage.length == 0) {\n                  console.log(\"do nothing\")\n                }\n                if (turbidityAverage.length == 1) {\n                  console.log(\"do one thing\")\n                  let turbidityData = [];\n                  for (let i=0; i < turbidityAverage.length; i++) {\n                  //push send this data to the back of the chartData variable above.\n                  turbidityData.push(parseFloat(turbidityAverage[i].turbidity));\n\n                }\n\n                  let turbidityReverse2 = turbidityAverage.reverse();\n                  let turbidityGraph = ([{turbidity: turbidityReverse2[0].turbidity, date: turbidityReverse2[0].date} ]);\n                  console.log(turbidityGraph)\n\n                  let turbidityReverse = turbidityData.reverse();\n                  let turbidity = ([turbidityReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n                  console.log(turbidityReverse[0])\n                  this.setState({\n                    turbidityLatest: turbidityReverse[0],\n                    turbidityAvg: turbidity,\n                    turbidityGraph: turbidityGraph,\n                  })\n                }\n                if (turbidityAverage.length == 2) {\n                  let turbidityData = [];\n                  for (let i=0; i < turbidityAverage.length; i++) {\n                  //push send this data to the back of the chartData variable above.\n                  turbidityData.push(parseFloat(turbidityAverage[i].turbidity));\n\n                }\n\n\n                let turbidityReverse2 = turbidityAverage.reverse();\n\n\n                let turbidityGraph = ([{turbidity: turbidityReverse2[1].turbidity, date: turbidityReverse2[1].date}, {turbidity: turbidityReverse2[0].turbidity, date: turbidityReverse2[0].date} ]);\n                console.log(turbidityGraph)\n\n\n\n\n                  let turbidityReverse = turbidityData.reverse();\n                  let turbidity = ([turbidityReverse[0], turbidityReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n                  console.log(turbidityReverse[0])\n                  this.setState({\n                    turbidityLatest: turbidityReverse[0],\n                    turbidityAvg: turbidity,\n                    turbidityGraph: turbidityGraph,\n                  })\n                }\n                if (turbidityAverage.length > 2) {\n                  console.log(\"do one three things or more\")\n                  let turbidityData = [];\n                  for (let i=0; i < turbidityAverage.length; i++) {\n                  //push send this data to the back of the chartData variable above.\n                  turbidityData.push(parseFloat(turbidityAverage[i].turbidity));\n\n                }\n\n\n                let turbidityReverse2 = turbidityAverage.reverse();\n\n\n                let turbidityGraph = ([{turbidity: turbidityReverse2[2].turbidity, date: turbidityReverse2[2].date}, {turbidity: turbidityReverse2[1].turbidity, date: turbidityReverse2[1].date}, {turbidity: turbidityReverse2[0].turbidity, date: turbidityReverse2[0].date} ]);\n                console.log(turbidityGraph)\n\n                let turbidityReverse = turbidityData.reverse();\n                let turbidity = ([turbidityReverse[0], turbidityReverse[1], turbidityReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n                console.log(turbidityReverse[0])\n                this.setState({\n                  turbidityLatest: turbidityReverse[0],\n                  turbidityAvg: turbidity,\n                  turbidityGraph: turbidityGraph,\n                })\n                }\n\n                snapshot.forEach(ss => {\n                    tssAverage.push({tss: ss.child('tss').val(), date: ss.child('sampleDate').val()} );\n                    tssAverage.sort(function(a, b) {\n                      if (a.date === b.date) {\n                        return 0;\n                      }\n                      return a.date > b.date ? 1 : -1;\n                  });\n                    this.setState({\n                      tssAverage: (tssAverage),\n                    })\n                  });\n                  console.log(tssAverage);\n                  if (tssAverage.length == 0) {\n                    console.log(\"do nothing\")\n                  }\n                  if (tssAverage.length == 1) {\n                    console.log(\"do one thing\")\n                    let tssData = [];\n                    for (let i=0; i < tssAverage.length; i++) {\n                    //push send this data to the back of the chartData variable above.\n                    tssData.push(parseFloat(tssAverage[i].tss));\n\n                  }\n\n                    let tssReverse2 = tssAverage.reverse();\n                    let tssGraph = ([{tss: tssReverse2[0].tss, date: tssReverse2[0].date} ]);\n                    console.log(tssGraph)\n\n                    let tssReverse = tssData.reverse();\n                    let tss = ([tssReverse[0]].reduce((a, b) => a + b, 0)/ 1).toFixed(2);\n\n                    console.log(tssReverse[0])\n                    this.setState({\n                      tssLatest: tssReverse[0],\n                      tssAvg: tss,\n                      tssGraph: tssGraph,\n                    })\n                  }\n                  if (tssAverage.length == 2) {\n                    let tssData = [];\n                    for (let i=0; i < tssAverage.length; i++) {\n                    //push send this data to the back of the chartData variable above.\n                    tssData.push(parseFloat(tssAverage[i].tss));\n\n                  }\n\n\n                  let tssReverse2 = tssAverage.reverse();\n\n\n                  let tssGraph = ([{tss: tssReverse2[1].tss, date: tssReverse2[1].date}, {tss: tssReverse2[0].tss, date: tssReverse2[0].date} ]);\n                  console.log(tssGraph)\n\n\n\n\n                    let tssReverse = tssData.reverse();\n                    let tss = ([tssReverse[0], tssReverse[1]].reduce((a, b) => a + b, 0)/ 2).toFixed(2);\n\n                    console.log(tssReverse[0])\n                    this.setState({\n                      tssLatest: tssReverse[0],\n                      tssAvg: tss,\n                      tssGraph: tssGraph,\n                    })\n                  }\n                  if (tssAverage.length > 2) {\n                    console.log(\"do one three things or more\")\n                    let tssData = [];\n                    for (let i=0; i < tssAverage.length; i++) {\n                    //push send this data to the back of the chartData variable above.\n                    tssData.push(parseFloat(tssAverage[i].tss));\n\n                  }\n\n\n                  let tssReverse2 = tssAverage.reverse();\n\n\n                  let tssGraph = ([{tss: tssReverse2[2].tss, date: tssReverse2[2].date}, {tss: tssReverse2[1].tss, date: tssReverse2[1].date}, {tss: tssReverse2[0].tss, date: tssReverse2[0].date} ]);\n                  console.log(tssGraph)\n\n                  let tssReverse = tssData.reverse();\n                  let tss = ([tssReverse[0], tssReverse[1], tssReverse[2]].reduce((a, b) => a + b, 0)/ 3).toFixed(2);\n\n                  console.log(tssReverse[0])\n                  this.setState({\n                    tssLatest: tssReverse[0],\n                    tssAvg: tss,\n                    tssGraph: tssGraph,\n                  })\n                  }\n\n\n\n\n\n\n\n\n\n    });\n    const profileRef = fire.database().ref(`profileInformation/${user.uid}`);\n    profileRef.on('value', (snapshot) => {\n      var that = this;\n\n\n    this.setState({\n      lakeName: snapshot.child('lakeName').val(),\n      locationCity: snapshot.child('locationCity').val(),\n      locationState: snapshot.child('locationState').val(),\n      managementContact: snapshot.child('managementContact').val(),\n      hoaContact: snapshot.child('hoaContact').val(),\n      managementContactNumber: snapshot.child('managementContactNumber').val(),\n      hoaContactNumber: snapshot.child('hoaContactNumber').val(),\n      latitude: snapshot.child('latitude').val(),\n      longitude: snapshot.child('longitude').val(),\n      center: {\n        lat: snapshot.child('latitude').val(),\n        lng: snapshot.child('longitude').val()\n      },\n\n    });\n    console.log(this.state.center);\n              var myLat = `${this.state.latitude}`;\n                var myLon = `${this.state.longitude}`;\n             let API_WEATHER = `http://api.openweathermap.org/data/2.5/weather?lat=${myLat}&lon=${myLon}&units=imperial&appid=${'30573b68170d7f4400c7ac9c1c671ccf'}`;\n\n             fetch(API_WEATHER)\n          .then(response => response.json())\n          .then(responseJson => {\n            console.log(responseJson);\n            console.log(responseJson.weather);\n            console.log(responseJson.name);\n            this.setState({\n              isLoading: false,\n              dataSource: responseJson,\n              currentCity: this.state.lakeName,\n              currentTemp: responseJson.main.temp,\n              currentIcon: 'http://openweathermap.org/img/w/' + responseJson.weather[0].icon + '.png',\n              currentDescription: responseJson.weather[0].main,\n              currentHumidity: responseJson.main.humidity,\n\n\n            });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n\n\n  });\n\n    const colorsRef = fire.database().ref(`colors/${user.uid}`);\n\n    colorsRef.on('value', (snapshot) => {\n      let colorList = snapshot.val();\n      console.log(colorList);\n      this.setState({\n        tempColor: snapshot.child('tempColor').val(),\n\n      });\n\n\n    });\n\n  });\n\n\n\n\n\n\n  }\n\n\n\n   imageFormatter = (cell, row) => {\n      return (\n<span><img src={cell} /></span>\n)\n    }\n\n    toggleNitrogen(event) {\n        this.setState({\n          checkboxState: !this.state.checkboxState\n        });\n        const checkboxState = this.state.checkboxState;\n        if (checkboxState) {\n          this.setState({\n            nitrogenPlot: '',\n          })\n        } else {\n          this.setState({\n            nitrogenPlot: 'nitrogen',\n          })\n        }\n      }\n      togglePhosphorus(event) {\n          this.setState({\n            checkboxStatephosphorus: !this.state.checkboxStatephosphorus\n          });\n          const checkboxState = this.state.checkboxStatephosphorus;\n          if (checkboxState) {\n            this.setState({\n              phosphorusPlot: '',\n            })\n          } else {\n            this.setState({\n              phosphorusPlot: 'phosphorus',\n            })\n          }\n        }\n        toggleTemp(event) {\n            this.setState({\n              checkboxStatenitrogen: !this.state.checkboxStatenitrogen\n            });\n            const checkboxState = this.state.checkboxStatenitrogen;\n            if (checkboxState) {\n              this.setState({\n                tempPlot: '',\n              })\n            } else {\n              this.setState({\n                tempPlot: 'temp',\n              })\n            }\n          }\n          toggleTDS(event) {\n              this.setState({\n                checkboxStatetds: !this.state.checkboxStatetds\n              });\n              const checkboxState = this.state.checkboxStatetds;\n              if (checkboxState) {\n                this.setState({\n                  tdsPlot: '',\n                })\n              } else {\n                this.setState({\n                  tdsPlot: 'tds',\n                })\n              }\n            }\n            togglepH(event) {\n                this.setState({\n                  checkboxStatepH: !this.state.checkboxStatepH\n                });\n                const checkboxState = this.state.checkboxStatepH;\n                if (checkboxState) {\n                  this.setState({\n                    pHPlot: '',\n                  })\n                } else {\n                  this.setState({\n                    pHPlot: 'pH',\n                  })\n                }\n              }\n              toggletss(event) {\n                  this.setState({\n                    checkboxStatetss: !this.state.checkboxStatetss\n                  });\n                  const checkboxState = this.state.checkboxStatetss;\n                  if (checkboxState) {\n                    this.setState({\n                      tssPlot: '',\n                    })\n                  } else {\n                    this.setState({\n                      tssPlot: 'tss',\n                    })\n                  }\n                }\n                togglesalinity(event) {\n                    this.setState({\n                      checkboxStatesalinity: !this.state.checkboxStatesalinity\n                    });\n                    const checkboxState = this.state.checkboxStatesalinity;\n                    if (checkboxState) {\n                      this.setState({\n                        salinityPlot: '',\n                      })\n                    } else {\n                      this.setState({\n                        salinityPlot: 'salinity',\n                      })\n                    }\n                  }\n                  toggleHardness(event) {\n                      this.setState({\n                        checkboxStatehardness: !this.state.checkboxStatehardness\n                      });\n                      const checkboxState = this.state.checkboxStatehardness;\n                      if (checkboxState) {\n                        this.setState({\n                          totalHardnessPlot: '',\n                        })\n                      } else {\n                        this.setState({\n                          totalHardnessPlot: 'totalHardness',\n                        })\n                      }\n                    }\n                    toggleTurbidity(event) {\n                        this.setState({\n                          checkboxStateturbidity: !this.state.checkboxStateturbidity\n                        });\n                        const checkboxState = this.state.checkboxStateturbidity;\n                        if (checkboxState) {\n                          this.setState({\n                            turbidityPlot: '',\n                          })\n                        } else {\n                          this.setState({\n                            turbidityPlot: 'turbidity',\n                          })\n                        }\n                      }\n                      toggleDO(event) {\n                          this.setState({\n                            checkboxStatedo: !this.state.checkboxStatedo\n                          });\n                          const checkboxState = this.state.checkboxStatedo;\n                          if (checkboxState) {\n                            this.setState({\n                              doPlot: '',\n                            })\n                          } else {\n                            this.setState({\n                              doPlot: 'do',\n                            })\n                          }\n                        }\n\n                      handleClick = () => {\n                        this.setState({ displayColorPicker: !this.state.displayColorPicker })\n                      };\n\n                      handleClose = () => {\n                        this.setState({ displayColorPicker: false })\n                      };\n\n                      tempColorChange = (color) => {\n\n                          console.log(this.state.color);\n                          this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n                          const samplesRef = fire.database().ref(`colors/${user.uid}`);\n                          const orderID = fire.database().ref(`/colors/${user.uid}/${orderID}`);\n                          const sample = {\n                            tempColor: color.hex\n                          }\n                          samplesRef.set(sample);\n                          this.setState({\n                            tempColor: color.hex,\n                           });\n                          });\n                      }\n\n                      onSubmit(event) {\n                        event.preventDefault();\n                      }\n\n                      onTabChange = (key, type) => {\n     console.log(key, type);\n     this.setState({ [type]: key });\n   }\n\n\n   getLocation(){\n\n       // Get the current position of the user\n       navigator.geolocation.getCurrentPosition(\n       (position) => {\n           this.setState(\n           (prevState) => ({\n               latitude: 30,\n               longitude: 20\n               }), () => { this.getWeather(); }\n           );\n       },\n           (error) => this.setState({ weather: error.message }),\n           { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 },\n       );\n   }\n\n\n\n\n  render() {\n\n    const doCheckbox = (\n      <span>\n        <input\n        type=\"checkbox\"\n        defaultChecked='true'\n        onClick={this.toggleDO.bind(this)}\n        />\n      <label>DO</label>\n      </span>\n    );\n\n    const nitrogenCheckbox = (\n      <span>\n        <input\n          inline\n        type=\"checkbox\"\n        defaultChecked='true'\n        onClick={this.toggleNitrogen.bind(this)}\n        />\n      <label>Nitrogen</label>\n      </span>\n    );\n    const phosphorusCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglePhosphorus.bind(this)}/>\n      <label>Phosphorus</label>\n      </span>\n    );\n    const tempCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTemp.bind(this)}/>\n      <label>Temperature</label>\n      </span>\n    );\n    const tdsCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTDS.bind(this)}/>\n      <label>TDS</label>\n      </span>\n    );\n    const pHCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglepH.bind(this)}/>\n      <label>pH</label>\n      </span>\n    );\n    const tssCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggletss.bind(this)}/>\n      <label>TSS</label>\n      </span>\n    );\n    const salinityCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglesalinity.bind(this)}/>\n      <label>Salinity</label>\n      </span>\n    );\n    const hardnessCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleHardness.bind(this)}/>\n      <label>Total Hardness</label>\n      </span>\n    );\n    const turbidityCheckbox = (\n      <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTurbidity.bind(this)}/>\n      <label>Turbidity</label>\n      </span>\n    );\n    const popover = {\n       position: 'absolute',\n       zIndex: '2',\n     }\n     const cover = {\n       position: 'fixed',\n       top: '0px',\n       right: '0px',\n       bottom: '0px',\n       left: '0px',\n     }\n\n\n\n    return (\n\n      <Layout>\n\n\n        <Row type=\"flex\" justify=\"center\">\n          <Col xs={24} sm={24} md={24} lg={24} xl={24} style={{textAlign: 'left'}}>\n\n\n\n          <Row type=\"flex\" justify=\"center\">\n            <Col span={24} style={{textAlign: 'center'}}>\n              <Card style={{ width: '100%' }}>\n                <div style={{textAlign: 'right'}}>\n                  <Radio.Group size=\"small\" value={this.state.timeFrame} onChange={this.handleTimeFrameChange}>\n            <Radio.Button value=\"three\" onClick={this.threeMonths}>3 Months</Radio.Button>\n            <Radio.Button value=\"six\" onClick={this.sixMonths}>6 Months</Radio.Button>\n            <Radio.Button value=\"twelve\" onClick={this.twelveMonths}>12 Months</Radio.Button>\n            <Radio.Button value=\"All\" onClick={this.allMonths}>All</Radio.Button>\n          </Radio.Group></div>\n        <ResponsiveContainer width=\"100%\" aspect={10/3.0} minHeight={300}>\n                  <ComposedChart data={dataReverse}\n            syncId=\"anyId\">\n\n\n            <XAxis dataKey=\"date\"><Label  offset={200} position=\"top\" /></XAxis>\n\n            <YAxis hide= \"true\" type=\"number\" domain={[dataMin => (0 - Math.abs(dataMin)), dataMax => (dataMax * 2)]} />\n            <Tooltip />\n\n\n            <defs>\n              {data1.map(parameter => {\n                return (\n\n                    <linearGradient id={parameter.Sample_Item} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                      <stop offset=\"5%\" stopColor={parameter.color} stopOpacity={0.3}/>\n                      <stop offset=\"95%\" stopColor={parameter.color} stopOpacity={0.1}/>\n                    </linearGradient>\n\n\n                )\n              })}\n  </defs>\n\n\n\n\n              {data1.map(parameter => {\n\n                if (parameter.dataType == 'Bar') {\n                  console.log('something 1')\n                  const CustomTag = Bar;\n                  return(\n                    <CustomTag type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}><LabelList dataKey={parameter.Sample_Item} position=\"top\" /></CustomTag>\n                  )\n                }\n                if (parameter.dataType == 'Line') {\n                  console.log('something 2')\n                  const CustomTag = Line;\n                  return(\n                    <CustomTag type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}><LabelList dataKey={parameter.Sample_Item} position=\"top\" /></CustomTag>\n                  )\n                }\n                if (parameter.dataType == 'Area') {\n                  console.log('something 3')\n                  const CustomTag = Area;\n                  return(\n                    <CustomTag type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}><LabelList dataKey={parameter.Sample_Item} position=\"top\" /></CustomTag>\n                  )\n                }\n\n                if (parameter.dataType == 'Off') {\n                  console.log('No graph')\n\n\n                }\n\n\n              })}\n\n\n\n\n\n\n\n            <Legend />\n\n          </ComposedChart>\n           </ResponsiveContainer>\n              </Card>\n            </Col>\n\n\n          </Row>\n\n          <Row style={{paddingTop: '15px'}} type=\"flex\" justify=\"center\">\n            <Col span={24}>\n            <Card style={{ width: '100%'}} bodyStyle={{padding: \"0\"}}>\n              <Row align=\"middle\">\n                <p style={{paddingTop: '25px', paddingLeft: '20px', fontSize: '24px'}}>Water Quality</p>\n              </Row>\n              <Row  type=\"flex\" justify=\"center\">\n\n\n                {data1.map(parameter => {\n\n\n                    return(\n                      <Col xs={24} sm={12} md={8} lg={8} xl={8}>\n                        <Card >\n                          <Row>\n                            <Col xs={4} sm={4} md={4} lg={4} xl={4}>\n                            <Icon type=\"up-circle\"style={{fontSize: '32px',color: parameter.color}} />\n                            </Col>\n                            <Col  xs={16} sm={16} md={16} lg={16} xl={16}>\n                            <b style={{fontSize: '24px'}}>{parameter.Sample_Item}</b>\n                            </Col>\n                            </Row>\n                            <Row>\n\n                      <ResponsiveContainer width=\"100%\" aspect={6/3.0} minHeight={90}>\n\n                      <ComposedChart data={dataReverse}\n                syncId=\"anyId\">\n\n                <XAxis dataKey=\"date\"><Label  offset={200} position=\"top\" /></XAxis>\n\n                <YAxis hide= \"true\" type=\"number\" domain={[dataMin => (0 - Math.abs(dataMin)), dataMax => (dataMax * 2)]} />\n                <Tooltip />\n\n                      <Line type=\"monotone\" dataKey={parameter.Sample_Item}  fillOpacity={1} strokeWidth={2} stroke={parameter.color} fill={\"url(#\" + parameter.Sample_Item + \")\"}></Line>\n\n\n\n\n              </ComposedChart>\n              </ResponsiveContainer>\n              </Row>\n              </Card>\n              </Col>\n                    )\n\n\n\n\n                })}\n\n\n\n\n                        </Row>\n\n            </Card>\n            </Col>\n\n          </Row>\n\n\n\n\n\n\n\n\n\n         <Card  style={{textAlign: 'left'}} bordered={true} >\n           <div style={{textAlign: 'center'}}>\n           <h3>{this.state.currentCity}</h3>\n             <img style={{width: '60px', height: '60px'}} src={this.state.currentIcon} />\n             <h3>{this.state.currentDescription}</h3>\n             <p>Temperature: {this.state.currentTemp} F</p>\n             <p>Humidity: {this.state.currentHumidity}%</p>\n             </div>\n         </Card>\n\n\n        <Col xs={24} sm={24} md={16} lg={16} xl={16}>\n         <Card  style={{textAlign: 'left'}} bordered={true} >\n           <div style={{ height: '29vh', width: '100%' }}>\n             <GoogleMapReact\n               bootstrapURLKeys={{ key: 'AIzaSyAqe1Z8I94AcnNb3VsOam1tnUd_8WdubV4'}}\n               center={this.state.center}\n               defaultZoom={this.props.zoom}\n             >\n               <AnyReactComponent\n                 lat={this.state.latitude}\n                 lng={this.state.longitude}\n                 text={this.state.lakeName}\n               />\n             </GoogleMapReact>\n           </div>\n         </Card>\n\n        </Col>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</Col>\n</Row>\n\n\n\n\n\n\n\n\n      </Layout>\n\n\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}