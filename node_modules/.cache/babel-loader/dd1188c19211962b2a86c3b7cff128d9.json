{"ast":null,"code":"import _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/testingPage.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, ResponsiveEmbed, ButtonToolbar, Form, Grid, FormGroup, Radio, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport domtoimage from 'dom-to-image';\nimport { SketchPicker } from 'react-color';\nimport fileDownload from \"js-file-download\";\nimport { ComposedChart, LineChart, LabelList, ResponsiveContainer, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, BarChart, Bar, CartesianGrid, Tooltip, Legend, Label } from 'recharts';\nimport { Row, Col, Tabs, message, Card, Drawer, Menu, Icon, Dropdown, Button, Layout, Carousel } from 'antd';\nimport Griddle from 'griddle-react';\nvar TabPane = Tabs.TabPane;\nvar styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  }\n};\n\nvar testingPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(testingPage, _Component);\n\n  function testingPage(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, testingPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(testingPage).call(this, props));\n\n    _this.writeStates = function (itemId) {\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(_this.state.id));\n        sampleRef.child(\"id\").set(_this.state.id);\n        sampleRef.child(\"sampleDate\").set(_this.state.sampleDate);\n        sampleRef.child(\"sampleTaker\").set(_this.state.sampleTaker);\n        sampleRef.child(\"temp\").set(_this.state.temp);\n        sampleRef.child(\"do\").set(_this.state.do);\n        sampleRef.child(\"conductivity\").set(_this.state.conductivity);\n        sampleRef.child(\"tds\").set(_this.state.tds);\n        sampleRef.child(\"salinity\").set(_this.state.salinity);\n        sampleRef.child(\"pH\").set(_this.state.pH);\n        sampleRef.child(\"turbidity\").set(_this.state.turbidity);\n        sampleRef.child(\"nitrogen\").set(_this.state.nitrogen);\n        sampleRef.child(\"phosphorus\").set(_this.state.phosphorus);\n        sampleRef.child(\"totalHardness\").set(_this.state.totalHardness);\n        sampleRef.child(\"tss\").set(_this.state.tss);\n        sampleRef.child(\"sampleNotes\").set(_this.state.sampleNotes);\n      });\n    };\n\n    _this.fillEmpty = function (itemId) {\n      var area = '';\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n          }\n\n          _this.setState({\n            visible: true,\n            sampleDate: '',\n            sampleTaker: '',\n            temp: '',\n            do: '',\n            conductivity: '',\n            tds: '',\n            salinity: '',\n            pH: '',\n            turbidity: '',\n            nitrogen: '',\n            phosphorus: '',\n            totalHardness: '',\n            tss: '',\n            sampleNotes: ''\n          });\n        });\n      });\n    };\n\n    _this.exportPDF = function () {\n      _this.resume.save();\n    };\n\n    _this.nitrogenSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.nitrogen - b.nitrogen;\n      } else {\n        return b.nitrogen - a.nitrogen;\n      }\n    };\n\n    _this.phosphorusSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.phosphorus - b.phosphorus;\n      } else {\n        return b.phosphorus - a.phosphorus;\n      }\n    };\n\n    _this.tdsSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.tds - b.tds;\n      } else {\n        return b.tds - a.tds;\n      }\n    };\n\n    _this.tssSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.tss - b.tss;\n      } else {\n        return b.tss - a.tss;\n      }\n    };\n\n    _this.salinitySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.salinity - b.salinity;\n      } else {\n        return b.salinity - a.salinity;\n      }\n    };\n\n    _this.turbiditySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.turbidity - b.turbidity;\n      } else {\n        return b.turbidity - a.turbidity;\n      }\n    };\n\n    _this.pHSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.pH - b.pH;\n      } else {\n        return b.pH - a.pH;\n      }\n    };\n\n    _this.hardnessSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.totalHardness - b.totalHardness;\n      } else {\n        return b.totalHardness - a.totalHardness;\n      }\n    };\n\n    _this.tempSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.temp - b.temp;\n      } else {\n        return b.temp - a.temp;\n      }\n    };\n\n    _this.doSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.do - b.do;\n      } else {\n        return b.do - a.do;\n      }\n    };\n\n    _this.conductivitySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'asc') {\n        return a.conductivity - b.conductivity;\n      } else {\n        return b.conductivity - a.conductivity;\n      }\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    _this.tempColorChange = function (color) {\n      console.log(_this.state.color);\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"colors/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/colors/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          tempColor: color.hex\n        };\n        samplesRef.set(sample);\n\n        _this.setState({\n          tempColor: color.hex\n        });\n      });\n    };\n\n    _this.test = function () {\n      console.log(\"test\");\n    };\n\n    _this.showDrawer = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.onClose = function () {\n      _this.setState({\n        visible: false,\n        visible1: false,\n        visible2: false\n      });\n    };\n\n    _this.editChart = function (itemId) {\n      var area = '';\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          _this.setState({\n            visible2: true\n          });\n        });\n      });\n    };\n\n    _this.fillParameterInfo = function (e) {\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var parameterListRef = fire.database().ref(\"parameterList/\".concat(user.uid));\n        var parameterInfo = {\n          Parameter_Name: _this.state.Parameter_Name,\n          Parameter_Units: _this.state.Parameter_Units,\n          Parameter_Input: _this.state.Parameter_Input\n        };\n        parameterListRef.push(parameterInfo); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this.setState({\n          Parameter_Name: '',\n          Parameter_Units: ''\n        });\n      });\n    };\n\n    _this.handleSampleChange = function (idx) {\n      return function (evt) {\n        var newParameters = _this.state.Parameter_List.map(function (parameter, sidx) {\n          if (idx !== sidx) return parameter;\n          return _objectSpread({}, parameter, {\n            Parameter_Input: evt.target.value\n          });\n        });\n\n        _this.setState({\n          Parameter_List: newParameters\n        });\n\n        console.log(_this.state.Parameter_List);\n      };\n    };\n\n    _this.sampleSubmit = function (e) {\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var parameterListRef = fire.database().ref(\"parameterSample/\".concat(user.uid));\n        var date = {\n          date: _this.state.sampleDate\n        };\n        var color = {\n          color: _this.state.color\n        };\n        var parameterInfo = {\n          list: _this.state.Parameter_List.map(function (parameter) {\n            return {\n              Parameter_Name: parameter.Parameter_Name,\n              Parameter_Units: parameter.Parameter_Units,\n              Parameter_Input: parameter.Parameter_Input\n            };\n          })\n        };\n        console.log(parameterInfo.list);\n        var kvArray = parameterInfo.list;\n        var array = kvArray.map(function (parameter) {\n          var rObj = {};\n          rObj[parameter.Parameter_Name] = parameter.Parameter_Input;\n          return rObj;\n        });\n        var newArray = array.unshift(date);\n        console.log(array);\n\n        _this.setState({\n          parameters: array\n        });\n\n        console.log(_this.state.parameters);\n        var arr = _this.state.Parameter_List;\n        var object = arr.reduce(function (obj, item) {\n          return Object.assign(obj, _defineProperty({\n            date: _this.state.sampleDate,\n            color: _this.state.color,\n            id: item.id\n          }, item.Parameter_Name, item.Parameter_Input));\n        }, {});\n        console.log(object);\n        parameterListRef.push(object); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this.setState({\n          Parameter_Name: '',\n          Parameter_Units: '',\n          Parameter_Input: '',\n          visible: false,\n          visible1: false,\n          visible2: false\n        });\n      });\n    };\n\n    _this.handleChangeComplete = function (color) {\n      _this.setState({\n        color: color.hex\n      });\n    };\n\n    _this.state = (_this$state = {\n      //checkbox status\n      checkboxState: true,\n      checkboxState1: true,\n      checkboxStatenitrogen: true,\n      checkboxStatephosphorus: true,\n      checkboxStatetds: true,\n      checkboxStatepH: true,\n      checkboxStatetss: true,\n      checkboxStatesalinity: true,\n      checkboxStateconductivity: true,\n      checkboxStatehardness: true,\n      checkboxStateturbidity: true,\n      checkboxStatedo: true,\n      checkboxStatetemp: true,\n      //data results\n      sampleDate: '',\n      //random id and key, key is for the tab number\n      id: '',\n      key: 1,\n      idKey: '',\n      page: '',\n      area: '',\n      displayColorPicker: false,\n      //colors for graph lines\n      tempColor: '#4C5B5C',\n      doColor: '#6C698D',\n      conductivityColor: '#DD1C1A',\n      tdsColor: '#086788',\n      salinityColor: '#F0C808',\n      pHColor: '#4C5B5C',\n      turbidityColor: '#6C698D',\n      nitrogenColor: '#086788',\n      phosphorusColor: '#F0C808',\n      totalHardnessColor: '#DD1C1A',\n      tssColor: '#086788',\n      sampleNotesColor: '#',\n      //this is the object array for the table\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      //these are for the graphs\n      //for drawers\n      visible: false,\n      visible1: false,\n      visible2: false,\n      //Graph 1\n      parameterGraph1: 'salinity',\n      parameterGraph2: 'tds',\n      parameterGraph3: 'tss',\n      parameterGraph4: 'turbidity',\n      graphType: 'Area',\n      graphType2: 'Area',\n      graphType3: 'Bar',\n      graphType4: 'Bar',\n      //barLine\n      barLine: '',\n      lineLine: '',\n      graphingType1: '',\n      graphingType2: '',\n      graphingType3: '',\n      graphingType4: '',\n      //Inputs for Profile Page\n      lakeName: '',\n      locationCity: '',\n      locationState: '',\n      managementContact: '',\n      hoaContact: '',\n      managementContactNumber: '',\n      hoaContactNumber: '',\n      //testing\n      test: '<Area',\n      test1: '</Area>',\n      Parameter_List: [],\n      Parameter_List1: [],\n      Parameter_Name: '',\n      Parameter_Units: '',\n      Parameter_Input: '',\n      name: \"\",\n      shareholders: [{\n        name: \"\"\n      }],\n      parameters: '',\n      graphingData: [],\n      graphingKeys: [],\n      tableKeys: [],\n      tableKeys1: [],\n      tableData: [],\n      graphInfo: '',\n      graphInfoReverse: '',\n      graphKeys: [],\n      table1Keys: ''\n    }, _defineProperty(_this$state, \"tableData\", {}), _defineProperty(_this$state, \"columnData\", [{}]), _this$state); //these are triggered events.  handleChange is for text box changes\n    //handlesubmit is for the form being submitted.\n    //every event trigger needs to be bound like is below with .bind\n    //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.writeData = _this.writeData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //event triggered when text boxes of forms, values are changed\n\n\n  _createClass(testingPage, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      this.setState(_defineProperty({}, name, value));\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      var filter = this.state.filter;\n      var dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n          return String(value);\n        }).find(function (value) {\n          return value.includes(filter);\n        });\n      });\n      var newState = [];\n    } //event triggered when form is submitted\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"parameterList1/\".concat(user.uid));\n        var parameterInfo = {\n          date: _this2.state.sampleDate,\n          list: _this2.state.Parameter_List1.map(function (parameter) {\n            return {\n              Parameter_Name: parameter.Parameter_Name,\n              Parameter_Units: parameter.Parameter_Units,\n              Parameter_Input: parameter.Parameter_Input\n            };\n          })\n        };\n        console.log(parameterInfo);\n        samplesRef.push(parameterInfo); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this2.setState({\n          sampleDate: '',\n          visible: false,\n          visible1: false,\n          visible2: false\n        });\n      });\n    }\n  }, {\n    key: \"snapshotToArray\",\n    value: function snapshotToArray(snapshot) {\n      var returnArr = [];\n      snapshot.forEach(function (childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        returnArr.push(item);\n      });\n      return returnArr;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount(itemId) {\n      var _this3 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        console.log(user.uid);\n\n        _this3.setState({\n          userID: user.uid\n        });\n\n        var parameterListRef = fire.database().ref(\"parameterList/\".concat(user.uid));\n        parameterListRef.on('value', function (snapshot) {\n          var parameterList = snapshot.val();\n          console.log(parameterList);\n          var newState = [];\n\n          for (var order in parameterList) {\n            newState.push({\n              id: order,\n              Parameter_Name: parameterList[order].Parameter_Name,\n              Parameter_Units: parameterList[order].Parameter_Units,\n              Parameter_Input: parameterList[order].Parameter_Input,\n              color: parameterList[order].color\n            });\n            console.log(newState);\n          }\n\n          _this3.setState({\n            Parameter_List: newState\n          });\n        });\n        var parameterList1Ref = fire.database().ref(\"parameterSample/\".concat(user.uid));\n        parameterList1Ref.on('value', function (snapshot) {\n          var parameterList1 = snapshot.val();\n          console.log(parameterList1);\n\n          _this3.setState({\n            graphingData: parameterList1\n          });\n\n          var newState1 = [];\n\n          for (var order in parameterList1) {\n            newState1.push({\n              id: order,\n              date: parameterList1[order].Date\n            });\n          }\n\n          var snapArray = _this3.snapshotToArray(snapshot);\n\n          var graphInfo = _this3.snapshotToArray(snapshot);\n\n          var graphInfoReverse = _this3.snapshotToArray(snapshot);\n\n          graphInfo.sort(function (a, b) {\n            if (a.date === b.date) {\n              return 0;\n            }\n\n            return a.date > b.date ? 1 : -1;\n          });\n          graphInfoReverse.sort(function (a, b) {\n            if (b.date === a.date) {\n              return 0;\n            }\n\n            return b.date > a.date ? 1 : -1;\n          });\n\n          if (snapArray.length == 0) {\n            console.log(\"do nothing\");\n          }\n\n          if (snapArray.length > 0) {\n            var snapArrayReverse = snapArray.reverse();\n            var graphKeys = Object.keys(snapArrayReverse[0]);\n            graphKeys = graphKeys.filter(function (e) {\n              return e !== 'id';\n            });\n            graphKeys = graphKeys.filter(function (e) {\n              return e !== 'key';\n            });\n            graphKeys = graphKeys.filter(function (e) {\n              return e !== 'date';\n            });\n            console.log(graphKeys);\n            var tableData1 = [];\n\n            for (var i = 0; i < graphInfoReverse.length; i++) {\n              //push send this data to the back of the chartData variable above.\n              tableData1.push(Object.keys(graphInfoReverse[i]));\n            }\n\n            console.log(tableData1);\n            var tableData2 = tableData1.map(function (a) {\n              return a.length;\n            });\n            tableData2.indexOf(Math.max.apply(Math, tableData2));\n            var indexOfMaxValue = tableData2.reduce(function (iMax, x, i, arr) {\n              return x > arr[iMax] ? i : iMax;\n            }, 0);\n            console.log(tableData2);\n            console.log(indexOfMaxValue);\n            var table1Keys = Object.keys(graphInfoReverse[indexOfMaxValue]);\n            table1Keys = table1Keys.filter(function (e) {\n              return e !== 'id';\n            });\n            console.log(table1Keys);\n\n            _this3.setState({\n              graphInfo: graphInfo,\n              graphInfoReverse: graphInfoReverse,\n              graphKeys: graphKeys,\n              table1Keys: table1Keys\n            });\n\n            console.log(_this3.state.graphInfo);\n            console.log(_this3.state.graphInfoReverse);\n            console.log(_this3.state.graphKeys);\n            console.log(_this3.state.columnData);\n            var tableData = [];\n\n            for (var _i = 0; _i < table1Keys.length; _i++) {\n              //push send this data to the back of the chartData variable above.\n              tableData.push({\n                dataField: table1Keys[_i],\n                text: table1Keys[_i]\n              });\n            }\n\n            tableData.push({\n              dataField: 'delete',\n              text: 'Delete',\n              formatter: _this3.deleteRow.bind(_this3)\n            });\n            var arr = snapshot.val();\n            var arr1 = Object.keys(arr);\n            console.log(arr1);\n            console.log(tableData);\n\n            _this3.setState({\n              columnData: tableData\n            });\n\n            console.log(_this3.state.tableData);\n          }\n        });\n        var parameter2ist1Ref = fire.database().ref(\"parameterSample/\".concat(user.uid));\n        parameter2ist1Ref.on('value', function (snapshot) {\n          var parameterList2 = snapshot.val();\n          console.log(parameterList2);\n        });\n      });\n    }\n  }, {\n    key: \"fillStates\",\n    value: function fillStates(itemId) {\n      var _this4 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/parameterInformation/\".concat(user.uid, \"/\").concat(itemId));\n        var sample1Ref = fire.database().ref(\"/parameterList/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          _this4.setState({\n            visible1: true\n          });\n\n          var orders = snapshot.val();\n          var id = fire.database().ref().child(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId)).key;\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n          }\n\n          _this4.setState({\n            id: id,\n            sampleDate: snapshot.child('sampleDate').val(),\n            sampleTaker: snapshot.child('sampleTaker').val(),\n            temp: snapshot.child('temp').val(),\n            do: snapshot.child('do').val(),\n            conductivity: snapshot.child('conductivity').val(),\n            tds: snapshot.child('tds').val(),\n            salinity: snapshot.child('salinity').val(),\n            pH: snapshot.child('pH').val(),\n            turbidity: snapshot.child('turbidity').val(),\n            nitrogen: snapshot.child('nitrogen').val(),\n            phosphorus: snapshot.child('phosphorus').val(),\n            totalHardness: snapshot.child('totalHardness').val(),\n            tss: snapshot.child('tss').val(),\n            sampleNotes: snapshot.child('sampleNotes').val()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(key) {\n      this.setState({\n        key: key\n      });\n    }\n  }, {\n    key: \"writeData\",\n    value: function writeData(e) {\n      var _this5 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        var sample = {\n          id: _this5.state.id,\n          sampleDate: _this5.state.sampleDate,\n          sampleTaker: _this5.state.sampleTaker,\n          temp: _this5.state.temp,\n          do: _this5.state.do,\n          conductivity: _this5.state.conductivity,\n          tds: _this5.state.tds,\n          salinity: _this5.state.salinity,\n          pH: _this5.state.pH,\n          turbidity: _this5.state.turbidity,\n          nitrogen: _this5.state.nitrogen,\n          phosphorus: _this5.state.phosphorus,\n          totalHardness: _this5.state.totalHardness,\n          tss: _this5.state.tss,\n          sampleNotes: _this5.state.sampleNotes\n        };\n        samplesRef.child(_this5.state.id).set(sample);\n\n        _this5.setState({\n          visible1: false\n        }); //this.setState is used to clear the text boxes after the form has been submitted.\n\n      });\n    }\n  }, {\n    key: \"rawMarkup\",\n    value: function rawMarkup() {\n      var rawMarkup = this.props.content;\n      return {\n        __html: rawMarkup\n      };\n    }\n  }, {\n    key: \"editRow\",\n    value: function editRow(row, isSelected, e, id) {\n      var _this6 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"edit\",\n        style: {\n          fontSize: '24px'\n        },\n        onClick: function onClick() {\n          return _this6.fillStates(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }, \"Click me\"));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"removesample\",\n    value: function removesample(itemId) {\n      var sampleRef = fire.database().ref(\"/parameterSample/\".concat(this.state.userID, \"/\").concat(itemId));\n      sampleRef.remove();\n    }\n  }, {\n    key: \"removesample1\",\n    value: function removesample1(itemId) {\n      var sampleRef = fire.database().ref(\"/parameterList/\".concat(this.state.userID, \"/\").concat(itemId));\n      sampleRef.remove();\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(row, isSelected, e, id, key) {\n      var _this7 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"delete\",\n        style: {\n          fontSize: '24px'\n        },\n        onClick: function onClick() {\n          return _this7.removesample(isSelected.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      }, \"Click me\"));\n    }\n  }, {\n    key: \"deleteRow1\",\n    value: function deleteRow1(row, isSelected, e, id, key) {\n      var _this8 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"delete\",\n        style: {\n          fontSize: '24px'\n        },\n        onClick: function onClick() {\n          return _this8.removesample1(isSelected.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044\n        },\n        __self: this\n      }, \"Click me\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      function handleButtonClick(e) {\n        console.log('click left button', e);\n      }\n\n      function handleMenuClick(e) {\n        console.log('click', e);\n      }\n\n      var popover = {\n        position: 'absolute',\n        zIndex: '2'\n      };\n      var cover = {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      };\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          padding: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1108\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 18,\n        lg: 18,\n        xl: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112\n        },\n        __self: this\n      }, \"Monthly Samples\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      }, this.state.lakeName))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 6,\n        lg: 6,\n        xl: 6,\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"large\",\n        type: \"primary\",\n        onClick: function onClick() {\n          return _this9.fillEmpty();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116\n        },\n        __self: this\n      }, \"+ Add Sample\"), React.createElement(Drawer, {\n        title: \"Fill in Sample Form\",\n        placement: this.state.placement,\n        closable: false,\n        onClose: this.onClose,\n        visible: this.state.visible,\n        width: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"right-circle\",\n        style: {\n          fontSize: '30px'\n        },\n        onClick: function onClick() {\n          return _this9.onClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127\n        },\n        __self: this\n      }, \"+ Add Sample\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 6,\n        md: 6,\n        lg: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131\n        },\n        __self: this\n      }, \"Sample Date\")), React.createElement(Col, {\n        xs: 24,\n        sm: 18,\n        md: 18,\n        lg: 18,\n        xl: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        name: \"sampleDate\",\n        type: \"date\",\n        placeholder: \"Normal text\",\n        value: this.state.sampleDate,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 6,\n        md: 6,\n        lg: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139\n        },\n        __self: this\n      }, \"Sample Date\")), React.createElement(Col, {\n        xs: 24,\n        sm: 18,\n        md: 18,\n        lg: 18,\n        xl: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }, React.createElement(SketchPicker, {\n        color: this.state.color,\n        onChangeComplete: this.handleChangeComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141\n        },\n        __self: this\n      })))), this.state.Parameter_List.map(function (parameter, idx) {\n        return React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1151\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1152\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 24,\n          sm: 6,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1153\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1153\n          },\n          __self: this\n        }, parameter.Parameter_Name)), React.createElement(Col, {\n          xs: 24,\n          sm: 18,\n          md: 18,\n          lg: 18,\n          xl: 18,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1154\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          name: parameter.Parameter_Name,\n          onChange: _this9.handleSampleChange(idx),\n          type: \"number\",\n          placeholder: \"Normal text\",\n          value: parameter.Parameter_Input,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1155\n          },\n          __self: this\n        }))));\n      }), \";\", React.createElement(Row, {\n        style: {\n          paddingTop: '10px',\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.sampleSubmit,\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166\n        },\n        __self: this\n      }, \"Add sample\")))))))), React.createElement(\"div\", {\n        style: {\n          background: '#F0F0F0',\n          paddingTop: '15px',\n          paddingRight: '5px',\n          paddingLeft: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1188\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1190\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"GRAPHS\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1204\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1212\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1219\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1220\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 24,\n        xl: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1221\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        aspect: 8 / 3.0,\n        minHeight: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1222\n        },\n        __self: this\n      }, React.createElement(ComposedChart, {\n        data: this.state.graphInfo,\n        syncId: \"anyId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1226\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1227\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228\n        },\n        __self: this\n      }), this.state.graphKeys.map(function (txt) {\n        return React.createElement(Line, {\n          type: \"monotone\",\n          dataKey: txt,\n          fillOpacity: 1,\n          stroke: \"#0000FF\",\n          fill: \"url(#colorNitrogen)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1233\n          },\n          __self: this\n        }, React.createElement(LabelList, {\n          dataKey: txt,\n          position: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1233\n          },\n          __self: this\n        }));\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1243\n        },\n        __self: this\n      }))))))))), React.createElement(TabPane, {\n        tab: \"DATA TABLE\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1276\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        style: {\n          paddingTop: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1279\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1281\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1281\n        },\n        __self: this\n      }, \"DATA TABLE\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1283\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"date\",\n        data: this.state.graphInfoReverse,\n        columns: this.state.columnData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1290\n        },\n        __self: this\n      }))), React.createElement(TabPane, {\n        tab: \"CONSTITUENTS\",\n        key: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1304\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1305\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        style: {\n          paddingTop: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1306\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          lineHeight: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1308\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1308\n        },\n        __self: this\n      }, \"DATA TABLE\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1310\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1313\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1314\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          paddingTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1315\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1316\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 6,\n        md: 6,\n        lg: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1317\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1317\n        },\n        __self: this\n      }, \"Parameter Name\")), React.createElement(Col, {\n        xs: 24,\n        sm: 18,\n        md: 18,\n        lg: 18,\n        xl: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1318\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        name: \"Parameter_Name\",\n        onChange: this.handleChange,\n        type: \"text\",\n        placeholder: \"Name\",\n        style: {\n          width: 350\n        },\n        value: this.state.Parameter_Name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        style: {\n          paddingTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1322\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1323\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 24,\n        sm: 6,\n        md: 6,\n        lg: 6,\n        xl: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324\n        },\n        __self: this\n      }, \"Parameter Units\")), React.createElement(Col, {\n        xs: 24,\n        sm: 18,\n        md: 18,\n        lg: 18,\n        xl: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1325\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        name: \"Parameter_Units\",\n        onChange: this.handleChange,\n        type: \"text\",\n        placeholder: \"Units\",\n        style: {\n          width: 350\n        },\n        value: this.state.Parameter_Units,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1326\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        style: {\n          paddingTop: '10px',\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1330\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.fillParameterInfo,\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1331\n        },\n        __self: this\n      }, \"Add Parameter\")))), React.createElement(Row, {\n        style: {\n          paddingTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1336\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1337\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"date\",\n        data: this.state.Parameter_List,\n        columns: [{\n          dataField: 'Parameter_Name',\n          text: 'Parameter'\n        }, {\n          dataField: 'Parameter_Units',\n          text: 'Units'\n        }, {\n          dataField: 'delete',\n          text: 'Delete',\n          formatter: this.deleteRow1.bind(this)\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return testingPage;\n}(Component);\n\nexport { testingPage as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/testingPage.jsx"],"names":["React","Component","Navbar","Nav","NavItem","ResponsiveEmbed","ButtonToolbar","Form","Grid","FormGroup","Radio","Table","Popover","ControlLabel","MenuItem","DropdownButton","FormControl","Checkbox","Link","firebase","PDFExport","fire","BootstrapTable","TiArrowSortedDown","TiBrush","TiArrowSortedUp","TiPencil","TiTrash","domtoimage","SketchPicker","fileDownload","ComposedChart","LineChart","LabelList","ResponsiveContainer","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","BarChart","Bar","CartesianGrid","Tooltip","Legend","Label","Row","Col","Tabs","message","Card","Drawer","Menu","Icon","Dropdown","Button","Layout","Carousel","Griddle","TabPane","styles","topPad","paddingTop","testingPage","props","writeStates","itemId","removeAuthListener","auth","onAuthStateChanged","user","sampleRef","database","ref","uid","state","id","child","set","sampleDate","sampleTaker","temp","do","conductivity","tds","salinity","pH","turbidity","nitrogen","phosphorus","totalHardness","tss","sampleNotes","fillEmpty","area","on","snapshot","orders","val","newState","order","push","setState","visible","exportPDF","resume","save","nitrogenSort","a","b","dataList","phosphorusSort","tdsSort","tssSort","salinitySort","turbiditySort","pHSort","hardnessSort","tempSort","doSort","conductivitySort","handleClick","displayColorPicker","handleClose","tempColorChange","color","console","log","samplesRef","orderID","sample","tempColor","hex","test","showDrawer","onClose","visible1","visible2","editChart","fillParameterInfo","e","preventDefault","parameterListRef","parameterInfo","Parameter_Name","Parameter_Units","Parameter_Input","handleSampleChange","idx","evt","newParameters","Parameter_List","map","parameter","sidx","target","value","sampleSubmit","date","list","kvArray","array","rObj","newArray","unshift","parameters","arr","object","reduce","obj","item","Object","assign","handleChangeComplete","checkboxState","checkboxState1","checkboxStatenitrogen","checkboxStatephosphorus","checkboxStatetds","checkboxStatepH","checkboxStatetss","checkboxStatesalinity","checkboxStateconductivity","checkboxStatehardness","checkboxStateturbidity","checkboxStatedo","checkboxStatetemp","key","idKey","page","doColor","conductivityColor","tdsColor","salinityColor","pHColor","turbidityColor","nitrogenColor","phosphorusColor","totalHardnessColor","tssColor","sampleNotesColor","samples","orders2","filter","blobUrl","parameterGraph1","parameterGraph2","parameterGraph3","parameterGraph4","graphType","graphType2","graphType3","graphType4","barLine","lineLine","graphingType1","graphingType2","graphingType3","graphingType4","lakeName","locationCity","locationState","managementContact","hoaContact","managementContactNumber","hoaContactNumber","test1","Parameter_List1","name","shareholders","graphingData","graphingKeys","tableKeys","tableKeys1","tableData","graphInfo","graphInfoReverse","graphKeys","table1Keys","handleChange","bind","handleSubmit","handleSelect","writeData","values","String","find","includes","returnArr","forEach","childSnapshot","userID","parameterList","parameterList1Ref","parameterList1","newState1","Date","snapArray","snapshotToArray","sort","length","snapArrayReverse","reverse","keys","tableData1","i","tableData2","indexOf","Math","max","apply","indexOfMaxValue","iMax","x","columnData","dataField","text","formatter","deleteRow","arr1","parameter2ist1Ref","parameterList2","sample1Ref","rawMarkup","content","__html","row","isSelected","textAlign","fontSize","fillStates","event","remove","removesample","removesample1","handleButtonClick","handleMenuClick","popover","position","zIndex","cover","top","right","bottom","left","background","padding","xs","sm","md","lg","placement","paddingRight","paddingLeft","txt","lineHeight","width","deleteRow1"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, ResponsiveEmbed, ButtonToolbar, Form, Grid, FormGroup, Radio,  Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\n\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport { TiArrowSortedDown, TiBrush, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport domtoimage from 'dom-to-image';\nimport { SketchPicker } from 'react-color';\nimport fileDownload from \"js-file-download\";\n\n\nimport { ComposedChart, LineChart, LabelList, ResponsiveContainer, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, BarChart, Bar, CartesianGrid, Tooltip, Legend, Label} from 'recharts';\n\nimport { Row, Col, Tabs, message, Card, Drawer, Menu, Icon, Dropdown, Button, Layout, Carousel } from 'antd';\n\nimport Griddle from 'griddle-react';\n\nconst TabPane = Tabs.TabPane;\n\nconst styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  },\n};\n\n\n\n\n\n\n\n\n\nexport default class testingPage extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n          //checkbox status\n          checkboxState: true,\n          checkboxState1: true,\n          checkboxStatenitrogen: true,\n          checkboxStatephosphorus: true,\n          checkboxStatetds: true,\n          checkboxStatepH: true,\n          checkboxStatetss: true,\n          checkboxStatesalinity: true,\n          checkboxStateconductivity: true,\n          checkboxStatehardness: true,\n          checkboxStateturbidity: true,\n          checkboxStatedo: true,\n          checkboxStatetemp: true,\n\n\n\n          //data results\n          sampleDate: '',\n\n\n          //random id and key, key is for the tab number\n          id: '',\n          key: 1,\n          idKey: '',\n          page: '',\n          area: '',\n          displayColorPicker: false,\n\n          //colors for graph lines\n          tempColor: '#4C5B5C',\n          doColor: '#6C698D',\n          conductivityColor: '#DD1C1A',\n          tdsColor: '#086788',\n          salinityColor: '#F0C808',\n          pHColor: '#4C5B5C',\n          turbidityColor: '#6C698D',\n          nitrogenColor: '#086788',\n          phosphorusColor: '#F0C808',\n          totalHardnessColor: '#DD1C1A',\n          tssColor: '#086788',\n          sampleNotesColor: '#',\n\n\n          //this is the object array for the table\n          samples: [],\n          orders: [],\n          orders2: [],\n          dataList: [],\n          filter: \"\",\n          blobUrl: null,\n\n\n          //these are for the graphs\n\n\n          //for drawers\n          visible: false,\n          visible1: false,\n          visible2: false,\n\n\n          //Graph 1\n          parameterGraph1: 'salinity',\n          parameterGraph2: 'tds',\n          parameterGraph3: 'tss',\n          parameterGraph4: 'turbidity',\n          graphType: 'Area',\n          graphType2: 'Area',\n          graphType3: 'Bar',\n          graphType4: 'Bar',\n\n\n          //barLine\n          barLine: '',\n          lineLine: '',\n          graphingType1: '',\n          graphingType2: '',\n          graphingType3: '',\n          graphingType4: '',\n\n\n\n\n          //Inputs for Profile Page\n          lakeName: '',\n          locationCity: '',\n          locationState: '',\n          managementContact: '',\n          hoaContact: '',\n          managementContactNumber: '',\n          hoaContactNumber: '',\n\n          //testing\n          test: '<Area',\n          test1: '</Area>',\n\n          Parameter_List: [],\n          Parameter_List1: [],\n          Parameter_Name: '',\n          Parameter_Units: '',\n          Parameter_Input: '',\n\n          name: \"\",\n      shareholders: [{ name: \"\" }],\n\n          parameters: '',\n          graphingData: [],\n          graphingKeys: [],\n          tableKeys: [],\n          tableKeys1: [],\n          tableData: [],\n          graphInfo: '',\n          graphInfoReverse: '',\n          graphKeys: [],\n          table1Keys: '',\n          tableData: {},\n          columnData: [{}\n                            ],\n\n\n\n        }\n        //these are triggered events.  handleChange is for text box changes\n        //handlesubmit is for the form being submitted.\n        //every event trigger needs to be bound like is below with .bind\n        //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.writeData = this.writeData.bind(this);\n\n\n\n      }\n\n      //event triggered when text boxes of forms, values are changed\n      handleChange(e) {\n        const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n        let filter = this.state.filter;\n        let dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n        return String(value);\n              }).find(function (value) {\n                   return value.includes(filter);\n        });\n\n        });\n        let newState = [];\n\n\n\n\n\n      }\n      //event triggered when form is submitted\n      handleSubmit(e) {\n        e.preventDefault();\n        //fire.database().ref('samples') refers to the main title of the fire database.\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n        const samplesRef = fire.database().ref(`parameterList1/${user.uid}`);\n\n\n\n\n        const parameterInfo = {\n\n          date: this.state.sampleDate,\n          list: this.state.Parameter_List1.map((parameter) => {\n\n                            return (\n                            {\n                            Parameter_Name: parameter.Parameter_Name,\n                            Parameter_Units: parameter.Parameter_Units,\n                            Parameter_Input: parameter.Parameter_Input,\n                          }\n                            )\n                          })\n        }\n\n        console.log(parameterInfo);\n        samplesRef.push(parameterInfo);\n\n\n\n\n\n\n\n\n        //this.setState is used to clear the text boxes after the form has been submitted.\n        this.setState({\n          sampleDate: '',\n\n          visible: false,\n          visible1: false,\n          visible2: false,\n\n        });\n      });\n    }\n\n\n     snapshotToArray(snapshot) {\n        var returnArr = [];\n\n        snapshot.forEach(function(childSnapshot) {\n            var item = childSnapshot.val();\n            item.key = childSnapshot.key;\n\n            returnArr.push(item);\n        });\n\n        return returnArr;\n    };\n\n\n\n\n\n      componentDidMount(itemId) {\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n          console.log(user.uid);\n\n\n\n\n          this.setState({\n            userID: user.uid,\n\n          })\n\n\n\n\n          const parameterListRef = fire.database().ref(`parameterList/${user.uid}`);\n          parameterListRef.on('value', (snapshot) => {\n            let parameterList = snapshot.val();\n            console.log(parameterList);\n\n            let newState = [];\n          for (let order in parameterList) {\n            newState.push({\n              id: order,\n              Parameter_Name: parameterList[order].Parameter_Name,\n              Parameter_Units: parameterList[order].Parameter_Units,\n              Parameter_Input: parameterList[order].Parameter_Input,\n              color: parameterList[order].color,\n\n            });\n            console.log(newState);\n          }\n          this.setState({\n            Parameter_List: newState,\n          })\n          })\n\n          const parameterList1Ref = fire.database().ref(`parameterSample/${user.uid}`);\n          parameterList1Ref.on('value', (snapshot) => {\n            let parameterList1 = snapshot.val();\n            console.log(parameterList1);\n\n            this.setState({\n              graphingData: parameterList1,\n            })\n\n            let newState1 = [];\n          for (let order in parameterList1) {\n            newState1.push({\n              id: order,\n              date: parameterList1[order].Date,\n\n            });\n\n          }\n\n\n\n\n          let snapArray = this.snapshotToArray(snapshot);\n\n          let graphInfo = this.snapshotToArray(snapshot);\n          let graphInfoReverse = this.snapshotToArray(snapshot);\n\n\n          graphInfo.sort(function(a, b) {\n            if (a.date === b.date) {\n              return 0;\n            }\n            return a.date > b.date ? 1 : -1;\n        });\n\n        graphInfoReverse.sort(function(a, b) {\n          if (b.date === a.date) {\n            return 0;\n          }\n          return b.date > a.date ? 1 : -1;\n      });\n\n      if (snapArray.length == 0) {\n        console.log(\"do nothing\")\n      }\n\n      if (snapArray.length > 0) {\n        let snapArrayReverse = snapArray.reverse();\n        let graphKeys = Object.keys(snapArrayReverse[0]);\n\n        graphKeys = graphKeys.filter(e => e !== 'id');\n        graphKeys = graphKeys.filter(e => e !== 'key');\n        graphKeys = graphKeys.filter(e => e !== 'date');\n\n\n        console.log(graphKeys);\n\n\n\n        let tableData1 = [];\n        for (let i=0; i < graphInfoReverse.length; i++) {\n        //push send this data to the back of the chartData variable above.\n        tableData1.push(Object.keys(graphInfoReverse[i]));\n\n        }\n        console.log(tableData1);\n\n        let tableData2 = tableData1.map(function(a){return a.length;});\ntableData2.indexOf(Math.max.apply(Math, tableData2));\n\nlet indexOfMaxValue = tableData2.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n          console.log(tableData2);\n          console.log(indexOfMaxValue);\n\n          let table1Keys = Object.keys(graphInfoReverse[indexOfMaxValue]);\n          table1Keys = table1Keys.filter(e => e !== 'id');\n          console.log(table1Keys);\n\n\n\n\n            this.setState({\n              graphInfo: graphInfo,\n              graphInfoReverse: graphInfoReverse,\n              graphKeys: graphKeys,\n              table1Keys: table1Keys,\n\n\n            })\n            console.log(this.state.graphInfo);\n            console.log(this.state.graphInfoReverse);\n            console.log(this.state.graphKeys);\n            console.log(this.state.columnData);\n\n            let tableData = [];\n            for (let i=0; i < table1Keys.length; i++) {\n            //push send this data to the back of the chartData variable above.\n            tableData.push({dataField: table1Keys[i], text: table1Keys[i]});\n\n            }\n\n            tableData.push({dataField: 'delete',\n             text: 'Delete',\n             formatter: this.deleteRow.bind(this),\n\n            })\n\n            var arr = snapshot.val();\n\n            var arr1 = Object.keys(arr);\n\n\n            console.log(arr1);\n\n\n\n\n\n            console.log(tableData);\n\n            this.setState({\n              columnData: tableData,\n\n            })\n\n            console.log(this.state.tableData);\n\n\n\n\n\n\n\n\n          }\n\n\n\n\n\n\n\n\n\n\n          })\n\n          const parameter2ist1Ref = fire.database().ref(`parameterSample/${user.uid}`);\n          parameter2ist1Ref.on('value', (snapshot) => {\n            let parameterList2 = snapshot.val();\n            console.log(parameterList2);\n\n          })\n\n\n\n\n\n\n    })\n  }\n\n\n\n    fillStates(itemId) {\n      let area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n\n      const sampleRef = fire.database().ref(`/parameterInformation/${user.uid}/${itemId}`);\n      const sample1Ref = fire.database().ref(`/parameterList/${user.uid}/${itemId}`);\n\n      sampleRef.on('value', (snapshot) => {\n\n        this.setState({\n          visible1: true,\n\n\n        });\n\n      let orders = snapshot.val();\n      let id = fire.database().ref().child(`/monthlySamples/${user.uid}/${itemId}`).key;\n\n      let newState = [];\n      for (let order in orders) {\n        newState.push({\n          id: order,\n\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n          sampleNotes: orders[order].sampleNotes,\n\n        });\n      }\n      this.setState({\n\n        id: id,\n\n\n        sampleDate: snapshot.child('sampleDate').val(),\n        sampleTaker: snapshot.child('sampleTaker').val(),\n        temp: snapshot.child('temp').val(),\n        do: snapshot.child('do').val(),\n        conductivity: snapshot.child('conductivity').val(),\n        tds: snapshot.child('tds').val(),\n        salinity: snapshot.child('salinity').val(),\n        pH: snapshot.child('pH').val(),\n        turbidity: snapshot.child('turbidity').val(),\n        nitrogen: snapshot.child('nitrogen').val(),\n        phosphorus: snapshot.child('phosphorus').val(),\n        totalHardness: snapshot.child('totalHardness').val(),\n        tss: snapshot.child('tss').val(),\n        sampleNotes: snapshot.child('sampleNotes').val(),\n\n\n      })\n\n\n});\n\n    });\n  }\n\n\n  writeStates = (itemId) => {\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${this.state.id}`);\n\n\n    sampleRef.child(\"id\").set(this.state.id);\n\n\n    sampleRef.child(\"sampleDate\").set(this.state.sampleDate);\n    sampleRef.child(\"sampleTaker\").set(this.state.sampleTaker);\n    sampleRef.child(\"temp\").set(this.state.temp);\n    sampleRef.child(\"do\").set(this.state.do);\n    sampleRef.child(\"conductivity\").set(this.state.conductivity);\n    sampleRef.child(\"tds\").set(this.state.tds);\n    sampleRef.child(\"salinity\").set(this.state.salinity);\n    sampleRef.child(\"pH\").set(this.state.pH);\n    sampleRef.child(\"turbidity\").set(this.state.turbidity);\n    sampleRef.child(\"nitrogen\").set(this.state.nitrogen);\n    sampleRef.child(\"phosphorus\").set(this.state.phosphorus);\n    sampleRef.child(\"totalHardness\").set(this.state.totalHardness);\n    sampleRef.child(\"tss\").set(this.state.tss);\n    sampleRef.child(\"sampleNotes\").set(this.state.sampleNotes);\n\n\n\n  });\n\n\n  }\n\n\n\n  fillEmpty = (itemId) => {\n    let area = '';\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n\n    sampleRef.on('value', (snapshot) => {\n\n    let orders = snapshot.val();\n\n    let newState = [];\n    for (let order in orders) {\n      newState.push({\n        id: order,\n\n        sampleDate: orders[order].sampleDate,\n        sampleTaker: orders[order].sampleTaker,\n        temp: orders[order].temp,\n        do: orders[order].do,\n        conductivity: orders[order].conductivity,\n        tds: orders[order].tds,\n        salinity: orders[order].salinity,\n        pH: orders[order].pH,\n        turbidity: orders[order].turbidity,\n        nitrogen: orders[order].nitrogen,\n        phosphorus: orders[order].phosphorus,\n        totalHardness: orders[order].totalHardness,\n        tss: orders[order].tss,\n        sampleNotes: orders[order].sampleNotes,\n\n      });\n    }\n    this.setState({\n\n      visible: true,\n      sampleDate: '',\n      sampleTaker: '',\n      temp: '',\n      do: '',\n      conductivity: '',\n      tds: '',\n      salinity: '',\n      pH: '',\n      turbidity: '',\n      nitrogen: '',\n      phosphorus: '',\n      totalHardness: '',\n      tss: '',\n      sampleNotes: '',\n\n\n    })\n\n\n});\n  });\n}\n\n\n\n\n\n    handleSelect(key) {\n  this.setState({key});\n}\n\n\nwriteData (e) {\n  e.preventDefault();\n  //fire.database().ref('samples') refers to the main title of the fire database.\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n\n\n  const sample = {\n\n    id: this.state.id,\n    sampleDate: this.state.sampleDate,\n    sampleTaker: this.state.sampleTaker,\n    temp: this.state.temp,\n    do: this.state.do,\n    conductivity: this.state.conductivity,\n    tds: this.state.tds,\n    salinity: this.state.salinity,\n    pH: this.state.pH,\n    turbidity: this.state.turbidity,\n    nitrogen: this.state.nitrogen,\n    phosphorus: this.state.phosphorus,\n    totalHardness: this.state.totalHardness,\n    tss: this.state.tss,\n    sampleNotes: this.state.sampleNotes,\n  }\n\n  samplesRef.child(this.state.id).set(sample);\n\n  this.setState({\n    visible1: false,\n  })\n\n\n\n\n\n\n  //this.setState is used to clear the text boxes after the form has been submitted.\n\n});\n}\n\n\n\n\nexportPDF = () => {\n  this.resume.save();\n}\n\nrawMarkup(){\n  var rawMarkup = this.props.content\n  return { __html: rawMarkup };\n}\n\n\n\n\n\n nitrogenSort = (a, b, order) => {\n   let dataList = this.state.dataList;   // order is desc or asc\n  if (order === 'asc') {\n    return a.nitrogen - b.nitrogen;\n  } else {\n    return b.nitrogen - a.nitrogen;\n  }\n}\nphosphorusSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.phosphorus - b.phosphorus;\n } else {\n   return b.phosphorus - a.phosphorus;\n }\n}\ntdsSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.tds - b.tds;\n } else {\n   return b.tds - a.tds;\n }\n}\ntssSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.tss - b.tss;\n } else {\n   return b.tss - a.tss;\n }\n}\nsalinitySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.salinity - b.salinity;\n } else {\n   return b.salinity - a.salinity;\n }\n}\nturbiditySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.turbidity - b.turbidity;\n } else {\n   return b.turbidity - a.turbidity;\n }\n}\npHSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.pH - b.pH;\n } else {\n   return b.pH - a.pH;\n }\n}\nhardnessSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.totalHardness - b.totalHardness;\n } else {\n   return b.totalHardness - a.totalHardness;\n }\n}\ntempSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.temp - b.temp;\n } else {\n   return b.temp - a.temp;\n }\n}\ndoSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.do - b.do;\n } else {\n   return b.do - a.do;\n }\n}\nconductivitySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'asc') {\n   return a.conductivity - b.conductivity;\n } else {\n   return b.conductivity - a.conductivity;\n }\n}\n\n\n\neditRow(row, isSelected, e, id) {\n\n  return (\n      <div style={{textAlign: 'center'}}>\n    <Icon type=\"edit\" style={{fontSize: '24px'}}\n    onClick={() => this.fillStates(`${isSelected.id}`)}>\n      Click me\n    </Icon>\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n  onSubmit(event) {\n    event.preventDefault();\n  }\n\n\n\n\nhandleClick = () => {\n  this.setState({ displayColorPicker: !this.state.displayColorPicker })\n};\n\nhandleClose = () => {\n  this.setState({ displayColorPicker: false })\n};\n\ntempColorChange = (color) => {\n\n    console.log(this.state.color);\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const samplesRef = fire.database().ref(`colors/${user.uid}`);\n    const orderID = fire.database().ref(`/colors/${user.uid}/${orderID}`);\n    const sample = {\n      tempColor: color.hex\n    }\n    samplesRef.set(sample);\n    this.setState({\n      tempColor: color.hex,\n     });\n    });\n}\n\ntest = () => {\n  console.log(\"test\")\n}\n\n\nshowDrawer = () => {\n  this.setState({\n    visible: true,\n  });\n};\nonClose = () => {\n  this.setState({\n    visible: false,\n    visible1: false,\n    visible2: false,\n  });\n};\n\n\n\n\n\n\n\neditChart = (itemId) => {\n  let area = '';\n\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n\n  sampleRef.on('value', (snapshot) => {\n\n  let orders = snapshot.val();\n\n  let newState = [];\n\n  this.setState({\n\n    visible2: true,\n\n\n\n  })\n\n\n});\n});\n}\n\n\n\n\nfillParameterInfo = (e) => {\n  e.preventDefault();\n  //fire.database().ref('samples') refers to the main title of the fire database.\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const parameterListRef = fire.database().ref(`parameterList/${user.uid}`);\n\n  const parameterInfo = {\n    Parameter_Name: this.state.Parameter_Name,\n    Parameter_Units: this.state.Parameter_Units,\n    Parameter_Input: this.state.Parameter_Input,\n  }\n\n  parameterListRef.push(parameterInfo);\n  //this.setState is used to clear the text boxes after the form has been submitted.\n  this.setState({\n    Parameter_Name: '',\n    Parameter_Units: '',\n  });\n\n});\n}\n\nhandleSampleChange = idx => evt => {\n  const newParameters = this.state.Parameter_List.map((parameter, sidx) => {\n    if (idx !== sidx) return parameter;\n    return { ...parameter, Parameter_Input: evt.target.value };\n  });\n  this.setState({ Parameter_List: newParameters });\n  console.log(this.state.Parameter_List);\n\n\n  };\n\n  sampleSubmit = (e) => {\n    e.preventDefault();\n    //fire.database().ref('samples') refers to the main title of the fire database.\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const parameterListRef = fire.database().ref(`parameterSample/${user.uid}`);\n\n    const date = {date: this.state.sampleDate};\n    const color = {color: this.state.color};\n    const parameterInfo = {\n\n      list: this.state.Parameter_List.map((parameter) => {\n\n                        return (\n                        {\n                        Parameter_Name: parameter.Parameter_Name,\n                        Parameter_Units: parameter.Parameter_Units,\n                        Parameter_Input: parameter.Parameter_Input,\n                      }\n                        )\n                      })\n\n    }\n    console.log(parameterInfo.list);\n\n  let kvArray = parameterInfo.list;\n\n  let array = kvArray.map(parameter => {\n    var rObj = {};\n    rObj[parameter.Parameter_Name] = parameter.Parameter_Input;\n    return rObj;\n\n\n  })\n\n  let newArray = array.unshift(date);\n\n\n\n\nconsole.log(array);\nthis.setState({\n  parameters: array,\n})\nconsole.log(this.state.parameters);\n\n\n\n\nvar arr = this.state.Parameter_List;\nvar object = arr.reduce(\n    (obj, item) => Object.assign(obj, {date: this.state.sampleDate, color: this.state.color, id: item.id, [item.Parameter_Name]: item.Parameter_Input}) ,{});\n\nconsole.log(object);\n\n\n\nparameterListRef.push(object);\n\n\n\n    //this.setState is used to clear the text boxes after the form has been submitted.\n    this.setState({\n      Parameter_Name: '',\n      Parameter_Units: '',\n      Parameter_Input: '',\n      visible: false,\n      visible1: false,\n      visible2: false,\n\n    });\n\n  });\n  }\n\n\n   removesample(itemId) {\n\n    const sampleRef = fire.database().ref(`/parameterSample/${this.state.userID}/${itemId}`);\n\n    sampleRef.remove();\n\n\n  }\n\n  removesample1(itemId) {\n\n   const sampleRef = fire.database().ref(`/parameterList/${this.state.userID}/${itemId}`);\n\n   sampleRef.remove();\n\n\n }\n\n   deleteRow(row, isSelected, e, id, key) {\n\n    return (\n      <div style={{textAlign: 'center'}}>\n      <Icon type=\"delete\" style={{fontSize: '24px'}}\n      onClick={() => this.removesample(isSelected.key)}>\n        Click me\n      </Icon>\n      </div>\n    )\n  }\n\n  deleteRow1(row, isSelected, e, id, key) {\n\n   return (\n     <div style={{textAlign: 'center'}}>\n     <Icon type=\"delete\" style={{fontSize: '24px'}}\n     onClick={() => this.removesample1(isSelected.id)}>\n       Click me\n     </Icon>\n     </div>\n   )\n }\n\n handleChangeComplete = (color) => {\n    this.setState({ color: color.hex });\n  };\n\n\n\n\n\n\n\n\n      render() {\n\n\n\n\n\n\n\n\n\n        function handleButtonClick(e) {\n\n          console.log('click left button', e);\n        }\n\n        function handleMenuClick(e) {\n\n          console.log('click', e);\n        }\n\n\n\n\n\n\n   const popover = {\n      position: 'absolute',\n      zIndex: '2',\n    }\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n    }\n\n\n\n\n\n\n        return (\n          <Layout>\n\n            <div style={{ background: '#F0F0F0', padding: '5px' }}>\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n              <div style={{position: 'relative'}}>\n            <Col xs={24} sm={24} md={18} lg={18} xl={18}>\n              <h1><b>Monthly Samples</b></h1>\n              <h3><b>{this.state.lakeName}</b></h3>\n            </Col>\n            <Col xs={24} sm={24} md={6} lg={6} xl={6} style={{ textAlign: 'right'}}>\n          <Button size=\"large\" type=\"primary\" onClick={() => this.fillEmpty()}>+ Add Sample</Button>\n            <Drawer\n              title= \"Fill in Sample Form\"\n              placement={this.state.placement}\n              closable={false}\n              onClose={this.onClose}\n              visible={this.state.visible}\n              width={500}\n            >\n            <form>\n              <Row style={{textAlign: 'right'}}>\n              <Icon type=\"right-circle\"  style={{fontSize: '30px'}} onClick={() => this.onClose()}>+ Add Sample</Icon>\n              </Row>\n              <Row>\n            <FormGroup>\n            <Col xs={24} sm={6} md={6} lg={6} xl={6}><b>Sample Date</b></Col>\n            <Col xs={24} sm={18} md={18} lg={18} xl={18}>\n            <FormControl name='sampleDate' type='date' placeholder=\"Normal text\" value={this.state.sampleDate}\n            onChange={this.handleChange} /></Col>\n            </FormGroup>\n            </Row>\n            <Row>\n          <FormGroup>\n          <Col xs={24} sm={6} md={6} lg={6} xl={6}><b>Sample Date</b></Col>\n          <Col xs={24} sm={18} md={18} lg={18} xl={18}>\n            <SketchPicker\n          color={ this.state.color }\n          onChangeComplete={ this.handleChangeComplete }\n        />\n    </Col>\n  </FormGroup>\n          </Row>\n            {this.state.Parameter_List.map((parameter, idx) => {\n\n                          return (\n                            <Row>\n                      <FormGroup>\n                        <Col xs={24} sm={6} md={6} lg={6} xl={6}><b>{parameter.Parameter_Name}</b></Col>\n                        <Col xs={24} sm={18} md={18} lg={18} xl={18}>\n                        <FormControl name={parameter.Parameter_Name}\n                          onChange={this.handleSampleChange(idx)}  type=\"number\" placeholder=\"Normal text\" value={parameter.Parameter_Input} /></Col>\n                      </FormGroup>\n                      </Row>\n                    )})};\n\n\n\n\n\n            <Row style={{paddingTop: '10px', textAlign: 'right'}}>\n            <Button type=\"primary\" onClick={this.sampleSubmit} bsStyle=\"primary\">Add sample</Button>\n            </Row>\n\n\n\n\n\n            </form>\n\n\n\n            </Drawer>\n\n\n\n            </Col>\n\n          </div>\n            </Row>\n\n            </div>\n\n            <div style={{ background: '#F0F0F0', paddingTop: '15px', paddingRight: '5px', paddingLeft: '5px' }}>\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n\n\n                  <Card\n\n\n                  >\n                  <Tabs defaultActiveKey=\"1\" >\n              <TabPane tab=\"GRAPHS\" key=\"1\">\n                <Row>\n                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n\n\n\n                <Row >\n                <Col xs={24} sm={24} md={24} lg={24} xl={24} >\n\n\n\n\n            </Col>\n            </Row>\n            <Row>\n            <Col span={24}>\n            <hr></hr>\n            </Col>\n            </Row>\n\n\n            <Row>\n              <Row >\n              <Col xs={24} sm={24} md={24} lg={24} xl={24} >\n                <ResponsiveContainer width=\"100%\" aspect={8/3.0} minHeight={200}>\n                  <ComposedChart data={this.state.graphInfo}\n            syncId=\"anyId\">\n\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n\n\n              {this.state.graphKeys.map(txt => {\n                return (\n                  <Line type=\"monotone\" dataKey={txt}  fillOpacity={1} stroke=\"#0000FF\" fill=\"url(#colorNitrogen)\"><LabelList dataKey={txt} position=\"top\" /></Line>\n                )\n              })}\n\n\n\n\n\n\n\n            <Legend />\n\n          </ComposedChart>\n           </ResponsiveContainer>\n\n          </Col>\n          </Row>\n\n\n\n      </Row>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            </Col>\n          </Row>\n\n              </TabPane>\n\n              <TabPane tab=\"DATA TABLE\" key=\"2\">\n\n                <Row>\n                <Col span={24} style={{paddingTop: '15px'}}>\n\n                    <p style={{lineHeight: '2px'}}><b>DATA TABLE</b></p>\n\n                    <hr></hr>\n                </Col>\n                </Row>\n\n                <Row>\n\n\n                <BootstrapTable\n                  keyField='date'\n                  data={ this.state.graphInfoReverse }\n                  columns={\n\n\n\n                    this.state.columnData\n\n                     }\n                  />\n                </Row>\n              </TabPane>\n\n              <TabPane tab=\"CONSTITUENTS\" key=\"3\">\n                <Row>\n                <Col span={24} style={{paddingTop: '15px'}}>\n\n                    <p style={{lineHeight: '2px'}}><b>DATA TABLE</b></p>\n\n                    <hr></hr>\n              </Col>\n            </Row>\n            <Row>\n              <form>\n            <Row style={{paddingTop: '10px'}}>\n            <FormGroup>\n              <Col xs={24} sm={6} md={6} lg={6} xl={6}><b>Parameter Name</b></Col>\n              <Col xs={24} sm={18} md={18} lg={18} xl={18}>\n              <FormControl name=\"Parameter_Name\" onChange={this.handleChange} type=\"text\" placeholder=\"Name\" style={{ width: 350}} value={this.state.Parameter_Name} /></Col>\n            </FormGroup>\n            </Row>\n            <Row style={{paddingTop: '10px'}}>\n              <FormGroup>\n                <Col xs={24} sm={6} md={6} lg={6} xl={6}><b>Parameter Units</b></Col>\n                <Col xs={24} sm={18} md={18} lg={18} xl={18}>\n                <FormControl name=\"Parameter_Units\" onChange={this.handleChange} type=\"text\" placeholder=\"Units\"  style={{ width: 350}} value={this.state.Parameter_Units} /></Col>\n              </FormGroup>\n              </Row>\n\n              <Row style={{paddingTop: '10px', textAlign: 'left'}}>\n              <Button type=\"primary\" onClick={this.fillParameterInfo} bsStyle=\"primary\">Add Parameter</Button>\n              </Row>\n            </form>\n          </Row>\n\n                <Row style={{paddingTop: '10px'}}>\n                <Col span={24}>\n\n                  <BootstrapTable\n                    keyField='date'\n                    data={ this.state.Parameter_List }\n                    columns={\n\n\n\n                      [{dataField: 'Parameter_Name', text: 'Parameter'},\n                      {dataField: 'Parameter_Units', text: 'Units'},\n                      {dataField: 'delete',\n                       text: 'Delete',\n                       formatter: this.deleteRow1.bind(this),\n\n                      }]\n\n                       }\n                    />\n\n\n            </Col>\n            </Row>\n\n\n\n              </TabPane>\n\n\n\n\n\n            </Tabs>\n\n                  </Card>\n            </Col>\n            </Row>\n            </div>\n\n\n\n\n\n          </Layout>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}