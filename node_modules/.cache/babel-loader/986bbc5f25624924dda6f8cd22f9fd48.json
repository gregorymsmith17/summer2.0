{"ast":null,"code":"import _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/monthlySamples.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Button, ResponsiveEmbed, ButtonToolbar, Form, Grid, Row, FormGroup, Tab, Radio, Tabs, Col, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn, ExportCSVButton } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport domtoimage from 'dom-to-image';\nimport { ChromePicker } from 'react-color';\nimport fileDownload from \"js-file-download\";\nimport { LineChart, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label } from 'recharts';\nvar styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  }\n};\n\nvar ColoredLine = function ColoredLine(_ref) {\n  var color = _ref.color;\n  return React.createElement(\"hr\", {\n    style: {\n      color: color,\n      backgroundColor: color,\n      height: .8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n};\n\nvar monthlySamples =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(monthlySamples, _Component);\n\n  function monthlySamples(props) {\n    var _this;\n\n    _classCallCheck(this, monthlySamples);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(monthlySamples).call(this, props));\n\n    _this.writeStates = function (itemId) {\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(_this.state.id));\n        sampleRef.child(\"id\").set(_this.state.id);\n        sampleRef.child(\"sampleDate\").set(_this.state.sampleDate);\n        sampleRef.child(\"sampleTaker\").set(_this.state.sampleTaker);\n        sampleRef.child(\"temp\").set(_this.state.temp);\n        sampleRef.child(\"do\").set(_this.state.do);\n        sampleRef.child(\"conductivity\").set(_this.state.conductivity);\n        sampleRef.child(\"tds\").set(_this.state.tds);\n        sampleRef.child(\"salinity\").set(_this.state.salinity);\n        sampleRef.child(\"pH\").set(_this.state.pH);\n        sampleRef.child(\"turbidity\").set(_this.state.turbidity);\n        sampleRef.child(\"nitrogen\").set(_this.state.nitrogen);\n        sampleRef.child(\"phosphorus\").set(_this.state.phosphorus);\n        sampleRef.child(\"totalHardness\").set(_this.state.totalHardness);\n        sampleRef.child(\"tss\").set(_this.state.tss);\n        sampleRef.child(\"sampleNotes\").set(_this.state.sampleNotes);\n      });\n    };\n\n    _this.exportPDF = function () {\n      _this.resume.save();\n    };\n\n    _this.nitrogenSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.nitrogen - b.nitrogen;\n      } else {\n        return b.nitrogen - a.nitrogen;\n      }\n    };\n\n    _this.phosphorusSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.phosphorus - b.phosphorus;\n      } else {\n        return b.phosphorus - a.phosphorus;\n      }\n    };\n\n    _this.tdsSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.tds - b.tds;\n      } else {\n        return b.tds - a.tds;\n      }\n    };\n\n    _this.tssSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.tss - b.tss;\n      } else {\n        return b.tss - a.tss;\n      }\n    };\n\n    _this.salinitySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.salinity - b.salinity;\n      } else {\n        return b.salinity - a.salinity;\n      }\n    };\n\n    _this.turbiditySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.turbidity - b.turbidity;\n      } else {\n        return b.turbidity - a.turbidity;\n      }\n    };\n\n    _this.pHSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.pH - b.pH;\n      } else {\n        return b.pH - a.pH;\n      }\n    };\n\n    _this.hardnessSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.totalHardness - b.totalHardness;\n      } else {\n        return b.totalHardness - a.totalHardness;\n      }\n    };\n\n    _this.tempSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.temp - b.temp;\n      } else {\n        return b.temp - a.temp;\n      }\n    };\n\n    _this.doSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.do - b.do;\n      } else {\n        return b.do - a.do;\n      }\n    };\n\n    _this.conductivitySort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.conductivity - b.conductivity;\n      } else {\n        return b.conductivity - a.conductivity;\n      }\n    };\n\n    _this.handleExportCSVButtonClick = function (onClick) {\n      // Custom your onClick event here,\n      // it's not necessary to implement this function if you have no any process before onClick\n      console.log('This is my custom function for ExportCSVButton click event');\n      onClick();\n    };\n\n    _this.createCustomExportCSVButton = function (_onClick) {\n      return React.createElement(ExportCSVButton, {\n        btnText: \"Down CSV\",\n        onClick: function onClick() {\n          return _this.handleExportCSVButtonClick(_onClick);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837\n        },\n        __self: this\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    _this.handleChangeComplete = function (color) {\n      console.log(_this.state.color);\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"colors/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/colors/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          tempColor: color.hex\n        };\n        samplesRef.set(sample);\n\n        _this.setState({\n          tempColor: color.hex\n        }); //this.setState is used to clear the text boxes after the form has been submitted.\n\n      });\n    };\n\n    _this.state = {\n      //checkbox status\n      checkboxState: true,\n      checkboxState1: true,\n      checkboxStatenitrogen: true,\n      checkboxStatephosphorus: true,\n      checkboxStatetds: true,\n      checkboxStatepH: true,\n      checkboxStatetss: true,\n      checkboxStatesalinity: true,\n      checkboxStateconductivity: true,\n      checkboxStatehardness: true,\n      checkboxStateturbidity: true,\n      //data results\n      sampleDate: '',\n      sampleTaker: '',\n      temp: '',\n      do: '',\n      conductivity: '',\n      tds: '',\n      salinity: '',\n      pH: '',\n      turbidity: '',\n      nitrogen: '',\n      phosphorus: '',\n      totalHardness: '',\n      tss: '',\n      sampleNotes: '',\n      //random id and key, key is for the tab number\n      id: '',\n      key: 1,\n      idKey: '',\n      page: '',\n      area: '',\n      displayColorPicker: false,\n      color: '#9E4444',\n      tempColor: '',\n      //this is the object array for the table\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      //these are for the graphs\n      tempPlot: 'temp',\n      doPlot: 'do',\n      conductivityPlot: 'conductivity',\n      tdsPlot: 'tds',\n      salinityPlot: 'salinity',\n      pHPlot: 'pH',\n      turbidityPlot: 'turbidity',\n      nitrogenPlot: 'nitrogen',\n      phosphorusPlot: 'phosphorus',\n      totalHardnessPlot: 'totalHardness',\n      tssPlot: 'tss' //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.writeData = _this.writeData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //event triggered when text boxes of forms, values are changed\n\n\n  _createClass(monthlySamples, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      var filter = this.state.filter;\n      var dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n          return String(value);\n        }).find(function (value) {\n          return value.includes(filter);\n        });\n      });\n      var newState = [];\n    } //event triggered when form is submitted\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          sampleDate: _this2.state.sampleDate,\n          sampleTaker: _this2.state.sampleTaker,\n          temp: _this2.state.temp,\n          do: _this2.state.do,\n          conductivity: _this2.state.conductivity,\n          tds: _this2.state.tds,\n          salinity: _this2.state.salinity,\n          pH: _this2.state.pH,\n          turbidity: _this2.state.turbidity,\n          nitrogen: _this2.state.nitrogen,\n          phosphorus: _this2.state.phosphorus,\n          totalHardness: _this2.state.totalHardness,\n          tss: _this2.state.tss,\n          sampleNotes: _this2.state.sampleNotes,\n          id: _this2.state.id\n        };\n        samplesRef.push(sample); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this2.setState({\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n          sampleNotes: ''\n        });\n      });\n    } //this function is constantly running after the initial render.  Snapshot is used to look into the database.\n    //[] indicates an array value\n    //.map(Number) changes an array of strings to an array of integers\n    //snapshot.foreach(ss => {...}) **this looks in each \"Sample\" for the child of \"user\"**\n    //child of user can be child of BOD or child of tss or whatever.  It finds the value that is a child to that label.\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        samplesRef.on('value', function (snapshot) {\n          var dataList = snapshot.val();\n          var filter = [];\n          var orders = snapshot.val();\n          var orders2 = snapshot.val();\n          var newState = [];\n          var newState2 = [];\n          var newState3 = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n            newState2.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n          }\n\n          newState2.sort(function (a, b) {\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n          });\n          newState.sort(function (a, b) {\n            if (b.sampleDate === a.sampleDate) {\n              return 0;\n            }\n\n            return b.sampleDate > a.sampleDate ? 1 : -1;\n          });\n\n          _this3.setState({\n            orders: newState,\n            orders2: newState2,\n            dataList: newState,\n            color: _this3.state.color\n          });\n        });\n        var colors = fire.database().ref().child(\"/colors/\".concat(user.uid, \"/\").concat(itemId)).key;\n        colorsRef.on('value', function (snapshot) {\n          var colorList = snapshot.val();\n        });\n      });\n      console.log(this.state.color);\n    }\n  }, {\n    key: \"fillStates\",\n    value: function fillStates(itemId) {\n      var _this4 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          _this4.setState({\n            sampleDate: '',\n            sampleTaker: '',\n            temp: '',\n            do: '',\n            conductivity: '',\n            tds: '',\n            salinity: '',\n            pH: '',\n            turbidity: '',\n            nitrogen: '',\n            phosphorus: '',\n            totalHardness: '',\n            tss: '',\n            sampleNotes: ''\n          });\n\n          var orders = snapshot.val();\n          var id = fire.database().ref().child(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId)).key;\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n          }\n\n          _this4.setState({\n            id: id,\n            key: 4,\n            sampleDate: snapshot.child('sampleDate').val(),\n            sampleTaker: snapshot.child('sampleTaker').val(),\n            temp: snapshot.child('temp').val(),\n            do: snapshot.child('do').val(),\n            conductivity: snapshot.child('conductivity').val(),\n            tds: snapshot.child('tds').val(),\n            salinity: snapshot.child('salinity').val(),\n            pH: snapshot.child('pH').val(),\n            turbidity: snapshot.child('turbidity').val(),\n            nitrogen: snapshot.child('nitrogen').val(),\n            phosphorus: snapshot.child('phosphorus').val(),\n            totalHardness: snapshot.child('totalHardness').val(),\n            tss: snapshot.child('tss').val(),\n            sampleNotes: snapshot.child('sampleNotes').val()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"fillEmpty\",\n    value: function fillEmpty(itemId) {\n      var _this5 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes\n            });\n          }\n\n          _this5.setState({\n            id: '',\n            key: 3,\n            sampleDate: '',\n            sampleTaker: '',\n            temp: '',\n            do: '',\n            conductivity: '',\n            tds: '',\n            salinity: '',\n            pH: '',\n            turbidity: '',\n            nitrogen: '',\n            phosphorus: '',\n            totalHardness: '',\n            tss: '',\n            sampleNotes: ''\n          });\n        });\n      });\n    }\n  }, {\n    key: \"removesample\",\n    value: function removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.remove();\n      });\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(key) {\n      this.setState({\n        key: key\n      });\n    }\n  }, {\n    key: \"writeData\",\n    value: function writeData(e) {\n      var _this6 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(_this6.state.id));\n        var newCheckboxKey = firebase.database().ref().child('checkbox').push().key;\n        var id = newCheckboxKey;\n        var box = id;\n        var sample = {\n          id: _this6.state.id,\n          sampleDate: _this6.state.sampleDate,\n          sampleTaker: _this6.state.sampleTaker,\n          temp: _this6.state.temp,\n          do: _this6.state.do,\n          conductivity: _this6.state.conductivity,\n          tds: _this6.state.tds,\n          salinity: _this6.state.salinity,\n          pH: _this6.state.pH,\n          turbidity: _this6.state.turbidity,\n          nitrogen: _this6.state.nitrogen,\n          phosphorus: _this6.state.phosphorus,\n          totalHardness: _this6.state.totalHardness,\n          tss: _this6.state.tss,\n          sampleNotes: _this6.state.sampleNotes\n        };\n        samplesRef.child(_this6.state.id).set(sample); //this.setState is used to clear the text boxes after the form has been submitted.\n      });\n    }\n  }, {\n    key: \"rawMarkup\",\n    value: function rawMarkup() {\n      var rawMarkup = this.props.content;\n      return {\n        __html: rawMarkup\n      };\n    }\n  }, {\n    key: \"editRow\",\n    value: function editRow(row, isSelected, e, id) {\n      var _this7 = this;\n\n      console.log(\"\".concat(isSelected.id));\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      }, React.createElement(TiPencil, {\n        size: 20,\n        type: \"button\",\n        onClick: function onClick() {\n          return _this7.fillStates(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, \"Click me\"));\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(row, isSelected, e, id) {\n      var _this8 = this;\n\n      console.log(\"\".concat(isSelected.id));\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }, React.createElement(TiTrash, {\n        size: 20,\n        type: \"button\",\n        onClick: function onClick() {\n          return _this8.removesample(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }, \"Click me\"));\n    }\n  }, {\n    key: \"toggleNitrogen\",\n    value: function toggleNitrogen(event) {\n      this.setState({\n        checkboxState: !this.state.checkboxState\n      });\n      var checkboxState = this.state.checkboxState;\n\n      if (checkboxState) {\n        this.setState({\n          nitrogenPlot: ''\n        });\n      } else {\n        this.setState({\n          nitrogenPlot: 'nitrogen'\n        });\n      }\n    }\n  }, {\n    key: \"togglePhosphorus\",\n    value: function togglePhosphorus(event) {\n      this.setState({\n        checkboxStatephosphorus: !this.state.checkboxStatephosphorus\n      });\n      var checkboxState = this.state.checkboxStatephosphorus;\n\n      if (checkboxState) {\n        this.setState({\n          phosphorusPlot: ''\n        });\n      } else {\n        this.setState({\n          phosphorusPlot: 'phosphorus'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTemp\",\n    value: function toggleTemp(event) {\n      this.setState({\n        checkboxStatenitrogen: !this.state.checkboxStatenitrogen\n      });\n      var checkboxState = this.state.checkboxStatenitrogen;\n\n      if (checkboxState) {\n        this.setState({\n          tempPlot: ''\n        });\n      } else {\n        this.setState({\n          tempPlot: 'temp'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTDS\",\n    value: function toggleTDS(event) {\n      this.setState({\n        checkboxStatetds: !this.state.checkboxStatetds\n      });\n      var checkboxState = this.state.checkboxStatetds;\n\n      if (checkboxState) {\n        this.setState({\n          tdsPlot: ''\n        });\n      } else {\n        this.setState({\n          tdsPlot: 'tds'\n        });\n      }\n    }\n  }, {\n    key: \"togglepH\",\n    value: function togglepH(event) {\n      this.setState({\n        checkboxStatepH: !this.state.checkboxStatepH\n      });\n      var checkboxState = this.state.checkboxStatepH;\n\n      if (checkboxState) {\n        this.setState({\n          pHPlot: ''\n        });\n      } else {\n        this.setState({\n          pHPlot: 'pH'\n        });\n      }\n    }\n  }, {\n    key: \"toggletss\",\n    value: function toggletss(event) {\n      this.setState({\n        checkboxStatetss: !this.state.checkboxStatetss\n      });\n      var checkboxState = this.state.checkboxStatetss;\n\n      if (checkboxState) {\n        this.setState({\n          tssPlot: ''\n        });\n      } else {\n        this.setState({\n          tssPlot: 'tss'\n        });\n      }\n    }\n  }, {\n    key: \"togglesalinity\",\n    value: function togglesalinity(event) {\n      this.setState({\n        checkboxStatesalinity: !this.state.checkboxStatesalinity\n      });\n      var checkboxState = this.state.checkboxStatesalinity;\n\n      if (checkboxState) {\n        this.setState({\n          salinityPlot: ''\n        });\n      } else {\n        this.setState({\n          salinityPlot: 'salinity'\n        });\n      }\n    }\n  }, {\n    key: \"toggleHardness\",\n    value: function toggleHardness(event) {\n      this.setState({\n        checkboxStatehardness: !this.state.checkboxStatehardness\n      });\n      var checkboxState = this.state.checkboxStatehardness;\n\n      if (checkboxState) {\n        this.setState({\n          totalHardnessPlot: ''\n        });\n      } else {\n        this.setState({\n          totalHardnessPlot: 'totalHardness'\n        });\n      }\n    }\n  }, {\n    key: \"toggleTurbidity\",\n    value: function toggleTurbidity(event) {\n      this.setState({\n        checkboxStateturbidity: !this.state.checkboxStateturbidity\n      });\n      var checkboxState = this.state.checkboxStateturbidity;\n\n      if (checkboxState) {\n        this.setState({\n          turbidityPlot: ''\n        });\n      } else {\n        this.setState({\n          turbidityPlot: 'turbidity'\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      function buttonFormatter(cell, row) {\n        return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n      }\n\n      var options = {\n        exportCSVBtn: this.createCustomExportCSVButton\n      };\n      var nitrogenCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleNitrogen.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      }, \"Nitrogen\"));\n      var phosphorusCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglePhosphorus.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914\n        },\n        __self: this\n      }, \"Phosphorus\"));\n      var tempCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTemp.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919\n        },\n        __self: this\n      }, \"Temperature\"));\n      var tdsCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTDS.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924\n        },\n        __self: this\n      }, \"TDS\"));\n      var pHCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglepH.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929\n        },\n        __self: this\n      }, \"pH\"));\n      var tssCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggletss.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934\n        },\n        __self: this\n      }, \"TSS\"));\n      var salinityCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.togglesalinity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939\n        },\n        __self: this\n      }, \"Salinity\"));\n      var hardnessCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleHardness.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944\n        },\n        __self: this\n      }, \"Total Hardness\"));\n      var turbidityCheckbox = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: \"true\",\n        onClick: this.toggleTurbidity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949\n        },\n        __self: this\n      }, \"Turbidity\"));\n      var popover = {\n        position: 'absolute',\n        zIndex: '2'\n      };\n      var cover = {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 6,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972\n        },\n        __self: this\n      }, \"Monthly Sample Logs\")), React.createElement(Col, {\n        xs: 6,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        style: styles.topPad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"primary\",\n        onClick: function onClick() {\n          return _this9.fillEmpty();\n        },\n        eventKey: 3,\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 977\n        },\n        __self: this\n      }, \"+ Create New Sample Log\")))), React.createElement(Col, {\n        xs: 12,\n        sm: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        activeKey: this.state.key,\n        onSelect: this.handleSelect,\n        defaultActiveKey: 1,\n        id: \"uncontrolled-tab-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: 1,\n        title: \"+ Graphs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: styles.topPad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 988\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 7,\n        sm: 7,\n        md: 7,\n        lg: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"my-node\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        width: 750,\n        height: 400,\n        data: this.state.orders2,\n        syncId: \"anyId\",\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.nitrogenPlot,\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.phosphorusPlot,\n        stroke: \"#82ca9d, 3px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.tdsPlot,\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.pHPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.tempPlot,\n        strokeWidth: 1,\n        stroke: this.state.tempColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.tssPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.salinityPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.totalHardnessPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.turbidityPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010\n        },\n        __self: this\n      }), React.createElement(Brush, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        smOffset: 2,\n        xs: 2,\n        sm: 2,\n        md: 2,\n        lg: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020\n        },\n        __self: this\n      }, nitrogenCheckbox), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"info\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022\n        },\n        __self: this\n      }, \"Pick Color\"), this.state.displayColorPicker ? React.createElement(\"div\", {\n        style: popover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: cover,\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024\n        },\n        __self: this\n      }), React.createElement(ChromePicker, {\n        color: this.state.tempColor,\n        onChangeComplete: this.handleChangeComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025\n        },\n        __self: this\n      })) : null), React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028\n        },\n        __self: this\n      }, phosphorusCheckbox), React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029\n        },\n        __self: this\n      }, tempCheckbox), React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030\n        },\n        __self: this\n      }, tdsCheckbox), React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031\n        },\n        __self: this\n      }, pHCheckbox), React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      }, tssCheckbox), React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }, salinityCheckbox), React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034\n        },\n        __self: this\n      }, hardnessCheckbox), React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035\n        },\n        __self: this\n      }, turbidityCheckbox)))), React.createElement(Tab, {\n        eventKey: 2,\n        title: \"+ Monthly Samples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: styles.topPad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        sm: 10,\n        md: 10,\n        lg: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.dataList,\n        options: options,\n        exportCSV: true,\n        pagination: true,\n        containerStyle: {\n          width: '1000px',\n          overflowX: 'scroll'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1058\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"sampleDate\",\n        isKey: true,\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1068\n        },\n        __self: this\n      }, \"Sample Date\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"temp\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.tempSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"do\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.doSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070\n        },\n        __self: this\n      }, \"Dissolved Oxygen\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"conductivity\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.conductivitySort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1071\n        },\n        __self: this\n      }, \"Conductivity\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"tds\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.tdsSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1072\n        },\n        __self: this\n      }, \"Total Dissolved Solids\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"salinity\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.salinitySort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"nitrogen\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.nitrogenSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1074\n        },\n        __self: this\n      }, \"Total Nitrogen\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"phosphorus\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.phosphorusSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075\n        },\n        __self: this\n      }, \"Total Phosphorus\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"totalHardness\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.hardnessSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076\n        },\n        __self: this\n      }, \"Hardness\"), React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"tss\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        sortFunc: this.tssSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077\n        },\n        __self: this\n      }, \"TSS\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.editRow.bind(this),\n        width: \"110px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.deleteRow.bind(this),\n        width: \"110px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085\n        },\n        __self: this\n      }, \"Delete\")))))), React.createElement(Tab, {\n        eventKey: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"add-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1108\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112\n        },\n        __self: this\n      }, \"Monthly Sample Log\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1121\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124\n        },\n        __self: this\n      }, \"Results\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        name: \"sampleDate\",\n        placeholder: \"Date of Sample\",\n        onChange: this.handleChange,\n        value: this.state.sampleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"sampleTaker\",\n        placeholder: \"Your Name\",\n        onChange: this.handleChange,\n        value: this.state.sampleTaker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138\n        },\n        __self: this\n      }, \"Water Temperature\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"temp\",\n        placeholder: \"Temp of Sample\",\n        onChange: this.handleChange,\n        value: this.state.temp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142\n        },\n        __self: this\n      }, \"DO\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"do\",\n        placeholder: \"Dissolved Oxygen\",\n        onChange: this.handleChange,\n        value: this.state.do,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146\n        },\n        __self: this\n      }, \"Conductivity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"conductivity\",\n        placeholder: \"Conductivity\",\n        onChange: this.handleChange,\n        value: this.state.conductivity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1149\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150\n        },\n        __self: this\n      }, \"Total Dissolved Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tds\",\n        placeholder: \"Total Dissolved Solids\",\n        onChange: this.handleChange,\n        value: this.state.tds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"salinity\",\n        placeholder: \"Salinity\",\n        onChange: this.handleChange,\n        value: this.state.salinity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1157\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158\n        },\n        __self: this\n      }, \"pH\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"pH\",\n        placeholder: \"pH\",\n        onChange: this.handleChange,\n        value: this.state.pH,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1161\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162\n        },\n        __self: this\n      }, \"Turbidity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"turbidity\",\n        placeholder: \"Turbidity\",\n        onChange: this.handleChange,\n        value: this.state.turbidity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166\n        },\n        __self: this\n      }, \"Total Nitrogen\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"nitrogen\",\n        placeholder: \"Total Nitrogen\",\n        onChange: this.handleChange,\n        value: this.state.nitrogen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170\n        },\n        __self: this\n      }, \"Total Phosphorus\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"phosphorus\",\n        placeholder: \"Total Phosphorus\",\n        onChange: this.handleChange,\n        value: this.state.phosphorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174\n        },\n        __self: this\n      }, \"Total Hardness\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"totalHardness\",\n        placeholder: \"Total Hardness\",\n        onChange: this.handleChange,\n        value: this.state.totalHardness,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1177\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1178\n        },\n        __self: this\n      }, \"Total Suspended Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1179\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tss\",\n        placeholder: \"Total Suspended Solids\",\n        onChange: this.handleChange,\n        value: this.state.tss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1179\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182\n        },\n        __self: this\n      }, \"Sample Notes\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"textArea\",\n        style: {\n          height: 80,\n          width: 400\n        },\n        name: \"sampleNotes\",\n        placeholder: \"Sample Notes\",\n        onChange: this.handleChange,\n        value: this.state.sampleNotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183\n        },\n        __self: this\n      }))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        sm: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleSubmit,\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194\n        },\n        __self: this\n      }, \"Add sample\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196\n        },\n        __self: this\n      }))))))), React.createElement(Tab, {\n        eventKey: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"add-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.writeData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1211\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1212\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213\n        },\n        __self: this\n      }, \"Monthly Sample Log\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1217\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1218\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1219\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1221\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1222\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1224\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225\n        },\n        __self: this\n      }, \"Results\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1230\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1231\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        name: \"sampleDate\",\n        placeholder: \"Date of Sample\",\n        onChange: this.handleChange,\n        value: this.state.sampleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1234\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"sampleTaker\",\n        placeholder: \"Your Name\",\n        onChange: this.handleChange,\n        value: this.state.sampleTaker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1238\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1239\n        },\n        __self: this\n      }, \"Water Temperature\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"temp\",\n        placeholder: \"Temp of Sample\",\n        onChange: this.handleChange,\n        value: this.state.temp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1242\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1243\n        },\n        __self: this\n      }, \"DO\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"do\",\n        placeholder: \"Dissolved Oxygen\",\n        onChange: this.handleChange,\n        value: this.state.do,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1246\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1247\n        },\n        __self: this\n      }, \"Conductivity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1248\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"conductivity\",\n        placeholder: \"Conductivity\",\n        onChange: this.handleChange,\n        value: this.state.conductivity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1248\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251\n        },\n        __self: this\n      }, \"Total Dissolved Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tds\",\n        placeholder: \"Total Dissolved Solids\",\n        onChange: this.handleChange,\n        value: this.state.tds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"salinity\",\n        placeholder: \"Salinity\",\n        onChange: this.handleChange,\n        value: this.state.salinity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259\n        },\n        __self: this\n      }, \"pH\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"pH\",\n        placeholder: \"pH\",\n        onChange: this.handleChange,\n        value: this.state.pH,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1263\n        },\n        __self: this\n      }, \"Turbidity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"turbidity\",\n        placeholder: \"Turbidity\",\n        onChange: this.handleChange,\n        value: this.state.turbidity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267\n        },\n        __self: this\n      }, \"Total Nitrogen\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"nitrogen\",\n        placeholder: \"Total Nitrogen\",\n        onChange: this.handleChange,\n        value: this.state.nitrogen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271\n        },\n        __self: this\n      }, \"Total Phosphorus\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1272\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"phosphorus\",\n        placeholder: \"Total Phosphorus\",\n        onChange: this.handleChange,\n        value: this.state.phosphorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1272\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1274\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1275\n        },\n        __self: this\n      }, \"Total Hardness\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1276\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"totalHardness\",\n        placeholder: \"Total Hardness\",\n        onChange: this.handleChange,\n        value: this.state.totalHardness,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1276\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1279\n        },\n        __self: this\n      }, \"Total Suspended Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tss\",\n        placeholder: \"Total Suspended Solids\",\n        onChange: this.handleChange,\n        value: this.state.tss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1282\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1283\n        },\n        __self: this\n      }, \"Sample Notes\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1284\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"textArea\",\n        style: {\n          height: 80,\n          width: 400\n        },\n        name: \"sampleNotes\",\n        placeholder: \"Sample Notes\",\n        onChange: this.handleChange,\n        value: this.state.sampleNotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1284\n        },\n        __self: this\n      }))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        sm: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1295\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.writeData,\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1296\n        },\n        __self: this\n      }, \"Overwrite sample\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1298\n        },\n        __self: this\n      }))))))))))));\n    }\n  }]);\n\n  return monthlySamples;\n}(Component);\n\nexport { monthlySamples as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/monthlySamples.jsx"],"names":["React","Component","Navbar","Nav","NavItem","Button","ResponsiveEmbed","ButtonToolbar","Form","Grid","Row","FormGroup","Tab","Radio","Tabs","Col","Table","Popover","ControlLabel","MenuItem","DropdownButton","FormControl","Checkbox","Link","firebase","PDFExport","fire","BootstrapTable","BootstrapButton","TableHeaderColumn","ExportCSVButton","TiArrowSortedDown","TiArrowSortedUp","TiPencil","TiTrash","domtoimage","ChromePicker","fileDownload","LineChart","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Label","styles","topPad","paddingTop","ColoredLine","color","backgroundColor","height","monthlySamples","props","writeStates","itemId","removeAuthListener","auth","onAuthStateChanged","user","sampleRef","database","ref","uid","state","id","child","set","sampleDate","sampleTaker","temp","do","conductivity","tds","salinity","pH","turbidity","nitrogen","phosphorus","totalHardness","tss","sampleNotes","exportPDF","resume","save","nitrogenSort","a","b","order","dataList","phosphorusSort","tdsSort","tssSort","salinitySort","turbiditySort","pHSort","hardnessSort","tempSort","doSort","conductivitySort","handleExportCSVButtonClick","onClick","console","log","createCustomExportCSVButton","handleClick","setState","displayColorPicker","handleClose","handleChangeComplete","samplesRef","orderID","sample","tempColor","hex","checkboxState","checkboxState1","checkboxStatenitrogen","checkboxStatephosphorus","checkboxStatetds","checkboxStatepH","checkboxStatetss","checkboxStatesalinity","checkboxStateconductivity","checkboxStatehardness","checkboxStateturbidity","key","idKey","page","area","samples","orders","orders2","filter","blobUrl","tempPlot","doPlot","conductivityPlot","tdsPlot","salinityPlot","pHPlot","turbidityPlot","nitrogenPlot","phosphorusPlot","totalHardnessPlot","tssPlot","handleChange","bind","handleSubmit","handleSelect","writeData","e","target","name","value","item","Object","values","map","String","find","includes","newState","preventDefault","push","on","snapshot","val","newState2","newState3","sort","colors","colorsRef","colorList","remove","newCheckboxKey","box","rawMarkup","content","__html","row","isSelected","textAlign","fillStates","removesample","event","buttonFormatter","cell","options","exportCSVBtn","nitrogenCheckbox","toggleNitrogen","phosphorusCheckbox","togglePhosphorus","tempCheckbox","toggleTemp","tdsCheckbox","toggleTDS","pHCheckbox","togglepH","tssCheckbox","toggletss","salinityCheckbox","togglesalinity","hardnessCheckbox","toggleHardness","turbidityCheckbox","toggleTurbidity","popover","position","zIndex","cover","top","right","bottom","left","fillEmpty","r","onSubmit","width","overflowX","type","delay","editRow","deleteRow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Button, ResponsiveEmbed, ButtonToolbar, Form, Grid, Row, FormGroup, Tab, Radio, Tabs, Col, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn, ExportCSVButton} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport domtoimage from 'dom-to-image';\nimport { ChromePicker } from 'react-color';\nimport fileDownload from \"js-file-download\";\n\n\nimport { LineChart, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label} from 'recharts';\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  },\n};\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: .8\n        }}\n    />\n);\n\n\n\nexport default class monthlySamples extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n          //checkbox status\n          checkboxState: true,\n          checkboxState1: true,\n          checkboxStatenitrogen: true,\n          checkboxStatephosphorus: true,\n          checkboxStatetds: true,\n          checkboxStatepH: true,\n          checkboxStatetss: true,\n          checkboxStatesalinity: true,\n          checkboxStateconductivity: true,\n          checkboxStatehardness: true,\n          checkboxStateturbidity: true,\n\n\n\n          //data results\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n          sampleNotes: '',\n\n          //random id and key, key is for the tab number\n          id: '',\n          key: 1,\n          idKey: '',\n          page: '',\n          area: '',\n          displayColorPicker: false,\n          color: '#9E4444',\n          tempColor: '',\n\n\n          //this is the object array for the table\n          samples: [],\n          orders: [],\n          orders2: [],\n          dataList: [],\n          filter: \"\",\n          blobUrl: null,\n\n\n          //these are for the graphs\n          tempPlot: 'temp',\n          doPlot: 'do',\n          conductivityPlot: 'conductivity',\n          tdsPlot: 'tds',\n          salinityPlot: 'salinity',\n          pHPlot: 'pH',\n          turbidityPlot: 'turbidity',\n          nitrogenPlot: 'nitrogen',\n          phosphorusPlot: 'phosphorus',\n          totalHardnessPlot: 'totalHardness',\n          tssPlot: 'tss',\n\n\n\n\n        }\n        //these are triggered events.  handleChange is for text box changes\n        //handlesubmit is for the form being submitted.\n        //every event trigger needs to be bound like is below with .bind\n        //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.writeData = this.writeData.bind(this);\n\n\n\n\n\n      }\n\n      //event triggered when text boxes of forms, values are changed\n      handleChange(e) {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n        let filter = this.state.filter;\n        let dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n        return String(value);\n              }).find(function (value) {\n                   return value.includes(filter);\n        });\n\n        });\n        let newState = [];\n\n\n\n\n\n      }\n      //event triggered when form is submitted\n      handleSubmit(e) {\n        e.preventDefault();\n        //fire.database().ref('samples') refers to the main title of the fire database.\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n        const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n        const orderID = fire.database().ref(`/monthlySamples/${user.uid}/${orderID}`);\n\n\n        const sample = {\n\n          sampleDate: this.state.sampleDate,\n          sampleTaker: this.state.sampleTaker,\n          temp: this.state.temp,\n          do: this.state.do,\n          conductivity: this.state.conductivity,\n          tds: this.state.tds,\n          salinity: this.state.salinity,\n          pH: this.state.pH,\n          turbidity: this.state.turbidity,\n          nitrogen: this.state.nitrogen,\n          phosphorus: this.state.phosphorus,\n          totalHardness: this.state.totalHardness,\n          tss: this.state.tss,\n          sampleNotes: this.state.sampleNotes,\n\n          id: this.state.id,\n        }\n\n\n\n\n        samplesRef.push(sample);\n        //this.setState is used to clear the text boxes after the form has been submitted.\n        this.setState({\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n          sampleNotes: '',\n\n\n\n        });\n      });\n    }\n\n\n\n\n\n      //this function is constantly running after the initial render.  Snapshot is used to look into the database.\n      //[] indicates an array value\n      //.map(Number) changes an array of strings to an array of integers\n      //snapshot.foreach(ss => {...}) **this looks in each \"Sample\" for the child of \"user\"**\n      //child of user can be child of BOD or child of tss or whatever.  It finds the value that is a child to that label.\n\n      componentDidMount() {\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n          const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n          samplesRef.on('value', (snapshot) => {\n\n\n            let dataList = snapshot.val();\n            let filter = [];\n            let orders = snapshot.val();\n            let orders2 = snapshot.val();\n\n            let newState = [];\n            let newState2 = [];\n            let newState3 = [];\n\n          for (let order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes,\n            });\n            newState2.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n              sampleNotes: orders[order].sampleNotes,\n            });\n\n\n\n\n          }\n\n          newState2.sort(function(a, b) {\n\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n        });\n        newState.sort(function(a, b) {\n\n          if (b.sampleDate === a.sampleDate) {\n            return 0;\n          }\n          return b.sampleDate > a.sampleDate ? 1 : -1;\n      });\n\n\n\n          this.setState({\n            orders: newState,\n            orders2: newState2,\n            dataList: newState,\n            color: this.state.color,\n          });\n\n        });\n        let colors = fire.database().ref().child(`/colors/${user.uid}/${itemId}`).key;\n        colorsRef.on('value', (snapshot) => {\n          let colorList = snapshot.val();\n\n        });\n\n      });\n      console.log(this.state.color);\n\n\n    }\n\n\n\n    fillStates(itemId) {\n      let area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n      sampleRef.on('value', (snapshot) => {\n\n        this.setState({\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n          sampleNotes: '',\n\n        });\n\n      let orders = snapshot.val();\n      let id = fire.database().ref().child(`/monthlySamples/${user.uid}/${itemId}`).key;\n\n      let newState = [];\n      for (let order in orders) {\n        newState.push({\n          id: order,\n\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n          sampleNotes: orders[order].sampleNotes,\n\n        });\n      }\n      this.setState({\n\n        id: id,\n        key: 4,\n\n        sampleDate: snapshot.child('sampleDate').val(),\n        sampleTaker: snapshot.child('sampleTaker').val(),\n        temp: snapshot.child('temp').val(),\n        do: snapshot.child('do').val(),\n        conductivity: snapshot.child('conductivity').val(),\n        tds: snapshot.child('tds').val(),\n        salinity: snapshot.child('salinity').val(),\n        pH: snapshot.child('pH').val(),\n        turbidity: snapshot.child('turbidity').val(),\n        nitrogen: snapshot.child('nitrogen').val(),\n        phosphorus: snapshot.child('phosphorus').val(),\n        totalHardness: snapshot.child('totalHardness').val(),\n        tss: snapshot.child('tss').val(),\n        sampleNotes: snapshot.child('sampleNotes').val(),\n\n\n      })\n\n\n});\n\n    });\n  }\n\n\n  writeStates = (itemId) => {\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${this.state.id}`);\n\n\n    sampleRef.child(\"id\").set(this.state.id);\n\n\n    sampleRef.child(\"sampleDate\").set(this.state.sampleDate);\n    sampleRef.child(\"sampleTaker\").set(this.state.sampleTaker);\n    sampleRef.child(\"temp\").set(this.state.temp);\n    sampleRef.child(\"do\").set(this.state.do);\n    sampleRef.child(\"conductivity\").set(this.state.conductivity);\n    sampleRef.child(\"tds\").set(this.state.tds);\n    sampleRef.child(\"salinity\").set(this.state.salinity);\n    sampleRef.child(\"pH\").set(this.state.pH);\n    sampleRef.child(\"turbidity\").set(this.state.turbidity);\n    sampleRef.child(\"nitrogen\").set(this.state.nitrogen);\n    sampleRef.child(\"phosphorus\").set(this.state.phosphorus);\n    sampleRef.child(\"totalHardness\").set(this.state.totalHardness);\n    sampleRef.child(\"tss\").set(this.state.tss);\n    sampleRef.child(\"sampleNotes\").set(this.state.sampleNotes);\n\n\n\n  });\n\n\n  }\n\n\n\n  fillEmpty(itemId) {\n    let area = '';\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n\n    sampleRef.on('value', (snapshot) => {\n\n    let orders = snapshot.val();\n\n    let newState = [];\n    for (let order in orders) {\n      newState.push({\n        id: order,\n\n        sampleDate: orders[order].sampleDate,\n        sampleTaker: orders[order].sampleTaker,\n        temp: orders[order].temp,\n        do: orders[order].do,\n        conductivity: orders[order].conductivity,\n        tds: orders[order].tds,\n        salinity: orders[order].salinity,\n        pH: orders[order].pH,\n        turbidity: orders[order].turbidity,\n        nitrogen: orders[order].nitrogen,\n        phosphorus: orders[order].phosphorus,\n        totalHardness: orders[order].totalHardness,\n        tss: orders[order].tss,\n        sampleNotes: orders[order].sampleNotes,\n\n      });\n    }\n    this.setState({\n\n      id: '',\n      key: 3,\n      sampleDate: '',\n      sampleTaker: '',\n      temp: '',\n      do: '',\n      conductivity: '',\n      tds: '',\n      salinity: '',\n      pH: '',\n      turbidity: '',\n      nitrogen: '',\n      phosphorus: '',\n      totalHardness: '',\n      tss: '',\n      sampleNotes: '',\n\n\n    })\n\n\n});\n  });\n}\n\n\n\n    removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n      sampleRef.remove();\n    });\n    }\n\n    handleSelect(key) {\n  this.setState({key});\n}\n\n\nwriteData (e) {\n  e.preventDefault();\n  //fire.database().ref('samples') refers to the main title of the fire database.\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n  const orderID = fire.database().ref(`/monthlySamples/${user.uid}/${this.state.id}`);\n  const newCheckboxKey = firebase.database().ref().child('checkbox').push().key;\n\n  let id = newCheckboxKey;\n  let box = id;\n\n\n  const sample = {\n\n    id: this.state.id,\n    sampleDate: this.state.sampleDate,\n    sampleTaker: this.state.sampleTaker,\n    temp: this.state.temp,\n    do: this.state.do,\n    conductivity: this.state.conductivity,\n    tds: this.state.tds,\n    salinity: this.state.salinity,\n    pH: this.state.pH,\n    turbidity: this.state.turbidity,\n    nitrogen: this.state.nitrogen,\n    phosphorus: this.state.phosphorus,\n    totalHardness: this.state.totalHardness,\n    tss: this.state.tss,\n    sampleNotes: this.state.sampleNotes,\n  }\n\n  samplesRef.child(this.state.id).set(sample);\n\n\n\n\n\n\n  //this.setState is used to clear the text boxes after the form has been submitted.\n\n});\n}\n\n\n\n\nexportPDF = () => {\n  this.resume.save();\n}\n\nrawMarkup(){\n  var rawMarkup = this.props.content\n  return { __html: rawMarkup };\n}\n\n\n\n\n\n nitrogenSort = (a, b, order) => {\n   let dataList = this.state.dataList;   // order is desc or asc\n  if (order === 'desc') {\n    return a.nitrogen - b.nitrogen;\n  } else {\n    return b.nitrogen - a.nitrogen;\n  }\n}\nphosphorusSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.phosphorus - b.phosphorus;\n } else {\n   return b.phosphorus - a.phosphorus;\n }\n}\ntdsSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.tds - b.tds;\n } else {\n   return b.tds - a.tds;\n }\n}\ntssSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.tss - b.tss;\n } else {\n   return b.tss - a.tss;\n }\n}\nsalinitySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.salinity - b.salinity;\n } else {\n   return b.salinity - a.salinity;\n }\n}\nturbiditySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.turbidity - b.turbidity;\n } else {\n   return b.turbidity - a.turbidity;\n }\n}\npHSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.pH - b.pH;\n } else {\n   return b.pH - a.pH;\n }\n}\nhardnessSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.totalHardness - b.totalHardness;\n } else {\n   return b.totalHardness - a.totalHardness;\n }\n}\ntempSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.temp - b.temp;\n } else {\n   return b.temp - a.temp;\n }\n}\ndoSort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.do - b.do;\n } else {\n   return b.do - a.do;\n }\n}\nconductivitySort = (a, b, order) => {\n  let dataList = this.state.dataList;   // order is desc or asc\n if (order === 'desc') {\n   return a.conductivity - b.conductivity;\n } else {\n   return b.conductivity - a.conductivity;\n }\n}\n\n\n\neditRow(row, isSelected, e, id) {\n  console.log(`${isSelected.id}`);\n  return (\n      <div style={{textAlign: 'center'}}>\n    <TiPencil size={20} type=\"button\"\n    onClick={() => this.fillStates(`${isSelected.id}`)}>\n      Click me\n    </TiPencil>\n    </div>\n  )\n}\n\ndeleteRow(row, isSelected, e, id) {\n  console.log(`${isSelected.id}`);\n  return (\n    <div style={{textAlign: 'center'}}>\n    <TiTrash  size={20} type=\"button\"\n    onClick={() => this.removesample(`${isSelected.id}`)}>\n      Click me\n    </TiTrash>\n    </div>\n  )\n}\n\n\n\n\n\n\ntoggleNitrogen(event) {\n    this.setState({\n      checkboxState: !this.state.checkboxState\n    });\n    const checkboxState = this.state.checkboxState;\n    if (checkboxState) {\n      this.setState({\n        nitrogenPlot: '',\n      })\n    } else {\n      this.setState({\n        nitrogenPlot: 'nitrogen',\n      })\n    }\n  }\n  togglePhosphorus(event) {\n      this.setState({\n        checkboxStatephosphorus: !this.state.checkboxStatephosphorus\n      });\n      const checkboxState = this.state.checkboxStatephosphorus;\n      if (checkboxState) {\n        this.setState({\n          phosphorusPlot: '',\n        })\n      } else {\n        this.setState({\n          phosphorusPlot: 'phosphorus',\n        })\n      }\n    }\n    toggleTemp(event) {\n        this.setState({\n          checkboxStatenitrogen: !this.state.checkboxStatenitrogen\n        });\n        const checkboxState = this.state.checkboxStatenitrogen;\n        if (checkboxState) {\n          this.setState({\n            tempPlot: '',\n          })\n        } else {\n          this.setState({\n            tempPlot: 'temp',\n          })\n        }\n      }\n      toggleTDS(event) {\n          this.setState({\n            checkboxStatetds: !this.state.checkboxStatetds\n          });\n          const checkboxState = this.state.checkboxStatetds;\n          if (checkboxState) {\n            this.setState({\n              tdsPlot: '',\n            })\n          } else {\n            this.setState({\n              tdsPlot: 'tds',\n            })\n          }\n        }\n        togglepH(event) {\n            this.setState({\n              checkboxStatepH: !this.state.checkboxStatepH\n            });\n            const checkboxState = this.state.checkboxStatepH;\n            if (checkboxState) {\n              this.setState({\n                pHPlot: '',\n              })\n            } else {\n              this.setState({\n                pHPlot: 'pH',\n              })\n            }\n          }\n          toggletss(event) {\n              this.setState({\n                checkboxStatetss: !this.state.checkboxStatetss\n              });\n              const checkboxState = this.state.checkboxStatetss;\n              if (checkboxState) {\n                this.setState({\n                  tssPlot: '',\n                })\n              } else {\n                this.setState({\n                  tssPlot: 'tss',\n                })\n              }\n            }\n            togglesalinity(event) {\n                this.setState({\n                  checkboxStatesalinity: !this.state.checkboxStatesalinity\n                });\n                const checkboxState = this.state.checkboxStatesalinity;\n                if (checkboxState) {\n                  this.setState({\n                    salinityPlot: '',\n                  })\n                } else {\n                  this.setState({\n                    salinityPlot: 'salinity',\n                  })\n                }\n              }\n              toggleHardness(event) {\n                  this.setState({\n                    checkboxStatehardness: !this.state.checkboxStatehardness\n                  });\n                  const checkboxState = this.state.checkboxStatehardness;\n                  if (checkboxState) {\n                    this.setState({\n                      totalHardnessPlot: '',\n                    })\n                  } else {\n                    this.setState({\n                      totalHardnessPlot: 'totalHardness',\n                    })\n                  }\n                }\n                toggleTurbidity(event) {\n                    this.setState({\n                      checkboxStateturbidity: !this.state.checkboxStateturbidity\n                    });\n                    const checkboxState = this.state.checkboxStateturbidity;\n                    if (checkboxState) {\n                      this.setState({\n                        turbidityPlot: '',\n                      })\n                    } else {\n                      this.setState({\n                        turbidityPlot: 'turbidity',\n                      })\n                    }\n                  }\n\n\n\n\n  onSubmit(event) {\n    event.preventDefault();\n  }\n\n  handleExportCSVButtonClick = (onClick) => {\n  // Custom your onClick event here,\n  // it's not necessary to implement this function if you have no any process before onClick\n  console.log('This is my custom function for ExportCSVButton click event');\n  onClick();\n}\ncreateCustomExportCSVButton = (onClick) => {\n  return (\n    <ExportCSVButton\n      btnText='Down CSV'\n      onClick={ () => this.handleExportCSVButtonClick(onClick) }/>\n  );\n}\n\n\nhandleClick = () => {\n  this.setState({ displayColorPicker: !this.state.displayColorPicker })\n};\n\nhandleClose = () => {\n  this.setState({ displayColorPicker: false })\n};\n\nhandleChangeComplete = (color) => {\n\n    console.log(this.state.color);\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const samplesRef = fire.database().ref(`colors/${user.uid}`);\n    const orderID = fire.database().ref(`/colors/${user.uid}/${orderID}`);\n\n\n    const sample = {\n\n      tempColor: color.hex\n\n    }\n\n    samplesRef.set(sample);\n    this.setState({\n      tempColor: color.hex,\n\n     });\n    //this.setState is used to clear the text boxes after the form has been submitted.\n\n\n\n    });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      render() {\n        function buttonFormatter(cell, row){\n  return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n}\nconst options = {\n  exportCSVBtn: this.createCustomExportCSVButton\n};\n\n   const nitrogenCheckbox = (\n     <span>\n       <input\n       type=\"checkbox\"\n       defaultChecked='true'\n       onClick={this.toggleNitrogen.bind(this)}\n       />\n     <label>Nitrogen</label>\n     </span>\n   );\n   const phosphorusCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglePhosphorus.bind(this)}/>\n     <label>Phosphorus</label>\n     </span>\n   );\n   const tempCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTemp.bind(this)}/>\n     <label>Temperature</label>\n     </span>\n   );\n   const tdsCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTDS.bind(this)}/>\n     <label>TDS</label>\n     </span>\n   );\n   const pHCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglepH.bind(this)}/>\n     <label>pH</label>\n     </span>\n   );\n   const tssCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggletss.bind(this)}/>\n     <label>TSS</label>\n     </span>\n   );\n   const salinityCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.togglesalinity.bind(this)}/>\n     <label>Salinity</label>\n     </span>\n   );\n   const hardnessCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleHardness.bind(this)}/>\n     <label>Total Hardness</label>\n     </span>\n   );\n   const turbidityCheckbox = (\n     <span><input type=\"checkbox\" defaultChecked='true' onClick={this.toggleTurbidity.bind(this)}/>\n     <label>Turbidity</label>\n     </span>\n   );\n   const popover = {\n      position: 'absolute',\n      zIndex: '2',\n    }\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n    }\n\n\n        return (\n    <div>\n\n      <Grid>\n        <Row>\n          <Row>\n            <Col xs={6} md={6}>\n          <h3>Monthly Sample Logs</h3>\n\n          </Col>\n          <Col xs={6} md={6}>\n            <ButtonToolbar style={styles.topPad}>\n          <Button bsStyle=\"primary\" onClick={() => this.fillEmpty()} eventKey={3} bsSize=\"large\">+ Create New Sample Log</Button>\n        </ButtonToolbar>\n          </Col>\n          </Row>\n          <Col xs={12} sm={10} md={10}>\n\n\n      <Tabs activeKey={this.state.key} onSelect={this.handleSelect} defaultActiveKey={1} id=\"uncontrolled-tab-example\">\n\n        <Tab eventKey={1} title=\"+ Graphs\">\n\n          <Row style={styles.topPad}>\n\n          <Col xs={7} sm={7} md={7} lg={7}>\n\n\n          <div id=\"my-node\">\n          <LineChart\n            width={750} height={400} data={this.state.orders2} syncId=\"anyId\"\n            margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n        <CartesianGrid strokeDasharray=\"3 3\"/>\n        <XAxis dataKey=\"sampleDate\"/>\n        <YAxis/>\n        <Tooltip/>\n\n          <Line type=\"monotone\" dataKey={this.state.nitrogenPlot}  stroke=\"#8884d8\" activeDot={{r: 8}}/>\n        <Line type=\"monotone\" dataKey={this.state.phosphorusPlot}  stroke=\"#82ca9d, 3px\" />\n         <Line type=\"monotone\" dataKey={this.state.tdsPlot} stroke=\"#8884d8\" activeDot={{r: 8}}/>\n        <Line type=\"monotone\" dataKey={this.state.pHPlot} stroke=\"#82ca9d\" />\n        <Line type=\"monotone\" dataKey={this.state.tempPlot} strokeWidth={1}  stroke={this.state.tempColor} />\n        <Line type=\"monotone\" dataKey={this.state.tssPlot} stroke=\"#82ca9d\" />\n        <Line type=\"monotone\" dataKey={this.state.salinityPlot} stroke=\"#82ca9d\" />\n        <Line type=\"monotone\" dataKey={this.state.totalHardnessPlot} stroke=\"#82ca9d\" />\n        <Line type=\"monotone\" dataKey={this.state.turbidityPlot} stroke=\"#82ca9d\" />\n        <Brush />\n        <Legend />\n        </LineChart>\n\n        </div>\n      </Col>\n        <Col smOffset={2} xs={2} sm={2} md={2} lg={2}>\n\n\n      <form onSubmit={this.onSubmit.bind(this)}>{nitrogenCheckbox}</form>\n        <div>\n          <Button bsStyle=\"info\" onClick={ this.handleClick }>Pick Color</Button>\n          { this.state.displayColorPicker ? <div style={ popover }>\n            <div style={ cover } onClick={ this.handleClose }/>\n            <ChromePicker color={ this.state.tempColor } onChangeComplete={ this.handleChangeComplete } />\n          </div> : null }\n        </div>\n      <form onSubmit={this.onSubmit.bind(this)}>{phosphorusCheckbox}</form>\n      <form onSubmit={this.onSubmit.bind(this)}>{tempCheckbox}</form>\n      <form onSubmit={this.onSubmit.bind(this)}>{tdsCheckbox}</form>\n      <form onSubmit={this.onSubmit.bind(this)}>{pHCheckbox}</form>\n      <form onSubmit={this.onSubmit.bind(this)}>{tssCheckbox}</form>\n      <form onSubmit={this.onSubmit.bind(this)}>{salinityCheckbox}</form>\n      <form onSubmit={this.onSubmit.bind(this)}>{hardnessCheckbox}</form>\n      <form onSubmit={this.onSubmit.bind(this)}>{turbidityCheckbox}</form>\n\n        </Col>\n\n\n\n        </Row>\n\n\n\n\n        </Tab>\n\n        <Tab eventKey={2} title=\"+ Monthly Samples\">\n          <Grid>\n\n          <Row style={styles.topPad}>\n\n\n\n            <Col xs={10} sm={10} md={10} lg={10}>\n\n\n              <BootstrapTable\n              data={ this.state.dataList }\n              options={options}\n              exportCSV\n              pagination\n              containerStyle={{width: '1000px',overflowX: 'scroll'}}\n\n\n              >\n\n  <TableHeaderColumn width='110px' dataField='sampleDate' isKey filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Sample Date</TableHeaderColumn>\n  <TableHeaderColumn width='110px' dataField='temp' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.tempSort }>Temperature</TableHeaderColumn>\n  <TableHeaderColumn width='110px' dataField='do' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.doSort }>Dissolved Oxygen</TableHeaderColumn>\n  <TableHeaderColumn width='110px' dataField='conductivity' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.conductivitySort }>Conductivity</TableHeaderColumn>\n  <TableHeaderColumn width='110px' dataField='tds' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.tdsSort }>Total Dissolved Solids</TableHeaderColumn>\n  <TableHeaderColumn width='110px' dataField='salinity' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.salinitySort }>Salinity</TableHeaderColumn>\n    <TableHeaderColumn width='110px' dataField='nitrogen' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.nitrogenSort }>Total Nitrogen</TableHeaderColumn>\n      <TableHeaderColumn width='110px' dataField='phosphorus' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.phosphorusSort }>Total Phosphorus</TableHeaderColumn>\n        <TableHeaderColumn width='110px' dataField='totalHardness' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.hardnessSort }>Hardness</TableHeaderColumn>\n          <TableHeaderColumn width='110px' dataField='tss' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort sortFunc={ this.tssSort }>TSS</TableHeaderColumn>\n\n        <TableHeaderColumn\n              dataField='button'\n              dataFormat={this.editRow.bind(this)}\n              width='110px'\n              >Edit</TableHeaderColumn>\n\n          <TableHeaderColumn\n                dataField='button'\n                dataFormat={this.deleteRow.bind(this)}\n                width='110px'\n                >Delete</TableHeaderColumn>\n\n\n              </BootstrapTable>\n              </Col>\n\n          </Row>\n        </Grid>\n          </Tab>\n\n\n\n\n\n\n      <Tab eventKey={3} >\n        <Grid>\n          <Row>\n            <Col xs={10} md={10}>\n        <section className='add-item'>\n          <form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col xs={4} sm={4} md={4}>\n                <h2>Monthly Sample Log</h2>\n                </Col>\n\n                </Row>\n                <hr></hr>\n                <Row>\n                  <Col xs={8} sm={8} md={8}>\n\n  <Table striped bordered condensed hover>\n  <thead>\n  <tr>\n  <th>Description</th>\n  <th>Results</th>\n\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  <td>Date</td>\n  <td><input type=\"date\" name=\"sampleDate\" placeholder=\"Date of Sample\" onChange={this.handleChange} value={this.state.sampleDate} /></td>\n  </tr>\n  <tr>\n  <td>Name</td>\n  <td><input type=\"text\" name=\"sampleTaker\" placeholder=\"Your Name\" onChange={this.handleChange} value={this.state.sampleTaker} /></td>\n  </tr>\n  <tr>\n  <td>Water Temperature</td>\n  <td><input type=\"number\" name=\"temp\" placeholder=\"Temp of Sample\" onChange={this.handleChange} value={this.state.temp} /></td>\n  </tr>\n  <tr>\n  <td>DO</td>\n  <td><input type=\"number\" name=\"do\" placeholder=\"Dissolved Oxygen\" onChange={this.handleChange} value={this.state.do} /></td>\n  </tr>\n  <tr>\n  <td>Conductivity</td>\n  <td><input type=\"number\" name=\"conductivity\" placeholder=\"Conductivity\" onChange={this.handleChange} value={this.state.conductivity} /></td>\n  </tr>\n  <tr>\n  <td>Total Dissolved Solids</td>\n  <td><input type=\"number\" name=\"tds\" placeholder=\"Total Dissolved Solids\" onChange={this.handleChange} value={this.state.tds} /></td>\n  </tr>\n  <tr>\n  <td>Salinity</td>\n  <td><input type=\"number\" name=\"salinity\" placeholder=\"Salinity\" onChange={this.handleChange} value={this.state.salinity} /></td>\n  </tr>\n  <tr>\n  <td>pH</td>\n  <td><input type=\"number\" name=\"pH\" placeholder=\"pH\" onChange={this.handleChange} value={this.state.pH} /></td>\n  </tr>\n  <tr>\n  <td>Turbidity</td>\n  <td><input type=\"number\" name=\"turbidity\" placeholder=\"Turbidity\" onChange={this.handleChange} value={this.state.turbidity} /></td>\n  </tr>\n  <tr>\n  <td>Total Nitrogen</td>\n  <td><input type=\"number\" name=\"nitrogen\" placeholder=\"Total Nitrogen\" onChange={this.handleChange} value={this.state.nitrogen} /></td>\n  </tr>\n  <tr>\n  <td>Total Phosphorus</td>\n  <td><input type=\"number\" name=\"phosphorus\" placeholder=\"Total Phosphorus\" onChange={this.handleChange} value={this.state.phosphorus} /></td>\n  </tr>\n  <tr>\n  <td>Total Hardness</td>\n  <td><input type=\"number\" name=\"totalHardness\" placeholder=\"Total Hardness\" onChange={this.handleChange} value={this.state.totalHardness} /></td>\n  </tr>\n  <tr>\n  <td>Total Suspended Solids</td>\n  <td><input type=\"number\" name=\"tss\" placeholder=\"Total Suspended Solids\" onChange={this.handleChange} value={this.state.tss} /></td>\n  </tr>\n  <tr>\n  <td>Sample Notes</td>\n  <td><input  type=\"textArea\" style={{ height: 80, width: 400 }}  name=\"sampleNotes\" placeholder=\"Sample Notes\" onChange={this.handleChange} value={this.state.sampleNotes} /></td>\n  </tr>\n\n  </tbody>\n  </Table>\n\n</Col>\n                  </Row>\n\n                  <Row>\n                  <Col xs={10} sm={10} md={10}>\n            <Button onClick={this.handleSubmit} bsStyle=\"primary\">Add sample</Button>\n            </Col></Row>\n            <hr></hr>\n          </form>\n        </section>\n\n        </Col>\n        </Row>\n\n        </Grid>\n      </Tab>\n      <Tab eventKey={4} >\n        <Grid>\n          <Row>\n            <Col xs={10} md={10}>\n        <section className='add-item'>\n          <form onSubmit={this.writeData}>\n            <Row>\n              <Col xs={4} sm={4} md={4}>\n                <h2>Monthly Sample Log</h2>\n                </Col>\n\n                </Row>\n                <hr></hr>\n                <Row>\n                  <Col xs={8} sm={8} md={8}>\n\n  <Table striped bordered condensed hover>\n  <thead>\n  <tr>\n  <th>Description</th>\n  <th>Results</th>\n\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  <td>Date</td>\n  <td><input type=\"date\" name=\"sampleDate\" placeholder=\"Date of Sample\" onChange={this.handleChange} value={this.state.sampleDate} /></td>\n  </tr>\n  <tr>\n  <td>Name</td>\n  <td><input type=\"text\" name=\"sampleTaker\" placeholder=\"Your Name\" onChange={this.handleChange} value={this.state.sampleTaker} /></td>\n  </tr>\n  <tr>\n  <td>Water Temperature</td>\n  <td><input type=\"number\" name=\"temp\" placeholder=\"Temp of Sample\" onChange={this.handleChange} value={this.state.temp} /></td>\n  </tr>\n  <tr>\n  <td>DO</td>\n  <td><input type=\"number\" name=\"do\" placeholder=\"Dissolved Oxygen\" onChange={this.handleChange} value={this.state.do} /></td>\n  </tr>\n  <tr>\n  <td>Conductivity</td>\n  <td><input type=\"number\" name=\"conductivity\" placeholder=\"Conductivity\" onChange={this.handleChange} value={this.state.conductivity} /></td>\n  </tr>\n  <tr>\n  <td>Total Dissolved Solids</td>\n  <td><input type=\"number\" name=\"tds\" placeholder=\"Total Dissolved Solids\" onChange={this.handleChange} value={this.state.tds} /></td>\n  </tr>\n  <tr>\n  <td>Salinity</td>\n  <td><input type=\"number\" name=\"salinity\" placeholder=\"Salinity\" onChange={this.handleChange} value={this.state.salinity} /></td>\n  </tr>\n  <tr>\n  <td>pH</td>\n  <td><input type=\"number\" name=\"pH\" placeholder=\"pH\" onChange={this.handleChange} value={this.state.pH} /></td>\n  </tr>\n  <tr>\n  <td>Turbidity</td>\n  <td><input type=\"number\" name=\"turbidity\" placeholder=\"Turbidity\" onChange={this.handleChange} value={this.state.turbidity} /></td>\n  </tr>\n  <tr>\n  <td>Total Nitrogen</td>\n  <td><input type=\"number\" name=\"nitrogen\" placeholder=\"Total Nitrogen\" onChange={this.handleChange} value={this.state.nitrogen} /></td>\n  </tr>\n  <tr>\n  <td>Total Phosphorus</td>\n  <td><input type=\"number\" name=\"phosphorus\" placeholder=\"Total Phosphorus\" onChange={this.handleChange} value={this.state.phosphorus} /></td>\n  </tr>\n  <tr>\n  <td>Total Hardness</td>\n  <td><input type=\"number\" name=\"totalHardness\" placeholder=\"Total Hardness\" onChange={this.handleChange} value={this.state.totalHardness} /></td>\n  </tr>\n  <tr>\n  <td>Total Suspended Solids</td>\n  <td><input type=\"number\" name=\"tss\" placeholder=\"Total Suspended Solids\" onChange={this.handleChange} value={this.state.tss} /></td>\n  </tr>\n  <tr>\n  <td>Sample Notes</td>\n  <td><input  type=\"textArea\" style={{ height: 80, width: 400 }}  name=\"sampleNotes\" placeholder=\"Sample Notes\" onChange={this.handleChange} value={this.state.sampleNotes} /></td>\n  </tr>\n\n\n  </tbody>\n  </Table>\n\n</Col>\n                  </Row>\n\n                  <Row>\n                  <Col xs={10} sm={10} md={10}>\n            <Button onClick={this.writeData} bsStyle=\"primary\">Overwrite sample</Button>\n            </Col></Row>\n            <hr></hr>\n          </form>\n\n        </section>\n\n        </Col>\n        </Row>\n\n        </Grid>\n      </Tab>\n\n\n\n\n    </Tabs>\n\n\n    </Col>\n    </Row>\n    </Grid>\n\n    </div>\n        )\n            }\n          }\n"]},"metadata":{},"sourceType":"module"}