{"ast":null,"code":"import _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/maintenanceReports.jsx\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Button, ResponsiveEmbed, ButtonToolbar, Form, Grid, Row, FormGroup, Tab, Radio, Tabs, Col, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn, ExportCSVButton } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport { LineChart, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label } from 'recharts';\nvar styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  }\n};\n\nvar ColoredLine = function ColoredLine(_ref) {\n  var color = _ref.color;\n  return React.createElement(\"hr\", {\n    style: {\n      color: color,\n      backgroundColor: color,\n      height: .8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n};\n\nvar maintenanceReports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(maintenanceReports, _Component);\n\n  function maintenanceReports(props) {\n    var _this;\n\n    _classCallCheck(this, maintenanceReports);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(maintenanceReports).call(this, props));\n\n    _this.writeStates = function (itemId) {\n      _this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(_this.state.id));\n        sampleRef.child(\"id\").set(_this.state.id);\n        sampleRef.child(\"sampleDate\").set(_this.state.sampleDate);\n        sampleRef.child(\"sampleTaker\").set(_this.state.sampleTaker);\n        sampleRef.child(\"temp\").set(_this.state.temp);\n        sampleRef.child(\"do\").set(_this.state.do);\n        sampleRef.child(\"conductivity\").set(_this.state.conductivity);\n        sampleRef.child(\"tds\").set(_this.state.tds);\n        sampleRef.child(\"salinity\").set(_this.state.salinity);\n        sampleRef.child(\"pH\").set(_this.state.pH);\n        sampleRef.child(\"turbidity\").set(_this.state.turbidity);\n        sampleRef.child(\"nitrogen\").set(_this.state.nitrogen);\n        sampleRef.child(\"phosphorus\").set(_this.state.phosphorus);\n        sampleRef.child(\"totalHardness\").set(_this.state.totalHardness);\n        sampleRef.child(\"tss\").set(_this.state.tss);\n      });\n    };\n\n    _this.handleBtnClick = function () {\n      var order = 'desc';\n\n      if (order === 'desc') {\n        _this.refs.table.handleSort('asc', 'name');\n\n        order = 'asc';\n      } else {\n        _this.refs.table.handleSort('desc', 'name');\n\n        order = 'desc';\n      }\n    };\n\n    _this.exportPDF = function () {\n      _this.resume.save();\n    };\n\n    _this.DOSort = function (a, b, order) {\n      var dataList = _this.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.DOResult - b.DOResult;\n      } else {\n        return b.DOResult - a.DOResult;\n      }\n    };\n\n    _this.handleExportCSVButtonClick = function (onClick) {\n      // Custom your onClick event here,\n      // it's not necessary to implement this function if you have no any process before onClick\n      console.log('This is my custom function for ExportCSVButton click event');\n      onClick();\n    };\n\n    _this.createCustomExportCSVButton = function (_onClick) {\n      return React.createElement(ExportCSVButton, {\n        btnText: \"Down CSV\",\n        onClick: function onClick() {\n          return _this.handleExportCSVButtonClick(_onClick);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      //Inputs for Maintenance Report\n      maintenanceDate: '',\n      maintenanceWorker: '',\n      mechanicalEquipmentNotes: '',\n      electricalEquipmentNotes: '',\n      aquaticVegetationNotes: '',\n      shortlineNotes: '',\n      miscNotes: '',\n      //Misc. for chaing taps and id's\n      id: '',\n      key: 1,\n      idKey: '',\n      page: '',\n      area: '',\n      //used for table data\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.writeData = _this.writeData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //event triggered when text boxes of forms, values are changed\n\n\n  _createClass(maintenanceReports, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      var filter = this.state.filter;\n      var dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n          return String(value);\n        }).find(function (value) {\n          return value.includes(filter);\n        });\n      });\n      var newState = [];\n    } //event triggered when form is submitted\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"maintenanceReport/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/maintenanceReport/\".concat(user.uid, \"/\").concat(orderID));\n        var maintenanceReport = {\n          maintenanceDate: _this2.state.maintenanceDate,\n          maintenanceWorker: _this2.state.maintenanceWorker,\n          mechanicalEquipmentNotes: _this2.state.mechanicalEquipmentNotes,\n          electricalEquipmentNotes: _this2.state.electricalEquipmentNotes,\n          aquaticVegetationNotes: _this2.state.aquaticVegetationNotes,\n          shortlineNotes: _this2.state.shortlineNotes,\n          miscNotes: _this2.state.miscNotes,\n          id: _this2.state.id\n        };\n        samplesRef.push(maintenanceReport); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this2.setState({\n          maintenanceDate: '',\n          maintenanceWorker: '',\n          mechanicalEquipmentNotes: '',\n          electricalEquipmentNotes: '',\n          aquaticVegetationNotes: '',\n          shortlineNotes: '',\n          miscNotes: ''\n        });\n      });\n    } //this function is constantly running after the initial render.  Snapshot is used to look into the database.\n    //[] indicates an array value\n    //.map(Number) changes an array of strings to an array of integers\n    //snapshot.foreach(ss => {...}) **this looks in each \"Sample\" for the child of \"user\"**\n    //child of user can be child of BOD or child of tss or whatever.  It finds the value that is a child to that label.\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        samplesRef.on('value', function (snapshot) {\n          var dataList = snapshot.val();\n          var filter = [];\n          var orders = snapshot.val();\n          var orders2 = snapshot.val();\n          var newState = [];\n          var newState2 = [];\n          var newState3 = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              maintenanceDate: orders[order].maintenanceDate,\n              maintenanceWorker: orders[order].maintenanceWorker,\n              mechanicalEquipmentNotes: orders[order].mechanicalEquipmentNotes,\n              electricalEquipmentNotes: orders[order].electricalEquipmentNotes,\n              aquaticVegetationNotes: orders[order].aquaticVegetationNotes,\n              shortlineNotes: orders[order].shortlineNotes,\n              miscNotes: orders[order].miscNotes\n            });\n          }\n\n          newState2.sort(function (a, b) {\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n          });\n          newState.sort(function (a, b) {\n            if (b.sampleDate === a.sampleDate) {\n              return 0;\n            }\n\n            return b.sampleDate > a.sampleDate ? 1 : -1;\n          });\n\n          _this3.setState({\n            orders: newState,\n            orders2: newState2,\n            dataList: newState\n          });\n\n          console.log(_this3.state.dataList);\n        });\n      });\n    }\n  }, {\n    key: \"fillStates\",\n    value: function fillStates(itemId) {\n      var _this4 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          _this4.setState({\n            maintenanceDate: '',\n            maintenanceWorker: '',\n            mechanicalEquipmentNotes: '',\n            electricalEquipmentNotes: '',\n            aquaticVegetationNotes: '',\n            shortlineNotes: '',\n            miscNotes: ''\n          });\n\n          var orders = snapshot.val();\n          var id = fire.database().ref().child(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId)).key;\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              maintenanceDate: orders[order].maintenanceDate,\n              maintenanceWorker: orders[order].maintenanceWorker,\n              mechanicalEquipmentNotes: orders[order].mechanicalEquipmentNotes,\n              electricalEquipmentNotes: orders[order].electricalEquipmentNotes,\n              aquaticVegetationNotes: orders[order].aquaticVegetationNotes,\n              shortlineNotes: orders[order].shortlineNotes,\n              miscNotes: orders[order].miscNotes\n            });\n          }\n\n          _this4.setState({\n            id: id,\n            key: 4,\n            maintenanceDate: snapshot.child('maintenanceDate').val(),\n            maintenanceWorker: snapshot.child('maintenanceWorker').val(),\n            mechanicalEquipmentNotes: snapshot.child('mechanicalEquipmentNotes').val(),\n            electricalEquipmentNotes: snapshot.child('electricalEquipmentNotes').val(),\n            aquaticVegetationNotes: snapshot.child('aquaticVegetationNotes').val(),\n            shortlineNotes: snapshot.child('shortlineNotes').val(),\n            miscNotes: snapshot.child('miscNotes').val()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"fillEmpty\",\n    value: function fillEmpty(itemId) {\n      var _this5 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss\n            });\n          }\n\n          _this5.setState({\n            id: '',\n            key: 3,\n            sampleDate: '',\n            sampleTaker: '',\n            temp: '',\n            do: '',\n            conductivity: '',\n            tds: '',\n            salinity: '',\n            pH: '',\n            turbidity: '',\n            nitrogen: '',\n            phosphorus: '',\n            totalHardness: '',\n            tss: ''\n          });\n        });\n      });\n    }\n  }, {\n    key: \"createNewWorkOrder\",\n    value: function createNewWorkOrder(itemId) {\n      var _this6 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss\n            });\n          }\n\n          _this6.setState({\n            id: snapshot.child('id').val(),\n            key: 3,\n            sampleDate: snapshot.child('sampleDate').val(),\n            sampleTaker: snapshot.child('sampleTaker').val(),\n            temp: snapshot.child('temp').val(),\n            do: snapshot.child('do').val(),\n            conductivity: snapshot.child('conductivity').val(),\n            tds: snapshot.child('tds').val(),\n            salinity: snapshot.child('salinity').val(),\n            pH: snapshot.child('pH').val(),\n            turbidity: snapshot.child('turbidity').val(),\n            nitrogen: snapshot.child('nitrogen').val(),\n            phosphorus: snapshot.child('phosphorus').val(),\n            totalHardness: snapshot.child('totalHardness').val(),\n            tss: snapshot.child('tss').val()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"removesample\",\n    value: function removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.remove();\n      });\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(key) {\n      this.setState({\n        key: key\n      });\n    }\n  }, {\n    key: \"writeData\",\n    value: function writeData(e) {\n      var _this7 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(_this7.state.id));\n        var newCheckboxKey = firebase.database().ref().child('checkbox').push().key;\n        var id = newCheckboxKey;\n        var box = id;\n        var sample = {\n          id: _this7.state.id,\n          sampleDate: _this7.state.sampleDate,\n          sampleTaker: _this7.state.sampleTaker,\n          temp: _this7.state.temp,\n          do: _this7.state.do,\n          conductivity: _this7.state.conductivity,\n          tds: _this7.state.tds,\n          salinity: _this7.state.salinity,\n          pH: _this7.state.pH,\n          turbidity: _this7.state.turbidity,\n          nitrogen: _this7.state.nitrogen,\n          phosphorus: _this7.state.phosphorus,\n          totalHardness: _this7.state.totalHardness,\n          tss: _this7.state.tss\n        };\n        samplesRef.child(_this7.state.id).set(sample); //this.setState is used to clear the text boxes after the form has been submitted.\n      });\n    }\n  }, {\n    key: \"rawMarkup\",\n    value: function rawMarkup() {\n      var rawMarkup = this.props.content;\n      return {\n        __html: rawMarkup\n      };\n    }\n  }, {\n    key: \"editRow\",\n    value: function editRow(row, isSelected, e, id) {\n      var _this8 = this;\n\n      console.log(\"\".concat(isSelected.id));\n      return React.createElement(TiPencil, {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this8.fillStates(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, \"Click me\");\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(row, isSelected, e, id) {\n      var _this9 = this;\n\n      console.log(\"\".concat(isSelected.id));\n      return React.createElement(TiTrash, {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this9.removesample(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, \"Click me\");\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    //...\n    value: function render() {\n      var _this10 = this;\n\n      function buttonFormatter(cell, row) {\n        return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n      }\n\n      var options = {\n        exportCSVBtn: this.createCustomExportCSVButton\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 6,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, \"Maintenance Reports\")), React.createElement(Col, {\n        xs: 6,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        style: styles.topPad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this10.fillEmpty();\n        },\n        eventKey: 3,\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, \"+ Create Maintenance Report\")))), React.createElement(Col, {\n        xs: 12,\n        sm: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        activeKey: this.state.key,\n        onSelect: this.handleSelect,\n        defaultActiveKey: 1,\n        id: \"uncontrolled-tab-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: 1,\n        title: \"+ Maintenance Reports\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: styles.topPad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        sm: 10,\n        md: 10,\n        lg: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.dataList,\n        options: options,\n        exportCSV: true,\n        pagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"sampleDate\",\n        isKey: true,\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }, \"Sample Date\"), React.createElement(TableHeaderColumn, {\n        dataField: \"temp\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(TableHeaderColumn, {\n        dataField: \"do\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      }, \"Dissolved Oxygen\"), React.createElement(TableHeaderColumn, {\n        dataField: \"conductivity\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, \"Conductivity\"), React.createElement(TableHeaderColumn, {\n        dataField: \"tds\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }, \"Total Dissolved Solids\"), React.createElement(TableHeaderColumn, {\n        dataField: \"salinity\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(TableHeaderColumn, {\n        dataField: \"nitrogen\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        },\n        __self: this\n      }, \"Total Nitrogen\"), React.createElement(TableHeaderColumn, {\n        dataField: \"phosphorus\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }, \"Total Phosphorus\"), React.createElement(TableHeaderColumn, {\n        dataField: \"totalHardness\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }, \"Hardness\"), React.createElement(TableHeaderColumn, {\n        dataField: \"tss\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, \"TSS\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.editRow.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.deleteRow.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }, \"Delete\")))))), React.createElement(Tab, {\n        eventKey: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"add-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }, \"Monthly Sample Log\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, \"Item\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        },\n        __self: this\n      }, \"Description\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        name: \"sampleDate\",\n        placeholder: \"Date of Sample\",\n        onChange: this.handleChange,\n        value: this.state.sampleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"sampleTaker\",\n        placeholder: \"Your Name\",\n        onChange: this.handleChange,\n        value: this.state.sampleTaker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, \"Water Temperature\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"temp\",\n        placeholder: \"Temp of Sample\",\n        onChange: this.handleChange,\n        value: this.state.temp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761\n        },\n        __self: this\n      }, \"DO\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"do\",\n        placeholder: \"Dissolved Oxygen\",\n        onChange: this.handleChange,\n        value: this.state.do,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      }, \"Conductivity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"conductivity\",\n        placeholder: \"Conductivity\",\n        onChange: this.handleChange,\n        value: this.state.conductivity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769\n        },\n        __self: this\n      }, \"Total Dissolved Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tds\",\n        placeholder: \"Total Dissolved Solids\",\n        onChange: this.handleChange,\n        value: this.state.tds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"salinity\",\n        placeholder: \"Salinity\",\n        onChange: this.handleChange,\n        value: this.state.salinity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777\n        },\n        __self: this\n      }, \"pH\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"pH\",\n        placeholder: \"pH\",\n        onChange: this.handleChange,\n        value: this.state.pH,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781\n        },\n        __self: this\n      }, \"Turbidity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"turbidity\",\n        placeholder: \"Turbidity\",\n        onChange: this.handleChange,\n        value: this.state.turbidity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        },\n        __self: this\n      }, \"Total Nitrogen\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"nitrogen\",\n        placeholder: \"Total Nitrogen\",\n        onChange: this.handleChange,\n        value: this.state.nitrogen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      }, \"Total Phosphorus\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"phosphorus\",\n        placeholder: \"Total Phosphorus\",\n        onChange: this.handleChange,\n        value: this.state.phosphorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793\n        },\n        __self: this\n      }, \"Total Hardness\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"totalHardness\",\n        placeholder: \"Total Hardness\",\n        onChange: this.handleChange,\n        value: this.state.totalHardness,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797\n        },\n        __self: this\n      }, \"Total Suspended Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tss\",\n        placeholder: \"Total Suspended Solids\",\n        onChange: this.handleChange,\n        value: this.state.tss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801\n        },\n        __self: this\n      }, \"Sample Notes\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"textArea\",\n        style: {\n          height: 80,\n          width: 400\n        },\n        name: \"sampleNotes\",\n        placeholder: \"Sample Notes\",\n        onChange: this.handleChange,\n        value: this.state.sampleNotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }))))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        },\n        __self: this\n      }, \"Add sample\"))))))), React.createElement(Tab, {\n        eventKey: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"add-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.writeData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830\n        },\n        __self: this\n      }, \"Monthly Sample Log\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844\n        },\n        __self: this\n      }, \"Overwrite Data\"))))))))))));\n    }\n  }]);\n\n  return maintenanceReports;\n}(Component);\n\nexport { maintenanceReports as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/maintenanceReports.jsx"],"names":["React","Component","Navbar","Nav","NavItem","Button","ResponsiveEmbed","ButtonToolbar","Form","Grid","Row","FormGroup","Tab","Radio","Tabs","Col","Table","Popover","ControlLabel","MenuItem","DropdownButton","FormControl","Checkbox","Link","firebase","PDFExport","fire","BootstrapTable","BootstrapButton","TableHeaderColumn","ExportCSVButton","TiArrowSortedDown","TiArrowSortedUp","TiPencil","TiTrash","domtoimage","fileDownload","LineChart","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Label","styles","topPad","paddingTop","ColoredLine","color","backgroundColor","height","maintenanceReports","props","writeStates","itemId","removeAuthListener","auth","onAuthStateChanged","user","sampleRef","database","ref","uid","state","id","child","set","sampleDate","sampleTaker","temp","do","conductivity","tds","salinity","pH","turbidity","nitrogen","phosphorus","totalHardness","tss","handleBtnClick","order","refs","table","handleSort","exportPDF","resume","save","DOSort","a","b","dataList","DOResult","handleExportCSVButtonClick","onClick","console","log","createCustomExportCSVButton","maintenanceDate","maintenanceWorker","mechanicalEquipmentNotes","electricalEquipmentNotes","aquaticVegetationNotes","shortlineNotes","miscNotes","key","idKey","page","area","samples","orders","orders2","filter","blobUrl","handleChange","bind","handleSubmit","handleSelect","writeData","e","setState","target","name","value","item","Object","values","map","String","find","includes","newState","preventDefault","samplesRef","orderID","maintenanceReport","push","on","snapshot","val","newState2","newState3","sort","remove","newCheckboxKey","box","sample","rawMarkup","content","__html","row","isSelected","fillStates","removesample","event","buttonFormatter","cell","options","exportCSVBtn","fillEmpty","type","delay","editRow","deleteRow","width","sampleNotes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Button, ResponsiveEmbed, ButtonToolbar, Form, Grid, Row, FormGroup, Tab, Radio, Tabs, Col, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn, ExportCSVButton} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\n\n\nimport { LineChart, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label} from 'recharts';\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  },\n};\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: .8\n        }}\n    />\n);\n\n\n\nexport default class maintenanceReports extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n\n          //Inputs for Maintenance Report\n          maintenanceDate: '',\n          maintenanceWorker: '',\n          mechanicalEquipmentNotes: '',\n          electricalEquipmentNotes: '',\n          aquaticVegetationNotes: '',\n          shortlineNotes: '',\n          miscNotes: '',\n\n          //Misc. for chaing taps and id's\n          id: '',\n          key: 1,\n          idKey: '',\n          page: '',\n          area: '',\n\n          //used for table data\n          samples: [],\n          orders: [],\n          orders2: [],\n          dataList: [],\n          filter: \"\",\n          blobUrl: null,\n\n\n\n\n\n\n\n\n        }\n        //these are triggered events.  handleChange is for text box changes\n        //handlesubmit is for the form being submitted.\n        //every event trigger needs to be bound like is below with .bind\n        //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.writeData = this.writeData.bind(this);\n\n\n\n\n\n      }\n\n      //event triggered when text boxes of forms, values are changed\n      handleChange(e) {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n        let filter = this.state.filter;\n        let dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n        return String(value);\n              }).find(function (value) {\n                   return value.includes(filter);\n        });\n\n        });\n        let newState = [];\n\n\n\n\n\n      }\n      //event triggered when form is submitted\n      handleSubmit(e) {\n        e.preventDefault();\n        //fire.database().ref('samples') refers to the main title of the fire database.\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n        const samplesRef = fire.database().ref(`maintenanceReport/${user.uid}`);\n        const orderID = fire.database().ref(`/maintenanceReport/${user.uid}/${orderID}`);\n\n\n        const maintenanceReport = {\n\n          maintenanceDate: this.state.maintenanceDate,\n          maintenanceWorker: this.state.maintenanceWorker,\n          mechanicalEquipmentNotes: this.state.mechanicalEquipmentNotes,\n          electricalEquipmentNotes: this.state.electricalEquipmentNotes,\n          aquaticVegetationNotes: this.state.aquaticVegetationNotes,\n          shortlineNotes: this.state.shortlineNotes,\n          miscNotes: this.state.miscNotes,\n\n          id: this.state.id,\n        }\n\n\n\n\n        samplesRef.push(maintenanceReport);\n        //this.setState is used to clear the text boxes after the form has been submitted.\n        this.setState({\n          maintenanceDate: '',\n          maintenanceWorker: '',\n          mechanicalEquipmentNotes: '',\n          electricalEquipmentNotes: '',\n          aquaticVegetationNotes: '',\n          shortlineNotes: '',\n          miscNotes: '',\n\n\n\n        });\n      });\n    }\n\n\n\n\n\n      //this function is constantly running after the initial render.  Snapshot is used to look into the database.\n      //[] indicates an array value\n      //.map(Number) changes an array of strings to an array of integers\n      //snapshot.foreach(ss => {...}) **this looks in each \"Sample\" for the child of \"user\"**\n      //child of user can be child of BOD or child of tss or whatever.  It finds the value that is a child to that label.\n\n      componentDidMount() {\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n          const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n          samplesRef.on('value', (snapshot) => {\n\n\n            let dataList = snapshot.val();\n            let filter = [];\n            let orders = snapshot.val();\n            let orders2 = snapshot.val();\n\n            let newState = [];\n            let newState2 = [];\n            let newState3 = [];\n\n          for (let order in orders) {\n            newState.push({\n              id: order,\n              maintenanceDate: orders[order].maintenanceDate,\n              maintenanceWorker: orders[order].maintenanceWorker,\n              mechanicalEquipmentNotes: orders[order].mechanicalEquipmentNotes,\n              electricalEquipmentNotes: orders[order].electricalEquipmentNotes,\n              aquaticVegetationNotes: orders[order].aquaticVegetationNotes,\n              shortlineNotes: orders[order].shortlineNotes,\n              miscNotes: orders[order].miscNotes,\n            });\n\n\n\n\n\n          }\n\n          newState2.sort(function(a, b) {\n\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n        });\n        newState.sort(function(a, b) {\n\n          if (b.sampleDate === a.sampleDate) {\n            return 0;\n          }\n          return b.sampleDate > a.sampleDate ? 1 : -1;\n      });\n\n\n\n          this.setState({\n            orders: newState,\n            orders2: newState2,\n            dataList: newState,\n          });\n\n\n\n\n          console.log(this.state.dataList);\n\n\n\n\n\n        });\n\n      });\n\n\n    }\n\n\n\n    fillStates(itemId) {\n      let area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n      sampleRef.on('value', (snapshot) => {\n\n        this.setState({\n          maintenanceDate: '',\n          maintenanceWorker: '',\n          mechanicalEquipmentNotes: '',\n          electricalEquipmentNotes: '',\n          aquaticVegetationNotes: '',\n          shortlineNotes: '',\n          miscNotes: '',\n\n        });\n\n      let orders = snapshot.val();\n      let id = fire.database().ref().child(`/monthlySamples/${user.uid}/${itemId}`).key;\n\n      let newState = [];\n      for (let order in orders) {\n        newState.push({\n          id: order,\n          maintenanceDate: orders[order].maintenanceDate,\n          maintenanceWorker: orders[order].maintenanceWorker,\n          mechanicalEquipmentNotes: orders[order].mechanicalEquipmentNotes,\n          electricalEquipmentNotes: orders[order].electricalEquipmentNotes,\n          aquaticVegetationNotes: orders[order].aquaticVegetationNotes,\n          shortlineNotes: orders[order].shortlineNotes,\n          miscNotes: orders[order].miscNotes,\n\n        });\n      }\n      this.setState({\n\n        id: id,\n        key: 4,\n\n        \n        maintenanceDate: snapshot.child('maintenanceDate').val(),\n        maintenanceWorker: snapshot.child('maintenanceWorker').val(),\n        mechanicalEquipmentNotes: snapshot.child('mechanicalEquipmentNotes').val(),\n        electricalEquipmentNotes: snapshot.child('electricalEquipmentNotes').val(),\n        aquaticVegetationNotes: snapshot.child('aquaticVegetationNotes').val(),\n        shortlineNotes: snapshot.child('shortlineNotes').val(),\n        miscNotes: snapshot.child('miscNotes').val(),\n\n\n\n\n\n\n      })\n\n\n\n\n});\n\n    });\n  }\n\n\n  writeStates = (itemId) => {\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${this.state.id}`);\n\n\n    sampleRef.child(\"id\").set(this.state.id);\n\n\n    sampleRef.child(\"sampleDate\").set(this.state.sampleDate);\n    sampleRef.child(\"sampleTaker\").set(this.state.sampleTaker);\n    sampleRef.child(\"temp\").set(this.state.temp);\n    sampleRef.child(\"do\").set(this.state.do);\n    sampleRef.child(\"conductivity\").set(this.state.conductivity);\n    sampleRef.child(\"tds\").set(this.state.tds);\n    sampleRef.child(\"salinity\").set(this.state.salinity);\n    sampleRef.child(\"pH\").set(this.state.pH);\n    sampleRef.child(\"turbidity\").set(this.state.turbidity);\n    sampleRef.child(\"nitrogen\").set(this.state.nitrogen);\n    sampleRef.child(\"phosphorus\").set(this.state.phosphorus);\n    sampleRef.child(\"totalHardness\").set(this.state.totalHardness);\n    sampleRef.child(\"tss\").set(this.state.tss);\n\n\n\n  });\n\n\n  }\n\n\n\n  fillEmpty(itemId) {\n    let area = '';\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n\n    sampleRef.on('value', (snapshot) => {\n\n    let orders = snapshot.val();\n\n    let newState = [];\n    for (let order in orders) {\n      newState.push({\n        id: order,\n\n        sampleDate: orders[order].sampleDate,\n        sampleTaker: orders[order].sampleTaker,\n        temp: orders[order].temp,\n        do: orders[order].do,\n        conductivity: orders[order].conductivity,\n        tds: orders[order].tds,\n        salinity: orders[order].salinity,\n        pH: orders[order].pH,\n        turbidity: orders[order].turbidity,\n        nitrogen: orders[order].nitrogen,\n        phosphorus: orders[order].phosphorus,\n        totalHardness: orders[order].totalHardness,\n        tss: orders[order].tss,\n\n      });\n    }\n    this.setState({\n\n      id: '',\n      key: 3,\n      sampleDate: '',\n      sampleTaker: '',\n      temp: '',\n      do: '',\n      conductivity: '',\n      tds: '',\n      salinity: '',\n      pH: '',\n      turbidity: '',\n      nitrogen: '',\n      phosphorus: '',\n      totalHardness: '',\n      tss: '',\n\n\n    })\n\n\n});\n  });\n}\n\n  createNewWorkOrder (itemId) {\n\n      let area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n      sampleRef.on('value', (snapshot) => {\n\n      let orders = snapshot.val();\n\n      let newState = [];\n      for (let order in orders) {\n        newState.push({\n          id: order,\n\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n\n        });\n      }\n      this.setState({\n\n        id: snapshot.child('id').val(),\n        key: 3,\n\n        sampleDate: snapshot.child('sampleDate').val(),\n        sampleTaker: snapshot.child('sampleTaker').val(),\n        temp: snapshot.child('temp').val(),\n        do: snapshot.child('do').val(),\n        conductivity: snapshot.child('conductivity').val(),\n        tds: snapshot.child('tds').val(),\n        salinity: snapshot.child('salinity').val(),\n        pH: snapshot.child('pH').val(),\n        turbidity: snapshot.child('turbidity').val(),\n        nitrogen: snapshot.child('nitrogen').val(),\n        phosphorus: snapshot.child('phosphorus').val(),\n        totalHardness: snapshot.child('totalHardness').val(),\n        tss: snapshot.child('tss').val(),\n\n\n\n      })\n\n\n});\n    });\n\n\n\n\n  }\n\n    removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n      sampleRef.remove();\n    });\n    }\n\n    handleSelect(key) {\n\n  this.setState({key});\n}\n\n\nwriteData (e) {\n  e.preventDefault();\n  //fire.database().ref('samples') refers to the main title of the fire database.\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n  const orderID = fire.database().ref(`/monthlySamples/${user.uid}/${this.state.id}`);\n  const newCheckboxKey = firebase.database().ref().child('checkbox').push().key;\n\n  let id = newCheckboxKey;\n  let box = id;\n\n\n  const sample = {\n\n    id: this.state.id,\n    sampleDate: this.state.sampleDate,\n    sampleTaker: this.state.sampleTaker,\n    temp: this.state.temp,\n    do: this.state.do,\n    conductivity: this.state.conductivity,\n    tds: this.state.tds,\n    salinity: this.state.salinity,\n    pH: this.state.pH,\n    turbidity: this.state.turbidity,\n    nitrogen: this.state.nitrogen,\n    phosphorus: this.state.phosphorus,\n    totalHardness: this.state.totalHardness,\n    tss: this.state.tss,\n  }\n\n  samplesRef.child(this.state.id).set(sample);\n\n\n\n\n\n\n  //this.setState is used to clear the text boxes after the form has been submitted.\n\n});\n}\n\n\n\nhandleBtnClick = () => {\n\n  let order = 'desc';\n  if (order === 'desc') {\n    this.refs.table.handleSort('asc', 'name');\n    order = 'asc';\n  } else {\n    this.refs.table.handleSort('desc', 'name');\n    order = 'desc';\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexportPDF = () => {\n  this.resume.save();\n}\n\nrawMarkup(){\n  var rawMarkup = this.props.content\n  return { __html: rawMarkup };\n}\n\n\n\n\n\n\n\n DOSort = (a, b, order) => {\n   let dataList = this.state.dataList;   // order is desc or asc\n  if (order === 'desc') {\n    return a.DOResult - b.DOResult;\n  } else {\n    return b.DOResult - a.DOResult;\n  }\n}\n\n\n\neditRow(row, isSelected, e, id) {\n  console.log(`${isSelected.id}`);\n  return (\n    <TiPencil type=\"button\"\n    onClick={() => this.fillStates(`${isSelected.id}`)}>\n      Click me\n    </TiPencil>\n  )\n}\n\ndeleteRow(row, isSelected, e, id) {\n  console.log(`${isSelected.id}`);\n  return (\n    <TiTrash type=\"button\"\n    onClick={() => this.removesample(`${isSelected.id}`)}>\n      Click me\n    </TiTrash>\n  )\n}\n\n\n\n\n\n\n\n\n\n  onSubmit(event) {\n    event.preventDefault();\n  }\n\n  handleExportCSVButtonClick = (onClick) => {\n  // Custom your onClick event here,\n  // it's not necessary to implement this function if you have no any process before onClick\n  console.log('This is my custom function for ExportCSVButton click event');\n  onClick();\n}\ncreateCustomExportCSVButton = (onClick) => {\n  return (\n    <ExportCSVButton\n      btnText='Down CSV'\n      onClick={ () => this.handleExportCSVButtonClick(onClick) }/>\n  );\n}\n//...\n\n\n\n\n\n\n\n\n\n\n\n\n      render() {\n        function buttonFormatter(cell, row){\n  return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n}\nconst options = {\n  exportCSVBtn: this.createCustomExportCSVButton\n};\n\n\n\n\n        return (\n    <div>\n\n      <Grid>\n        <Row>\n          <Row>\n            <Col xs={6} md={6}>\n          <h3>Maintenance Reports</h3>\n\n          </Col>\n          <Col xs={6} md={6}>\n            <ButtonToolbar style={styles.topPad}>\n          <Button  onClick={() => this.fillEmpty()} eventKey={3} bsSize=\"large\">+ Create Maintenance Report</Button>\n        </ButtonToolbar>\n          </Col>\n          </Row>\n          <Col xs={12} sm={10} md={10}>\n\n\n      <Tabs activeKey={this.state.key} onSelect={this.handleSelect} defaultActiveKey={1} id=\"uncontrolled-tab-example\">\n\n\n\n        <Tab eventKey={1} title=\"+ Maintenance Reports\">\n          <Grid>\n\n          <Row style={styles.topPad}>\n\n\n\n            <Col xs={10} sm={10} md={10} lg={10}>\n\n\n              <BootstrapTable\n              data={ this.state.dataList }\n              options={options}\n              exportCSV\n              pagination\n\n\n              >\n\n              <TableHeaderColumn width='110px' dataField='sampleDate' isKey filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Sample Date</TableHeaderColumn>\n              <TableHeaderColumn dataField='temp' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Temperature</TableHeaderColumn>\n              <TableHeaderColumn dataField='do' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Dissolved Oxygen</TableHeaderColumn>\n              <TableHeaderColumn dataField='conductivity' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Conductivity</TableHeaderColumn>\n              <TableHeaderColumn dataField='tds' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Total Dissolved Solids</TableHeaderColumn>\n              <TableHeaderColumn dataField='salinity' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Salinity</TableHeaderColumn>\n                <TableHeaderColumn dataField='nitrogen' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Total Nitrogen</TableHeaderColumn>\n                  <TableHeaderColumn dataField='phosphorus' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Total Phosphorus</TableHeaderColumn>\n                    <TableHeaderColumn dataField='totalHardness' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Hardness</TableHeaderColumn>\n                      <TableHeaderColumn dataField='tss' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>TSS</TableHeaderColumn>\n\n        <TableHeaderColumn\n              dataField='button'\n              dataFormat={this.editRow.bind(this)}\n              >Edit</TableHeaderColumn>\n\n          <TableHeaderColumn\n                dataField='button'\n                dataFormat={this.deleteRow.bind(this)}\n                >Delete</TableHeaderColumn>\n\n\n              </BootstrapTable>\n              </Col>\n\n          </Row>\n        </Grid>\n          </Tab>\n\n\n\n\n\n\n      <Tab eventKey={3} >\n        <Grid>\n          <Row>\n            <Col xs={10} md={10}>\n        <section className='add-item'>\n          <form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col xs={4} sm={4} md={4}>\n                <h2>Monthly Sample Log</h2>\n                </Col>\n\n                </Row>\n                <hr></hr>\n                <Row>\n                  <Col xs={8} sm={8} md={8}>\n\n  <Table striped bordered condensed hover>\n  <thead>\n  <tr>\n  <th>Item</th>\n  <th>Description</th>\n\n\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  <td>Date</td>\n  <td><input type=\"date\" name=\"sampleDate\" placeholder=\"Date of Sample\" onChange={this.handleChange} value={this.state.sampleDate} /></td>\n  </tr>\n  <tr>\n  <td>Name</td>\n  <td><input type=\"text\" name=\"sampleTaker\" placeholder=\"Your Name\" onChange={this.handleChange} value={this.state.sampleTaker} /></td>\n  </tr>\n  <tr>\n  <td>Water Temperature</td>\n  <td><input type=\"number\" name=\"temp\" placeholder=\"Temp of Sample\" onChange={this.handleChange} value={this.state.temp} /></td>\n  </tr>\n  <tr>\n  <td>DO</td>\n  <td><input type=\"number\" name=\"do\" placeholder=\"Dissolved Oxygen\" onChange={this.handleChange} value={this.state.do} /></td>\n  </tr>\n  <tr>\n  <td>Conductivity</td>\n  <td><input type=\"number\" name=\"conductivity\" placeholder=\"Conductivity\" onChange={this.handleChange} value={this.state.conductivity} /></td>\n  </tr>\n  <tr>\n  <td>Total Dissolved Solids</td>\n  <td><input type=\"number\" name=\"tds\" placeholder=\"Total Dissolved Solids\" onChange={this.handleChange} value={this.state.tds} /></td>\n  </tr>\n  <tr>\n  <td>Salinity</td>\n  <td><input type=\"number\" name=\"salinity\" placeholder=\"Salinity\" onChange={this.handleChange} value={this.state.salinity} /></td>\n  </tr>\n  <tr>\n  <td>pH</td>\n  <td><input type=\"number\" name=\"pH\" placeholder=\"pH\" onChange={this.handleChange} value={this.state.pH} /></td>\n  </tr>\n  <tr>\n  <td>Turbidity</td>\n  <td><input type=\"number\" name=\"turbidity\" placeholder=\"Turbidity\" onChange={this.handleChange} value={this.state.turbidity} /></td>\n  </tr>\n  <tr>\n  <td>Total Nitrogen</td>\n  <td><input type=\"number\" name=\"nitrogen\" placeholder=\"Total Nitrogen\" onChange={this.handleChange} value={this.state.nitrogen} /></td>\n  </tr>\n  <tr>\n  <td>Total Phosphorus</td>\n  <td><input type=\"number\" name=\"phosphorus\" placeholder=\"Total Phosphorus\" onChange={this.handleChange} value={this.state.phosphorus} /></td>\n  </tr>\n  <tr>\n  <td>Total Hardness</td>\n  <td><input type=\"number\" name=\"totalHardness\" placeholder=\"Total Hardness\" onChange={this.handleChange} value={this.state.totalHardness} /></td>\n  </tr>\n  <tr>\n  <td>Total Suspended Solids</td>\n  <td><input type=\"number\" name=\"tss\" placeholder=\"Total Suspended Solids\" onChange={this.handleChange} value={this.state.tss} /></td>\n  </tr>\n  <tr>\n  <td>Sample Notes</td>\n  <td><input  type=\"textArea\" style={{ height: 80, width: 400 }}  name=\"sampleNotes\" placeholder=\"Sample Notes\" onChange={this.handleChange} value={this.state.sampleNotes} /></td>\n  </tr>\n\n\n  </tbody>\n  </Table>\n\n</Col>\n                  </Row>\n\n                      <hr></hr>\n                <button>Add sample</button>\n              </form>\n        </section>\n\n        </Col>\n        </Row>\n\n        </Grid>\n      </Tab>\n      <Tab eventKey={4} >\n        <Grid>\n          <Row>\n            <Col xs={10} md={10}>\n        <section className='add-item'>\n          <form onSubmit={this.writeData}>\n            <Row>\n              <Col xs={4} sm={4} md={4}>\n                <h2>Monthly Sample Log</h2>\n                </Col>\n\n                </Row>\n                <hr></hr>\n                <Row>\n                  <Col xs={8} sm={8} md={8}>\n\n\n\n</Col>\n                  </Row>\n\n                      <hr></hr>\n                      <button>Overwrite Data</button>\n\n              </form>\n\n        </section>\n\n        </Col>\n        </Row>\n\n        </Grid>\n      </Tab>\n\n\n\n\n    </Tabs>\n\n\n    </Col>\n    </Row>\n    </Grid>\n\n    </div>\n        )\n            }\n          }\n"]},"metadata":{},"sourceType":"module"}