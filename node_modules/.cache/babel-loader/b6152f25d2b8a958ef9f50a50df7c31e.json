{"ast":null,"code":"import _slicedToArray from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Greg/Desktop/react/summer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Greg/Desktop/react/summer/src/components/monthlySamples.jsx\";\n\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Button, ResponsiveEmbed, ButtonToolbar, Form, Grid, Row, FormGroup, Tab, Radio, Tabs, Col, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\nimport { BootstrapTable, BootstrapButton, TableHeaderColumn } from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport { LineChart, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label } from 'recharts';\nvar data = [{\n  name: 1,\n  cost: 4.11,\n  impression: 100\n}, {\n  name: 2,\n  cost: 2.39,\n  impression: 120\n}, {\n  name: 3,\n  cost: 1.37,\n  impression: 150\n}, {\n  name: 4,\n  cost: 1.16,\n  impression: 180\n}, {\n  name: 5,\n  cost: 2.29,\n  impression: 200\n}, {\n  name: 6,\n  cost: 3,\n  impression: 499\n}, {\n  name: 7,\n  cost: 0.53,\n  impression: 50\n}, {\n  name: 8,\n  cost: 2.52,\n  impression: 100\n}, {\n  name: 9,\n  cost: 1.79,\n  impression: 200\n}, {\n  name: 10,\n  cost: 2.94,\n  impression: 222\n}, {\n  name: 11,\n  cost: 4.3,\n  impression: 210\n}, {\n  name: 12,\n  cost: 4.41,\n  impression: 300\n}, {\n  name: 13,\n  cost: 2.1,\n  impression: 50\n}, {\n  name: 14,\n  cost: 8,\n  impression: 190\n}, {\n  name: 15,\n  cost: 0,\n  impression: 300\n}, {\n  name: 16,\n  cost: 9,\n  impression: 400\n}, {\n  name: 17,\n  cost: 3,\n  impression: 200\n}, {\n  name: 18,\n  cost: 2,\n  impression: 50\n}, {\n  name: 19,\n  cost: 3,\n  impression: 100\n}, {\n  name: 20,\n  cost: 7,\n  impression: 100\n}];\n\nvar getAxisYDomain = function getAxisYDomain(from, to, ref, offset) {\n  var data = _this.state.orders2;\n  var refData = data.slice(from - 1, to);\n  var _ref = [refData[0][ref], refData[0][ref]],\n      bottom = _ref[0],\n      top = _ref[1];\n  refData.forEach(function (d) {\n    if (d[ref] > top) top = d[ref];\n    if (d[ref] < bottom) bottom = d[ref];\n  });\n  return [(bottom | 0) - offset, (top | 0) + offset];\n};\n\nvar initialState = {\n  data: data,\n  left: 'dataMin',\n  right: 'dataMax',\n  refAreaLeft: '',\n  refAreaRight: '',\n  top: 'dataMax+1',\n  bottom: 'dataMin-1',\n  top2: 'dataMax+20',\n  bottom2: 'dataMin-20',\n  animation: true\n};\nvar styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  }\n};\n\nvar ColoredLine = function ColoredLine(_ref2) {\n  var color = _ref2.color;\n  return React.createElement(\"hr\", {\n    style: {\n      color: color,\n      backgroundColor: color,\n      height: .8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  });\n};\n\nvar monthlySamples =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(monthlySamples, _Component);\n\n  function monthlySamples(props) {\n    var _this2;\n\n    _classCallCheck(this, monthlySamples);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(monthlySamples).call(this, props));\n\n    _this2.writeStates = function (itemId) {\n      _this2.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(_this2.state.id));\n        sampleRef.child(\"id\").set(_this2.state.id);\n        sampleRef.child(\"sampleDate\").set(_this2.state.sampleDate);\n        sampleRef.child(\"sampleTaker\").set(_this2.state.sampleTaker);\n        sampleRef.child(\"temp\").set(_this2.state.temp);\n        sampleRef.child(\"do\").set(_this2.state.do);\n        sampleRef.child(\"conductivity\").set(_this2.state.conductivity);\n        sampleRef.child(\"tds\").set(_this2.state.tds);\n        sampleRef.child(\"salinity\").set(_this2.state.salinity);\n        sampleRef.child(\"pH\").set(_this2.state.pH);\n        sampleRef.child(\"turbidity\").set(_this2.state.turbidity);\n        sampleRef.child(\"nitrogen\").set(_this2.state.nitrogen);\n        sampleRef.child(\"phosphorus\").set(_this2.state.phosphorus);\n        sampleRef.child(\"totalHardness\").set(_this2.state.totalHardness);\n        sampleRef.child(\"tss\").set(_this2.state.tss);\n      });\n    };\n\n    _this2.handleBtnClick = function () {\n      var order = 'desc';\n\n      if (order === 'desc') {\n        _this2.refs.table.handleSort('asc', 'name');\n\n        order = 'asc';\n      } else {\n        _this2.refs.table.handleSort('desc', 'name');\n\n        order = 'desc';\n      }\n    };\n\n    _this2.nitrogenOn = function () {\n      var nitrogen = \"nitrogen\";\n\n      _this2.setState({\n        nitrogenPlot: nitrogen\n      });\n    };\n\n    _this2.nitrogenOff = function () {\n      var nitrogen = \"\";\n\n      _this2.setState({\n        nitrogenPlot: nitrogen\n      });\n    };\n\n    _this2.phosphorusOn = function () {\n      var phosphorus = \"phosphorus\";\n\n      _this2.setState({\n        phosphorusPlot: phosphorus\n      });\n    };\n\n    _this2.phosphorusOff = function () {\n      var phosphorus = \"\";\n\n      _this2.setState({\n        phosphorusPlot: phosphorus\n      });\n    };\n\n    _this2.tdsOn = function () {\n      var tds = \"tds\";\n\n      _this2.setState({\n        tdsPlot: tds\n      });\n    };\n\n    _this2.tdsOff = function () {\n      var tds = \"\";\n\n      _this2.setState({\n        tdsPlot: tds\n      });\n    };\n\n    _this2.tssOn = function () {\n      var tss = \"tss\";\n\n      _this2.setState({\n        tssPlot: tss\n      });\n    };\n\n    _this2.tssOff = function () {\n      var tss = \"\";\n\n      _this2.setState({\n        tssPlot: tss\n      });\n    };\n\n    _this2.conductivityOn = function () {\n      var conductivity = \"conductivity\";\n\n      _this2.setState({\n        conductivityPlot: conductivity\n      });\n    };\n\n    _this2.conductivityOff = function () {\n      var conductivity = \"\";\n\n      _this2.setState({\n        conductivityPlot: conductivity\n      });\n    };\n\n    _this2.salinityOn = function () {\n      var salinity = \"salinity\";\n\n      _this2.setState({\n        salinityPlot: salinity\n      });\n    };\n\n    _this2.salinityOff = function () {\n      var salinity = \"\";\n\n      _this2.setState({\n        salinityPlot: salinity\n      });\n    };\n\n    _this2.tempOn = function () {\n      var temp = \"temp\";\n\n      _this2.setState({\n        tempPlot: temp\n      });\n    };\n\n    _this2.tempOff = function () {\n      var temp = \"\";\n\n      _this2.setState({\n        tempPlot: temp\n      });\n    };\n\n    _this2.doOn = function () {\n      var DO = \"do\";\n\n      _this2.setState({\n        doPlot: DO\n      });\n    };\n\n    _this2.doOff = function () {\n      var DO = \"\";\n\n      _this2.setState({\n        doPlot: DO\n      });\n    };\n\n    _this2.hardnessOn = function () {\n      var hardness = \"totalHardness\";\n\n      _this2.setState({\n        hardnessPlot: hardness\n      });\n    };\n\n    _this2.hardnessOff = function () {\n      var hardness = \"\";\n\n      _this2.setState({\n        hardnessPlot: hardness\n      });\n    };\n\n    _this2.pHOn = function () {\n      var pH = \"pH\";\n\n      _this2.setState({\n        pHPlot: pH\n      });\n    };\n\n    _this2.pHOff = function () {\n      var pH = \"\";\n\n      _this2.setState({\n        pHPlot: pH\n      });\n    };\n\n    _this2.DOSort = function (a, b, order) {\n      var dataList = _this2.state.dataList; // order is desc or asc\n\n      if (order === 'desc') {\n        return a.DOResult - b.DOResult;\n      } else {\n        return b.DOResult - a.DOResult;\n      }\n    };\n\n    _this2.filter = function (url) {\n      domtoimage.toBlob(document.getElementById('my-node')).then(function (blob) {\n        console.log(blob);\n        var blobUrl = URL.createObjectURL(blob);\n        console.log(blobUrl);\n\n        _this2.setState({\n          blobUrl: blobUrl\n        });\n      });\n    };\n\n    _this2.state = {\n      data: data,\n      left: 'dataMin',\n      right: 'dataMax',\n      refAreaLeft: '',\n      refAreaRight: '',\n      top: 'dataMax+1',\n      bottom: 'dataMin-1',\n      top2: 'dataMax+20',\n      bottom2: 'dataMin-20',\n      animation: true,\n      sampleDate: '',\n      sampleTaker: '',\n      temp: '',\n      do: '',\n      conductivity: '',\n      tds: '',\n      salinity: '',\n      pH: '',\n      turbidity: '',\n      nitrogen: '',\n      phosphorus: '',\n      totalHardness: '',\n      tss: '',\n      id: '',\n      key: 1,\n      idKey: '',\n      page: '',\n      area: '',\n      samples: [],\n      orders: [],\n      orders2: [],\n      dataList: [],\n      filter: \"\",\n      blobUrl: null,\n      ammoniaPlot: 'ammoniaResult',\n      tempPlot: 'temp',\n      doPlot: 'do',\n      conductivityPlot: 'conductivity',\n      tdsPlot: 'tds',\n      salinityPlot: 'salinity',\n      pHPlot: 'pH',\n      turbidityPlot: 'turbidity',\n      nitrogenPlot: 'nitrogen',\n      phosphorusPlot: 'phosphorus',\n      totalHardnessPlot: 'totalHardness',\n      tssPlot: 'tss' //these are triggered events.  handleChange is for text box changes\n      //handlesubmit is for the form being submitted.\n      //every event trigger needs to be bound like is below with .bind\n      //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n\n    };\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleSubmit = _this2.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleSelect = _this2.handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.writeData = _this2.writeData.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  } //event triggered when text boxes of forms, values are changed\n\n\n  _createClass(monthlySamples, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      var filter = this.state.filter;\n      var dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n          return String(value);\n        }).find(function (value) {\n          return value.includes(filter);\n        });\n      });\n      var newState = [];\n    } //event triggered when form is submitted\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this3 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(orderID));\n        var sample = {\n          sampleDate: _this3.state.sampleDate,\n          sampleTaker: _this3.state.sampleTaker,\n          temp: _this3.state.temp,\n          do: _this3.state.do,\n          conductivity: _this3.state.conductivity,\n          tds: _this3.state.tds,\n          salinity: _this3.state.salinity,\n          pH: _this3.state.pH,\n          turbidity: _this3.state.turbidity,\n          nitrogen: _this3.state.nitrogen,\n          phosphorus: _this3.state.phosphorus,\n          totalHardness: _this3.state.totalHardness,\n          tss: _this3.state.tss,\n          id: _this3.state.id\n        };\n        samplesRef.push(sample); //this.setState is used to clear the text boxes after the form has been submitted.\n\n        _this3.setState({\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: ''\n        });\n      });\n    } //this function is constantly running after the initial render.  Snapshot is used to look into the database.\n    //[] indicates an array value\n    //.map(Number) changes an array of strings to an array of integers\n    //snapshot.foreach(ss => {...}) **this looks in each \"Sample\" for the child of \"user\"**\n    //child of user can be child of BOD or child of tss or whatever.  It finds the value that is a child to that label.\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        samplesRef.on('value', function (snapshot) {\n          var dataList = snapshot.val();\n          var filter = [];\n          var orders = snapshot.val();\n          var orders2 = snapshot.val();\n          var newState = [];\n          var newState2 = [];\n          var newState3 = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss\n            });\n          }\n\n          for (var order2 in orders2) {\n            newState2.push({\n              sampleDate: orders2[order2].sampleDate,\n              DOResult: orders2[order2].DOResult,\n              nitrateResult: orders2[order2].nitrateResult,\n              nitriteResult: orders2[order2].nitriteResult,\n              ammoniaResult: orders2[order2].ammoniaResult\n            });\n          }\n\n          newState2.sort(function (a, b) {\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n          });\n          newState.sort(function (a, b) {\n            if (b.sampleDate === a.sampleDate) {\n              return 0;\n            }\n\n            return b.sampleDate > a.sampleDate ? 1 : -1;\n          });\n\n          _this4.setState({\n            orders: newState,\n            orders2: newState,\n            dataList: newState\n          });\n\n          console.log(_this4.state.dataList);\n        });\n      });\n    }\n  }, {\n    key: \"fillStates\",\n    value: function fillStates(itemId) {\n      var _this5 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          _this5.setState({\n            sampleDate: '',\n            sampleTaker: '',\n            temp: '',\n            do: '',\n            conductivity: '',\n            tds: '',\n            salinity: '',\n            pH: '',\n            turbidity: '',\n            nitrogen: '',\n            phosphorus: '',\n            totalHardness: '',\n            tss: ''\n          });\n\n          var orders = snapshot.val();\n          var id = fire.database().ref().child(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId)).key;\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss\n            });\n          }\n\n          _this5.setState({\n            id: id,\n            key: 4,\n            sampleDate: snapshot.child('sampleDate').val(),\n            sampleTaker: snapshot.child('sampleTaker').val(),\n            temp: snapshot.child('temp').val(),\n            do: snapshot.child('do').val(),\n            conductivity: snapshot.child('conductivity').val(),\n            tds: snapshot.child('tds').val(),\n            salinity: snapshot.child('salinity').val(),\n            pH: snapshot.child('pH').val(),\n            turbidity: snapshot.child('turbidity').val(),\n            nitrogen: snapshot.child('nitrogen').val(),\n            phosphorus: snapshot.child('phosphorus').val(),\n            totalHardness: snapshot.child('totalHardness').val(),\n            tss: snapshot.child('tss').val()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"fillEmpty\",\n    value: function fillEmpty(itemId) {\n      var _this6 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss\n            });\n          }\n\n          _this6.setState({\n            id: '',\n            key: 3,\n            sampleDate: '',\n            sampleTaker: '',\n            temp: '',\n            do: '',\n            conductivity: '',\n            tds: '',\n            salinity: '',\n            pH: '',\n            turbidity: '',\n            nitrogen: '',\n            phosphorus: '',\n            totalHardness: '',\n            tss: ''\n          });\n        });\n      });\n    }\n  }, {\n    key: \"createNewWorkOrder\",\n    value: function createNewWorkOrder(itemId) {\n      var _this7 = this;\n\n      var area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.on('value', function (snapshot) {\n          var orders = snapshot.val();\n          var newState = [];\n\n          for (var order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss\n            });\n          }\n\n          _this7.setState({\n            id: snapshot.child('id').val(),\n            key: 3,\n            sampleDate: snapshot.child('sampleDate').val(),\n            sampleTaker: snapshot.child('sampleTaker').val(),\n            temp: snapshot.child('temp').val(),\n            do: snapshot.child('do').val(),\n            conductivity: snapshot.child('conductivity').val(),\n            tds: snapshot.child('tds').val(),\n            salinity: snapshot.child('salinity').val(),\n            pH: snapshot.child('pH').val(),\n            turbidity: snapshot.child('turbidity').val(),\n            nitrogen: snapshot.child('nitrogen').val(),\n            phosphorus: snapshot.child('phosphorus').val(),\n            totalHardness: snapshot.child('totalHardness').val(),\n            tss: snapshot.child('tss').val()\n          });\n        });\n      });\n    }\n  }, {\n    key: \"removesample\",\n    value: function removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var sampleRef = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(itemId));\n        sampleRef.remove();\n      });\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(key) {\n      this.setState({\n        key: key\n      });\n    }\n  }, {\n    key: \"writeData\",\n    value: function writeData(e) {\n      var _this8 = this;\n\n      e.preventDefault(); //fire.database().ref('samples') refers to the main title of the fire database.\n\n      this.removeAuthListener = fire.auth().onAuthStateChanged(function (user) {\n        var samplesRef = fire.database().ref(\"monthlySamples/\".concat(user.uid));\n        var orderID = fire.database().ref(\"/monthlySamples/\".concat(user.uid, \"/\").concat(_this8.state.id));\n        var newCheckboxKey = firebase.database().ref().child('checkbox').push().key;\n        var id = newCheckboxKey;\n        var box = id;\n        var sample = {\n          id: _this8.state.id,\n          sampleDate: _this8.state.sampleDate,\n          sampleTaker: _this8.state.sampleTaker,\n          temp: _this8.state.temp,\n          do: _this8.state.do,\n          conductivity: _this8.state.conductivity,\n          tds: _this8.state.tds,\n          salinity: _this8.state.salinity,\n          pH: _this8.state.pH,\n          turbidity: _this8.state.turbidity,\n          nitrogen: _this8.state.nitrogen,\n          phosphorus: _this8.state.phosphorus,\n          totalHardness: _this8.state.totalHardness,\n          tss: _this8.state.tss\n        };\n        samplesRef.child(_this8.state.id).set(sample); //this.setState is used to clear the text boxes after the form has been submitted.\n      });\n    }\n  }, {\n    key: \"rawMarkup\",\n    value: function rawMarkup() {\n      var rawMarkup = this.props.content;\n      return {\n        __html: rawMarkup\n      };\n    }\n  }, {\n    key: \"editRow\",\n    value: function editRow(row, isSelected, e, id) {\n      var _this9 = this;\n\n      console.log(\"\".concat(isSelected.id));\n      return React.createElement(TiPencil, {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this9.fillStates(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, \"Click me\");\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(row, isSelected, e, id) {\n      var _this10 = this;\n\n      console.log(\"\".concat(isSelected.id));\n      return React.createElement(TiTrash, {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this10.removesample(\"\".concat(isSelected.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        },\n        __self: this\n      }, \"Click me\");\n    }\n  }, {\n    key: \"zoom\",\n    value: function zoom() {\n      var _this$state = this.state,\n          refAreaLeft = _this$state.refAreaLeft,\n          refAreaRight = _this$state.refAreaRight;\n      var data = this.state.orders2;\n\n      if (refAreaLeft === refAreaRight || refAreaRight === '') {\n        this.setState(function () {\n          return {\n            refAreaLeft: '',\n            refAreaRight: ''\n          };\n        });\n        return;\n      } // xAxis domain\n\n\n      if (refAreaLeft > refAreaRight) {\n        var _ref3 = [refAreaRight, refAreaLeft];\n        refAreaLeft = _ref3[0];\n        refAreaRight = _ref3[1];\n      } // yAxis domain\n\n\n      var _getAxisYDomain = getAxisYDomain(refAreaLeft, refAreaRight),\n          _getAxisYDomain2 = _slicedToArray(_getAxisYDomain, 2),\n          bottom = _getAxisYDomain2[0],\n          top = _getAxisYDomain2[1];\n\n      var _getAxisYDomain3 = getAxisYDomain(refAreaLeft, refAreaRight),\n          _getAxisYDomain4 = _slicedToArray(_getAxisYDomain3, 2),\n          bottom2 = _getAxisYDomain4[0],\n          top2 = _getAxisYDomain4[1];\n\n      this.setState(function () {\n        return {\n          refAreaLeft: '',\n          refAreaRight: '',\n          data: data.slice(),\n          left: refAreaLeft,\n          right: refAreaRight,\n          bottom: bottom,\n          top: top,\n          bottom2: bottom2,\n          top2: top2\n        };\n      });\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      var data = this.state.orders2;\n      this.setState(function () {\n        return _defineProperty({\n          data: data.slice(),\n          refAreaLeft: '',\n          refAreaRight: '',\n          left: 'dataMin',\n          right: 'dataMax',\n          top: 'dataMax+1',\n          bottom: 'dataMin',\n          top2: 'dataMax+50'\n        }, \"bottom\", 'dataMin+50');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this11 = this;\n\n      function buttonFormatter(cell, row) {\n        return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n      }\n\n      var _this$state2 = this.state,\n          data = _this$state2.data,\n          barIndex = _this$state2.barIndex,\n          left = _this$state2.left,\n          right = _this$state2.right,\n          refAreaLeft = _this$state2.refAreaLeft,\n          refAreaRight = _this$state2.refAreaRight,\n          top = _this$state2.top,\n          bottom = _this$state2.bottom,\n          top2 = _this$state2.top2,\n          bottom2 = _this$state2.bottom2;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 6,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855\n        },\n        __self: this\n      }, \"Monthly Sample Logs\")), React.createElement(Col, {\n        xs: 6,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        style: styles.topPad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this11.fillEmpty();\n        },\n        eventKey: 3,\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }, \"+ Create New Sample Log\")))), React.createElement(Col, {\n        xs: 12,\n        sm: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        activeKey: this.state.key,\n        onSelect: this.handleSelect,\n        defaultActiveKey: 1,\n        id: \"uncontrolled-tab-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: 1,\n        title: \"+ Graphs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 7,\n        sm: 7,\n        md: 7,\n        lg: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"my-node\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        width: 600,\n        height: 200,\n        data: this.state.orders2,\n        syncId: \"anyId\",\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.nitrogenPlot,\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.phosphorusPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.tdsPlot,\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: this.state.pHPlot,\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888\n        },\n        __self: this\n      }), React.createElement(Brush, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        smOffset: 1,\n        xs: 2,\n        sm: 2,\n        md: 2,\n        lg: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.nitrogenOn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896\n        },\n        __self: this\n      }, \"Nitrogen On\"), React.createElement(\"button\", {\n        onClick: this.nitrogenOff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897\n        },\n        __self: this\n      }, \"Nitrogen Off\"), React.createElement(\"button\", {\n        onClick: this.phosphorusOn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898\n        },\n        __self: this\n      }, \"Phosphorus On\"), React.createElement(\"button\", {\n        onClick: this.phosphorusOff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899\n        },\n        __self: this\n      }, \"Phosphorus Off\"), React.createElement(\"button\", {\n        onClick: this.tdsOn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900\n        },\n        __self: this\n      }, \"TDS On\"), React.createElement(\"button\", {\n        onClick: this.tdsOff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901\n        },\n        __self: this\n      }, \"TDS Off\"), React.createElement(\"button\", {\n        onClick: this.pHOn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902\n        },\n        __self: this\n      }, \"TDS On\"), React.createElement(\"button\", {\n        onClick: this.pHOff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903\n        },\n        __self: this\n      }, \"TDS Off\")), React.createElement(\"div\", {\n        className: \"highlight-bar-charts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript: void(0);\",\n        className: \"btn update\",\n        onClick: this.zoomOut.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      }, \"Zoom Out\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918\n        },\n        __self: this\n      }, \"Highlight / Zoom - able Line Chart\"), React.createElement(LineChart, {\n        width: 800,\n        height: 400,\n        data: this.state.orders2,\n        onMouseDown: function onMouseDown(e) {\n          return _this11.setState({\n            refAreaLeft: e.activeLabel\n          });\n        },\n        onMouseMove: function onMouseMove(e) {\n          return _this11.state.refAreaLeft && _this11.setState({\n            refAreaRight: e.activeLabel\n          });\n        },\n        onMouseUp: this.zoom.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"sampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"natural\",\n        dataKey: \"nitrogen\",\n        stroke: \"#8884d8\",\n        animationDuration: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934\n        },\n        __self: this\n      }), React.createElement(Line, {\n        type: \"natural\",\n        dataKey: \"phosphorus\",\n        stroke: \"#82ca9d\",\n        animationDuration: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935\n        },\n        __self: this\n      }), refAreaLeft && refAreaRight ? React.createElement(ReferenceArea, {\n        x1: refAreaLeft,\n        x2: refAreaRight,\n        strokeOpacity: 0.3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939\n        },\n        __self: this\n      }) : null)), React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946\n        },\n        __self: this\n      })), React.createElement(Tab, {\n        eventKey: 2,\n        title: \"+ Monthly Samples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 957\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: styles.topPad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        sm: 10,\n        md: 10,\n        lg: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.dataList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        width: \"110px\",\n        dataField: \"sampleDate\",\n        isKey: true,\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972\n        },\n        __self: this\n      }, \"Sample Date\"), React.createElement(TableHeaderColumn, {\n        dataField: \"temp\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(TableHeaderColumn, {\n        dataField: \"do\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974\n        },\n        __self: this\n      }, \"Dissolved Oxygen\"), React.createElement(TableHeaderColumn, {\n        dataField: \"conductivity\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975\n        },\n        __self: this\n      }, \"Conductivity\"), React.createElement(TableHeaderColumn, {\n        dataField: \"tds\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976\n        },\n        __self: this\n      }, \"Total Dissolved Solids\"), React.createElement(TableHeaderColumn, {\n        dataField: \"salinity\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 977\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(TableHeaderColumn, {\n        dataField: \"nitrogen\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        },\n        __self: this\n      }, \"Total Nitrogen\"), React.createElement(TableHeaderColumn, {\n        dataField: \"phosphorus\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979\n        },\n        __self: this\n      }, \"Total Phosphorus\"), React.createElement(TableHeaderColumn, {\n        dataField: \"totalHardness\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980\n        },\n        __self: this\n      }, \"Hardness\"), React.createElement(TableHeaderColumn, {\n        dataField: \"tss\",\n        filter: {\n          type: 'RegexFilter',\n          delay: 1000\n        },\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981\n        },\n        __self: this\n      }, \"TSS\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.editRow.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.deleteRow.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 988\n        },\n        __self: this\n      }, \"Delete\")))))), React.createElement(Tab, {\n        eventKey: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"add-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1013\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014\n        },\n        __self: this\n      }, \"Monthly Sample Log\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      }, \"Results\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        name: \"sampleDate\",\n        placeholder: \"Date of Sample\",\n        onChange: this.handleChange,\n        value: this.state.sampleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"sampleTaker\",\n        placeholder: \"Your Name\",\n        onChange: this.handleChange,\n        value: this.state.sampleTaker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040\n        },\n        __self: this\n      }, \"Water Temperature\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"temp\",\n        placeholder: \"Temp of Sample\",\n        onChange: this.handleChange,\n        value: this.state.temp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044\n        },\n        __self: this\n      }, \"DO\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"do\",\n        placeholder: \"Dissolved Oxygen\",\n        onChange: this.handleChange,\n        value: this.state.do,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      }, \"Conductivity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"conductivity\",\n        placeholder: \"Conductivity\",\n        onChange: this.handleChange,\n        value: this.state.conductivity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052\n        },\n        __self: this\n      }, \"Total Dissolved Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tds\",\n        placeholder: \"Total Dissolved Solids\",\n        onChange: this.handleChange,\n        value: this.state.tds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"salinity\",\n        placeholder: \"Salinity\",\n        onChange: this.handleChange,\n        value: this.state.salinity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1059\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060\n        },\n        __self: this\n      }, \"pH\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"pH\",\n        placeholder: \"pH\",\n        onChange: this.handleChange,\n        value: this.state.pH,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064\n        },\n        __self: this\n      }, \"Turbidity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"turbidity\",\n        placeholder: \"Turbidity\",\n        onChange: this.handleChange,\n        value: this.state.turbidity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1067\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1068\n        },\n        __self: this\n      }, \"Total Nitrogen\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"nitrogen\",\n        placeholder: \"Total Nitrogen\",\n        onChange: this.handleChange,\n        value: this.state.nitrogen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1069\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1071\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1072\n        },\n        __self: this\n      }, \"Total Phosphorus\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"phosphorus\",\n        placeholder: \"Total Phosphorus\",\n        onChange: this.handleChange,\n        value: this.state.phosphorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1073\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076\n        },\n        __self: this\n      }, \"Total Hardness\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"totalHardness\",\n        placeholder: \"Total Hardness\",\n        onChange: this.handleChange,\n        value: this.state.totalHardness,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080\n        },\n        __self: this\n      }, \"Total Suspended Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tss\",\n        placeholder: \"Total Suspended Solids\",\n        onChange: this.handleChange,\n        value: this.state.tss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081\n        },\n        __self: this\n      }))))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092\n        },\n        __self: this\n      }, \"Add sample\"))))))), React.createElement(Tab, {\n        eventKey: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1101\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 10,\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"add-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 4,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1108\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }, \"Monthly Sample Log\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 8,\n        sm: 8,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1119\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1121\n        },\n        __self: this\n      }, \"Results\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        name: \"sampleDate\",\n        placeholder: \"Date of Sample\",\n        onChange: this.handleChange,\n        value: this.state.sampleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1131\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"sampleTaker\",\n        placeholder: \"Your Name\",\n        onChange: this.handleChange,\n        value: this.state.sampleTaker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }, \"Water Temperature\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"temp\",\n        placeholder: \"Temp of Sample\",\n        onChange: this.handleChange,\n        value: this.state.temp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139\n        },\n        __self: this\n      }, \"DO\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"do\",\n        placeholder: \"Dissolved Oxygen\",\n        onChange: this.handleChange,\n        value: this.state.do,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143\n        },\n        __self: this\n      }, \"Conductivity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"conductivity\",\n        placeholder: \"Conductivity\",\n        onChange: this.handleChange,\n        value: this.state.conductivity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1147\n        },\n        __self: this\n      }, \"Total Dissolved Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tds\",\n        placeholder: \"Total Dissolved Solids\",\n        onChange: this.handleChange,\n        value: this.state.tds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1148\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1150\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151\n        },\n        __self: this\n      }, \"Salinity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1152\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"salinity\",\n        placeholder: \"Salinity\",\n        onChange: this.handleChange,\n        value: this.state.salinity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1152\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155\n        },\n        __self: this\n      }, \"pH\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1156\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"pH\",\n        placeholder: \"pH\",\n        onChange: this.handleChange,\n        value: this.state.pH,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1156\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159\n        },\n        __self: this\n      }, \"Turbidity\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"turbidity\",\n        placeholder: \"Turbidity\",\n        onChange: this.handleChange,\n        value: this.state.turbidity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1160\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163\n        },\n        __self: this\n      }, \"Total Nitrogen\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"nitrogen\",\n        placeholder: \"Total Nitrogen\",\n        onChange: this.handleChange,\n        value: this.state.nitrogen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167\n        },\n        __self: this\n      }, \"Total Phosphorus\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"phosphorus\",\n        placeholder: \"Total Phosphorus\",\n        onChange: this.handleChange,\n        value: this.state.phosphorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171\n        },\n        __self: this\n      }, \"Total Hardness\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"totalHardness\",\n        placeholder: \"Total Hardness\",\n        onChange: this.handleChange,\n        value: this.state.totalHardness,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175\n        },\n        __self: this\n      }, \"Total Suspended Solids\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        name: \"tss\",\n        placeholder: \"Total Suspended Solids\",\n        onChange: this.handleChange,\n        value: this.state.tss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176\n        },\n        __self: this\n      }))))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1186\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: this.writeData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1190\n        },\n        __self: this\n      }, \"Overwrite Data\"))))))))));\n    }\n  }]);\n\n  return monthlySamples;\n}(Component);\n\nexport { monthlySamples as default };","map":{"version":3,"sources":["/Users/Greg/Desktop/react/summer/src/components/monthlySamples.jsx"],"names":["React","Component","Navbar","Nav","NavItem","Button","ResponsiveEmbed","ButtonToolbar","Form","Grid","Row","FormGroup","Tab","Radio","Tabs","Col","Table","Popover","ControlLabel","MenuItem","DropdownButton","FormControl","Checkbox","Link","firebase","PDFExport","fire","BootstrapTable","BootstrapButton","TableHeaderColumn","TiArrowSortedDown","TiArrowSortedUp","TiPencil","TiTrash","domtoimage","fileDownload","LineChart","ReferenceArea","AreaChart","Brush","Area","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Label","data","name","cost","impression","getAxisYDomain","from","to","ref","offset","state","orders2","refData","slice","bottom","top","forEach","d","initialState","left","right","refAreaLeft","refAreaRight","top2","bottom2","animation","styles","topPad","paddingTop","ColoredLine","color","backgroundColor","height","monthlySamples","props","writeStates","itemId","removeAuthListener","auth","onAuthStateChanged","user","sampleRef","database","uid","id","child","set","sampleDate","sampleTaker","temp","do","conductivity","tds","salinity","pH","turbidity","nitrogen","phosphorus","totalHardness","tss","handleBtnClick","order","refs","table","handleSort","nitrogenOn","setState","nitrogenPlot","nitrogenOff","phosphorusOn","phosphorusPlot","phosphorusOff","tdsOn","tdsPlot","tdsOff","tssOn","tssPlot","tssOff","conductivityOn","conductivityPlot","conductivityOff","salinityOn","salinityPlot","salinityOff","tempOn","tempPlot","tempOff","doOn","DO","doPlot","doOff","hardnessOn","hardness","hardnessPlot","hardnessOff","pHOn","pHPlot","pHOff","DOSort","a","b","dataList","DOResult","filter","url","toBlob","document","getElementById","then","blob","console","log","blobUrl","URL","createObjectURL","key","idKey","page","area","samples","orders","ammoniaPlot","turbidityPlot","totalHardnessPlot","handleChange","bind","handleSubmit","handleSelect","writeData","e","target","value","item","Object","values","map","String","find","includes","newState","preventDefault","samplesRef","orderID","sample","push","on","snapshot","val","newState2","newState3","order2","nitrateResult","nitriteResult","ammoniaResult","sort","remove","newCheckboxKey","box","rawMarkup","content","__html","row","isSelected","fillStates","removesample","buttonFormatter","cell","barIndex","fillEmpty","r","zoomOut","activeLabel","zoom","type","delay","editRow","deleteRow"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,OAAtB,EAA+BC,MAA/B,EAAuCC,eAAvC,EAAwDC,aAAxD,EAAuEC,IAAvE,EAA6EC,IAA7E,EAAmFC,GAAnF,EAAwFC,SAAxF,EAAmGC,GAAnG,EAAwGC,KAAxG,EAA+GC,IAA/G,EAAqHC,GAArH,EAA0HC,KAA1H,EAAiIC,OAAjI,EAA0IC,YAA1I,EAAwJC,QAAxJ,EAAkKC,cAAlK,EAAkLC,WAAlL,EAA+LC,QAA/L,QAA+M,iBAA/M;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,SAAQC,cAAR,EAAwBC,eAAxB,EAAyCC,iBAAzC,QAAiE,uBAAjE;AACA,SAASC,iBAAT,EAA4BC,eAA5B,EAA6CC,QAA7C,EAAuDC,OAAvD,QAAsE,gBAAtE;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAGA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,SAAnC,EAA8CC,KAA9C,EAAqDC,IAArD,EAA2DC,IAA3D,EAAiEC,KAAjE,EAAwEC,KAAxE,EAA+EC,aAA/E,EAA8FC,OAA9F,EAAuGC,MAAvG,EAA+GC,KAA/G,QAA2H,UAA3H;AASA,IAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,IAAjB;AAAuBC,EAAAA,UAAU,EAAE;AAAnC,CADW,EAEX;AAAEF,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,IAAjB;AAAuBC,EAAAA,UAAU,EAAE;AAAnC,CAFW,EAGX;AAAEF,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,IAAjB;AAAuBC,EAAAA,UAAU,EAAE;AAAnC,CAHW,EAIX;AAAEF,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,IAAjB;AAAuBC,EAAAA,UAAU,EAAE;AAAnC,CAJW,EAKX;AAAEF,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,IAAjB;AAAuBC,EAAAA,UAAU,EAAE;AAAnC,CALW,EAMX;AAAEF,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,CAAjB;AAAoBC,EAAAA,UAAU,EAAE;AAAhC,CANW,EAOX;AAAEF,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,IAAjB;AAAuBC,EAAAA,UAAU,EAAE;AAAnC,CAPW,EAQX;AAAEF,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,IAAjB;AAAuBC,EAAAA,UAAU,EAAE;AAAnC,CARW,EASX;AAAEF,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,IAAjB;AAAuBC,EAAAA,UAAU,EAAE;AAAnC,CATW,EAUX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,IAAlB;AAAwBC,EAAAA,UAAU,EAAE;AAApC,CAVW,EAWX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,GAAlB;AAAuBC,EAAAA,UAAU,EAAE;AAAnC,CAXW,EAYX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,IAAlB;AAAwBC,EAAAA,UAAU,EAAE;AAApC,CAZW,EAaX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,GAAlB;AAAuBC,EAAAA,UAAU,EAAE;AAAnC,CAbW,EAcX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,CAAlB;AAAqBC,EAAAA,UAAU,EAAE;AAAjC,CAdW,EAeX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,CAAlB;AAAqBC,EAAAA,UAAU,EAAE;AAAjC,CAfW,EAgBX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,CAAlB;AAAqBC,EAAAA,UAAU,EAAE;AAAjC,CAhBW,EAiBX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,CAAlB;AAAqBC,EAAAA,UAAU,EAAE;AAAjC,CAjBW,EAkBX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,CAAlB;AAAqBC,EAAAA,UAAU,EAAE;AAAjC,CAlBW,EAmBX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,CAAlB;AAAqBC,EAAAA,UAAU,EAAE;AAAjC,CAnBW,EAoBX;AAAEF,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE,CAAlB;AAAqBC,EAAAA,UAAU,EAAE;AAAjC,CApBW,CAAb;;AAuBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,EAAP,EAAWC,GAAX,EAAgBC,MAAhB,EAA2B;AAChD,MAAIR,IAAI,GAAG,KAAI,CAACS,KAAL,CAAWC,OAAtB;AACD,MAAMC,OAAO,GAAGX,IAAI,CAACY,KAAL,CAAWP,IAAI,GAAC,CAAhB,EAAmBC,EAAnB,CAAhB;AAFiD,aAG1B,CAAEK,OAAO,CAAC,CAAD,CAAP,CAAWJ,GAAX,CAAF,EAAmBI,OAAO,CAAC,CAAD,CAAP,CAAWJ,GAAX,CAAnB,CAH0B;AAAA,MAG1CM,MAH0C;AAAA,MAGlCC,GAHkC;AAIhDH,EAAAA,OAAO,CAACI,OAAR,CAAiB,UAAAC,CAAC,EAAI;AACrB,QAAKA,CAAC,CAACT,GAAD,CAAD,GAASO,GAAd,EAAoBA,GAAG,GAAGE,CAAC,CAACT,GAAD,CAAP;AACnB,QAAKS,CAAC,CAACT,GAAD,CAAD,GAASM,MAAd,EAAuBA,MAAM,GAAGG,CAAC,CAACT,GAAD,CAAV;AACxB,GAHD;AAIA,SAAO,CAAE,CAACM,MAAM,GAAC,CAAR,IAAaL,MAAf,EAAuB,CAACM,GAAG,GAAC,CAAL,IAAUN,MAAjC,CAAP;AACD,CATD;;AAWA,IAAMS,YAAY,GAAG;AACnBjB,EAAAA,IAAI,EAAJA,IADmB;AAEnBkB,EAAAA,IAAI,EAAG,SAFY;AAGnBC,EAAAA,KAAK,EAAG,SAHW;AAInBC,EAAAA,WAAW,EAAG,EAJK;AAKnBC,EAAAA,YAAY,EAAG,EALI;AAMnBP,EAAAA,GAAG,EAAG,WANa;AAOnBD,EAAAA,MAAM,EAAG,WAPU;AAQnBS,EAAAA,IAAI,EAAG,YARY;AASnBC,EAAAA,OAAO,EAAG,YATS;AAUnBC,EAAAA,SAAS,EAAG;AAVO,CAArB;AAiBA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE;AADN;AADK,CAAf;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAChB;AACI,IAAA,KAAK,EAAE;AACHA,MAAAA,KAAK,EAAEA,KADJ;AAEHC,MAAAA,eAAe,EAAED,KAFd;AAGHE,MAAAA,MAAM,EAAE;AAHL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB;AAAA,CAApB;;IAYqBC,c;;;;;AAGjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;;AADe,WAmVrBC,WAnVqB,GAmVP,UAACC,MAAD,EAAY;AAExB,aAAKC,kBAAL,GAA0B1D,IAAI,CAAC2D,IAAL,GAAYC,kBAAZ,CAA+B,UAAAC,IAAI,EAAE;AAC/D,YAAMC,SAAS,GAAG9D,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,2BAAuCgC,IAAI,CAACG,GAA5C,cAAmD,OAAKjC,KAAL,CAAWkC,EAA9D,EAAlB;AAGAH,QAAAA,SAAS,CAACI,KAAV,CAAgB,IAAhB,EAAsBC,GAAtB,CAA0B,OAAKpC,KAAL,CAAWkC,EAArC;AAGAH,QAAAA,SAAS,CAACI,KAAV,CAAgB,YAAhB,EAA8BC,GAA9B,CAAkC,OAAKpC,KAAL,CAAWqC,UAA7C;AACAN,QAAAA,SAAS,CAACI,KAAV,CAAgB,aAAhB,EAA+BC,GAA/B,CAAmC,OAAKpC,KAAL,CAAWsC,WAA9C;AACAP,QAAAA,SAAS,CAACI,KAAV,CAAgB,MAAhB,EAAwBC,GAAxB,CAA4B,OAAKpC,KAAL,CAAWuC,IAAvC;AACAR,QAAAA,SAAS,CAACI,KAAV,CAAgB,IAAhB,EAAsBC,GAAtB,CAA0B,OAAKpC,KAAL,CAAWwC,EAArC;AACAT,QAAAA,SAAS,CAACI,KAAV,CAAgB,cAAhB,EAAgCC,GAAhC,CAAoC,OAAKpC,KAAL,CAAWyC,YAA/C;AACAV,QAAAA,SAAS,CAACI,KAAV,CAAgB,KAAhB,EAAuBC,GAAvB,CAA2B,OAAKpC,KAAL,CAAW0C,GAAtC;AACAX,QAAAA,SAAS,CAACI,KAAV,CAAgB,UAAhB,EAA4BC,GAA5B,CAAgC,OAAKpC,KAAL,CAAW2C,QAA3C;AACAZ,QAAAA,SAAS,CAACI,KAAV,CAAgB,IAAhB,EAAsBC,GAAtB,CAA0B,OAAKpC,KAAL,CAAW4C,EAArC;AACAb,QAAAA,SAAS,CAACI,KAAV,CAAgB,WAAhB,EAA6BC,GAA7B,CAAiC,OAAKpC,KAAL,CAAW6C,SAA5C;AACAd,QAAAA,SAAS,CAACI,KAAV,CAAgB,UAAhB,EAA4BC,GAA5B,CAAgC,OAAKpC,KAAL,CAAW8C,QAA3C;AACAf,QAAAA,SAAS,CAACI,KAAV,CAAgB,YAAhB,EAA8BC,GAA9B,CAAkC,OAAKpC,KAAL,CAAW+C,UAA7C;AACAhB,QAAAA,SAAS,CAACI,KAAV,CAAgB,eAAhB,EAAiCC,GAAjC,CAAqC,OAAKpC,KAAL,CAAWgD,aAAhD;AACAjB,QAAAA,SAAS,CAACI,KAAV,CAAgB,KAAhB,EAAuBC,GAAvB,CAA2B,OAAKpC,KAAL,CAAWiD,GAAtC;AAID,OAvB2B,CAA1B;AA0BD,KA/WoB;;AAAA,WAoiBvBC,cApiBuB,GAoiBN,YAAM;AAErB,UAAIC,KAAK,GAAG,MAAZ;;AACA,UAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,eAAKC,IAAL,CAAUC,KAAV,CAAgBC,UAAhB,CAA2B,KAA3B,EAAkC,MAAlC;;AACAH,QAAAA,KAAK,GAAG,KAAR;AACD,OAHD,MAGO;AACL,eAAKC,IAAL,CAAUC,KAAV,CAAgBC,UAAhB,CAA2B,MAA3B,EAAmC,MAAnC;;AACAH,QAAAA,KAAK,GAAG,MAAR;AACD;AACF,KA9iBsB;;AAAA,WAqkBvBI,UArkBuB,GAqkBV,YAAM;AACjB,UAAIT,QAAQ,GAAG,UAAf;;AAA2B,aAAKU,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEX;AAAhB,OAAd;AAC5B,KAvkBsB;;AAAA,WAwkBvBY,WAxkBuB,GAwkBT,YAAM;AAClB,UAAIZ,QAAQ,GAAG,EAAf;;AAAmB,aAAKU,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEX;AAAhB,OAAd;AACpB,KA1kBsB;;AAAA,WA2kBvBa,YA3kBuB,GA2kBR,YAAM;AACnB,UAAIZ,UAAU,GAAG,YAAjB;;AAA+B,aAAKS,QAAL,CAAc;AAAEI,QAAAA,cAAc,EAAEb;AAAlB,OAAd;AAChC,KA7kBsB;;AAAA,WA8kBvBc,aA9kBuB,GA8kBP,YAAM;AACpB,UAAId,UAAU,GAAG,EAAjB;;AAAqB,aAAKS,QAAL,CAAc;AAAEI,QAAAA,cAAc,EAAEb;AAAlB,OAAd;AACtB,KAhlBsB;;AAAA,WAilBvBe,KAjlBuB,GAilBf,YAAM;AACZ,UAAIpB,GAAG,GAAG,KAAV;;AAAiB,aAAKc,QAAL,CAAc;AAAEO,QAAAA,OAAO,EAAErB;AAAX,OAAd;AAClB,KAnlBsB;;AAAA,WAolBvBsB,MAplBuB,GAolBd,YAAM;AACb,UAAItB,GAAG,GAAG,EAAV;;AAAc,aAAKc,QAAL,CAAc;AAAEO,QAAAA,OAAO,EAAErB;AAAX,OAAd;AACf,KAtlBsB;;AAAA,WAulBvBuB,KAvlBuB,GAulBf,YAAM;AACZ,UAAIhB,GAAG,GAAG,KAAV;;AAAiB,aAAKO,QAAL,CAAc;AAAEU,QAAAA,OAAO,EAAEjB;AAAX,OAAd;AAClB,KAzlBsB;;AAAA,WA0lBvBkB,MA1lBuB,GA0lBd,YAAM;AACb,UAAIlB,GAAG,GAAG,EAAV;;AAAc,aAAKO,QAAL,CAAc;AAAEU,QAAAA,OAAO,EAAEjB;AAAX,OAAd;AACf,KA5lBsB;;AAAA,WA6lBvBmB,cA7lBuB,GA6lBN,YAAM;AACrB,UAAI3B,YAAY,GAAG,cAAnB;;AAAmC,aAAKe,QAAL,CAAc;AAAEa,QAAAA,gBAAgB,EAAE5B;AAApB,OAAd;AACpC,KA/lBsB;;AAAA,WAgmBvB6B,eAhmBuB,GAgmBL,YAAM;AACtB,UAAI7B,YAAY,GAAG,EAAnB;;AAAuB,aAAKe,QAAL,CAAc;AAAEa,QAAAA,gBAAgB,EAAE5B;AAApB,OAAd;AACxB,KAlmBsB;;AAAA,WAmmBvB8B,UAnmBuB,GAmmBV,YAAM;AACjB,UAAI5B,QAAQ,GAAG,UAAf;;AAA2B,aAAKa,QAAL,CAAc;AAAEgB,QAAAA,YAAY,EAAE7B;AAAhB,OAAd;AAC5B,KArmBsB;;AAAA,WAsmBvB8B,WAtmBuB,GAsmBT,YAAM;AAClB,UAAI9B,QAAQ,GAAG,EAAf;;AAAmB,aAAKa,QAAL,CAAc;AAAEgB,QAAAA,YAAY,EAAE7B;AAAhB,OAAd;AACpB,KAxmBsB;;AAAA,WAymBvB+B,MAzmBuB,GAymBd,YAAM;AACb,UAAInC,IAAI,GAAG,MAAX;;AAAmB,aAAKiB,QAAL,CAAc;AAAEmB,QAAAA,QAAQ,EAAEpC;AAAZ,OAAd;AACpB,KA3mBsB;;AAAA,WA4mBvBqC,OA5mBuB,GA4mBb,YAAM;AACd,UAAIrC,IAAI,GAAG,EAAX;;AAAe,aAAKiB,QAAL,CAAc;AAAEmB,QAAAA,QAAQ,EAAEpC;AAAZ,OAAd;AAChB,KA9mBsB;;AAAA,WA+mBvBsC,IA/mBuB,GA+mBhB,YAAM;AACX,UAAIC,EAAE,GAAG,IAAT;;AAAe,aAAKtB,QAAL,CAAc;AAAEuB,QAAAA,MAAM,EAAED;AAAV,OAAd;AAChB,KAjnBsB;;AAAA,WAknBvBE,KAlnBuB,GAknBf,YAAM;AACZ,UAAIF,EAAE,GAAG,EAAT;;AAAa,aAAKtB,QAAL,CAAc;AAAEuB,QAAAA,MAAM,EAAED;AAAV,OAAd;AACd,KApnBsB;;AAAA,WAqnBvBG,UArnBuB,GAqnBV,YAAM;AACjB,UAAIC,QAAQ,GAAG,eAAf;;AAAgC,aAAK1B,QAAL,CAAc;AAAE2B,QAAAA,YAAY,EAAED;AAAhB,OAAd;AACjC,KAvnBsB;;AAAA,WAwnBvBE,WAxnBuB,GAwnBT,YAAM;AAClB,UAAIF,QAAQ,GAAG,EAAf;;AAAmB,aAAK1B,QAAL,CAAc;AAAE2B,QAAAA,YAAY,EAAED;AAAhB,OAAd;AACpB,KA1nBsB;;AAAA,WA2nBvBG,IA3nBuB,GA2nBhB,YAAM;AACX,UAAIzC,EAAE,GAAG,IAAT;;AAAe,aAAKY,QAAL,CAAc;AAAE8B,QAAAA,MAAM,EAAE1C;AAAV,OAAd;AAChB,KA7nBsB;;AAAA,WA8nBvB2C,KA9nBuB,GA8nBf,YAAM;AACZ,UAAI3C,EAAE,GAAG,EAAT;;AAAa,aAAKY,QAAL,CAAc;AAAE8B,QAAAA,MAAM,EAAE1C;AAAV,OAAd;AACd,KAhoBsB;;AAAA,WAqoBtB4C,MAroBsB,GAqoBb,UAACC,CAAD,EAAIC,CAAJ,EAAOvC,KAAP,EAAiB;AACxB,UAAIwC,QAAQ,GAAG,OAAK3F,KAAL,CAAW2F,QAA1B,CADwB,CACc;;AACvC,UAAIxC,KAAK,KAAK,MAAd,EAAsB;AACpB,eAAOsC,CAAC,CAACG,QAAF,GAAaF,CAAC,CAACE,QAAtB;AACD,OAFD,MAEO;AACL,eAAOF,CAAC,CAACE,QAAF,GAAaH,CAAC,CAACG,QAAtB;AACD;AACF,KA5oBsB;;AAAA,WAuqBvBC,MAvqBuB,GAuqBd,UAACC,GAAD,EAAS;AAIhBrH,MAAAA,UAAU,CAACsH,MAAX,CAAkBC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAlB,EACKC,IADL,CACU,UAACC,IAAD,EAAU;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAMG,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAhB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;;AACA,eAAK9C,QAAL,CAAc;AACZ8C,UAAAA,OAAO,EAAEA;AADG,SAAd;AAGH,OARL;AASD,KAprBsB;;AAEf,WAAKtG,KAAL,GAAa;AAEXT,MAAAA,IAAI,EAAJA,IAFW;AAGXkB,MAAAA,IAAI,EAAG,SAHI;AAIXC,MAAAA,KAAK,EAAG,SAJG;AAKXC,MAAAA,WAAW,EAAG,EALH;AAMXC,MAAAA,YAAY,EAAG,EANJ;AAOXP,MAAAA,GAAG,EAAG,WAPK;AAQXD,MAAAA,MAAM,EAAG,WARE;AASXS,MAAAA,IAAI,EAAG,YATI;AAUXC,MAAAA,OAAO,EAAG,YAVC;AAWXC,MAAAA,SAAS,EAAG,IAXD;AAaXsB,MAAAA,UAAU,EAAE,EAbD;AAcXC,MAAAA,WAAW,EAAE,EAdF;AAeXC,MAAAA,IAAI,EAAE,EAfK;AAgBXC,MAAAA,EAAE,EAAE,EAhBO;AAiBXC,MAAAA,YAAY,EAAE,EAjBH;AAkBXC,MAAAA,GAAG,EAAE,EAlBM;AAmBXC,MAAAA,QAAQ,EAAE,EAnBC;AAoBXC,MAAAA,EAAE,EAAE,EApBO;AAqBXC,MAAAA,SAAS,EAAE,EArBA;AAsBXC,MAAAA,QAAQ,EAAE,EAtBC;AAuBXC,MAAAA,UAAU,EAAE,EAvBD;AAwBXC,MAAAA,aAAa,EAAE,EAxBJ;AAyBXC,MAAAA,GAAG,EAAE,EAzBM;AA2BXf,MAAAA,EAAE,EAAE,EA3BO;AA4BXuE,MAAAA,GAAG,EAAE,CA5BM;AA6BXC,MAAAA,KAAK,EAAE,EA7BI;AA8BXC,MAAAA,IAAI,EAAE,EA9BK;AA+BXC,MAAAA,IAAI,EAAE,EA/BK;AAmCXC,MAAAA,OAAO,EAAE,EAnCE;AAoCXC,MAAAA,MAAM,EAAE,EApCG;AAqCX7G,MAAAA,OAAO,EAAE,EArCE;AAsCX0F,MAAAA,QAAQ,EAAE,EAtCC;AAuCXE,MAAAA,MAAM,EAAE,EAvCG;AAwCXS,MAAAA,OAAO,EAAE,IAxCE;AA0CXS,MAAAA,WAAW,EAAE,eA1CF;AA4CXpC,MAAAA,QAAQ,EAAE,MA5CC;AA6CXI,MAAAA,MAAM,EAAE,IA7CG;AA8CXV,MAAAA,gBAAgB,EAAE,cA9CP;AA+CXN,MAAAA,OAAO,EAAE,KA/CE;AAgDXS,MAAAA,YAAY,EAAE,UAhDH;AAiDXc,MAAAA,MAAM,EAAE,IAjDG;AAkDX0B,MAAAA,aAAa,EAAE,WAlDJ;AAmDXvD,MAAAA,YAAY,EAAE,UAnDH;AAoDXG,MAAAA,cAAc,EAAE,YApDL;AAqDXqD,MAAAA,iBAAiB,EAAE,eArDR;AAsDX/C,MAAAA,OAAO,EAAE,KAtDE,CA4Db;AACA;AACA;AACA;;AA/Da,KAAb;AAgEA,WAAKgD,YAAL,GAAoB,OAAKA,YAAL,CAAkBC,IAAlB,wDAApB;AACA,WAAKC,YAAL,GAAoB,OAAKA,YAAL,CAAkBD,IAAlB,wDAApB;AACA,WAAKE,YAAL,GAAoB,OAAKA,YAAL,CAAkBF,IAAlB,wDAApB;AACA,WAAKG,SAAL,GAAiB,OAAKA,SAAL,CAAeH,IAAf,wDAAjB;AArEe;AA0EhB,G,CAED;;;;;iCACaI,C,EAAG;AACd,WAAK/D,QAAL,qBACG+D,CAAC,CAACC,MAAF,CAAShI,IADZ,EACmB+H,CAAC,CAACC,MAAF,CAASC,KAD5B;AAGA,UAAI5B,MAAM,GAAG,KAAK7F,KAAL,CAAW6F,MAAxB;AACA,UAAIF,QAAQ,GAAG,KAAK3F,KAAL,CAAW8G,MAAX,CAAkBjB,MAAlB,CAAyB,UAAU6B,IAAV,EAAgB;AACxD,eAAOC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoBG,GAApB,CAAwB,UAAUJ,KAAV,EAAiB;AAChD,iBAAOK,MAAM,CAACL,KAAD,CAAb;AACO,SAFA,EAEEM,IAFF,CAEO,UAAUN,KAAV,EAAiB;AACpB,iBAAOA,KAAK,CAACO,QAAN,CAAenC,MAAf,CAAP;AACV,SAJM,CAAP;AAMC,OAPc,CAAf;AAQA,UAAIoC,QAAQ,GAAG,EAAf;AAMD,K,CACD;;;;iCACaV,C,EAAG;AAAA;;AACdA,MAAAA,CAAC,CAACW,cAAF,GADc,CAEd;;AACA,WAAKvG,kBAAL,GAA0B1D,IAAI,CAAC2D,IAAL,GAAYC,kBAAZ,CAA+B,UAAAC,IAAI,EAAE;AAC/D,YAAMqG,UAAU,GAAGlK,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,0BAAsCgC,IAAI,CAACG,GAA3C,EAAnB;AACA,YAAMmG,OAAO,GAAGnK,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,2BAAuCgC,IAAI,CAACG,GAA5C,cAAmDmG,OAAnD,EAAhB;AAGA,YAAMC,MAAM,GAAG;AAEbhG,UAAAA,UAAU,EAAE,MAAI,CAACrC,KAAL,CAAWqC,UAFV;AAGbC,UAAAA,WAAW,EAAE,MAAI,CAACtC,KAAL,CAAWsC,WAHX;AAIbC,UAAAA,IAAI,EAAE,MAAI,CAACvC,KAAL,CAAWuC,IAJJ;AAKbC,UAAAA,EAAE,EAAE,MAAI,CAACxC,KAAL,CAAWwC,EALF;AAMbC,UAAAA,YAAY,EAAE,MAAI,CAACzC,KAAL,CAAWyC,YANZ;AAObC,UAAAA,GAAG,EAAE,MAAI,CAAC1C,KAAL,CAAW0C,GAPH;AAQbC,UAAAA,QAAQ,EAAE,MAAI,CAAC3C,KAAL,CAAW2C,QARR;AASbC,UAAAA,EAAE,EAAE,MAAI,CAAC5C,KAAL,CAAW4C,EATF;AAUbC,UAAAA,SAAS,EAAE,MAAI,CAAC7C,KAAL,CAAW6C,SAVT;AAWbC,UAAAA,QAAQ,EAAE,MAAI,CAAC9C,KAAL,CAAW8C,QAXR;AAYbC,UAAAA,UAAU,EAAE,MAAI,CAAC/C,KAAL,CAAW+C,UAZV;AAabC,UAAAA,aAAa,EAAE,MAAI,CAAChD,KAAL,CAAWgD,aAbb;AAcbC,UAAAA,GAAG,EAAE,MAAI,CAACjD,KAAL,CAAWiD,GAdH;AAgBbf,UAAAA,EAAE,EAAE,MAAI,CAAClC,KAAL,CAAWkC;AAhBF,SAAf;AAsBAiG,QAAAA,UAAU,CAACG,IAAX,CAAgBD,MAAhB,EA3B+D,CA4B/D;;AACA,QAAA,MAAI,CAAC7E,QAAL,CAAc;AACZnB,UAAAA,UAAU,EAAE,EADA;AAEZC,UAAAA,WAAW,EAAE,EAFD;AAGZC,UAAAA,IAAI,EAAE,EAHM;AAIZC,UAAAA,EAAE,EAAE,EAJQ;AAKZC,UAAAA,YAAY,EAAE,EALF;AAMZC,UAAAA,GAAG,EAAE,EANO;AAOZC,UAAAA,QAAQ,EAAE,EAPE;AAQZC,UAAAA,EAAE,EAAE,EARQ;AASZC,UAAAA,SAAS,EAAE,EATC;AAUZC,UAAAA,QAAQ,EAAE,EAVE;AAWZC,UAAAA,UAAU,EAAE,EAXA;AAYZC,UAAAA,aAAa,EAAE,EAZH;AAaZC,UAAAA,GAAG,EAAE;AAbO,SAAd;AAkBD,OA/C2B,CAA1B;AAgDH,K,CAMC;AACA;AACA;AACA;AACA;;;;wCAEoB;AAAA;;AAClB,WAAKtB,kBAAL,GAA0B1D,IAAI,CAAC2D,IAAL,GAAYC,kBAAZ,CAA+B,UAAAC,IAAI,EAAE;AAC7D,YAAMqG,UAAU,GAAGlK,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,0BAAsCgC,IAAI,CAACG,GAA3C,EAAnB;AACAkG,QAAAA,UAAU,CAACI,EAAX,CAAc,OAAd,EAAuB,UAACC,QAAD,EAAc;AAGnC,cAAI7C,QAAQ,GAAG6C,QAAQ,CAACC,GAAT,EAAf;AACA,cAAI5C,MAAM,GAAG,EAAb;AAIF,cAAIiB,MAAM,GAAG0B,QAAQ,CAACC,GAAT,EAAb;AACA,cAAIxI,OAAO,GAAGuI,QAAQ,CAACC,GAAT,EAAd;AAEA,cAAIR,QAAQ,GAAG,EAAf;AACA,cAAIS,SAAS,GAAG,EAAhB;AACA,cAAIC,SAAS,GAAG,EAAhB;;AAEA,eAAK,IAAIxF,KAAT,IAAkB2D,MAAlB,EAA0B;AACxBmB,YAAAA,QAAQ,CAACK,IAAT,CAAc;AACZpG,cAAAA,EAAE,EAAEiB,KADQ;AAEZd,cAAAA,UAAU,EAAEyE,MAAM,CAAC3D,KAAD,CAAN,CAAcd,UAFd;AAGZC,cAAAA,WAAW,EAAEwE,MAAM,CAAC3D,KAAD,CAAN,CAAcb,WAHf;AAIZC,cAAAA,IAAI,EAAEuE,MAAM,CAAC3D,KAAD,CAAN,CAAcZ,IAJR;AAKZC,cAAAA,EAAE,EAAEsE,MAAM,CAAC3D,KAAD,CAAN,CAAcX,EALN;AAMZC,cAAAA,YAAY,EAAEqE,MAAM,CAAC3D,KAAD,CAAN,CAAcV,YANhB;AAOZC,cAAAA,GAAG,EAAEoE,MAAM,CAAC3D,KAAD,CAAN,CAAcT,GAPP;AAQZC,cAAAA,QAAQ,EAAEmE,MAAM,CAAC3D,KAAD,CAAN,CAAcR,QARZ;AASZC,cAAAA,EAAE,EAAEkE,MAAM,CAAC3D,KAAD,CAAN,CAAcP,EATN;AAUZC,cAAAA,SAAS,EAAEiE,MAAM,CAAC3D,KAAD,CAAN,CAAcN,SAVb;AAWZC,cAAAA,QAAQ,EAAEgE,MAAM,CAAC3D,KAAD,CAAN,CAAcL,QAXZ;AAYZC,cAAAA,UAAU,EAAE+D,MAAM,CAAC3D,KAAD,CAAN,CAAcJ,UAZd;AAaZC,cAAAA,aAAa,EAAE8D,MAAM,CAAC3D,KAAD,CAAN,CAAcH,aAbjB;AAcZC,cAAAA,GAAG,EAAE6D,MAAM,CAAC3D,KAAD,CAAN,CAAcF;AAdP,aAAd;AAmBD;;AACD,eAAK,IAAI2F,MAAT,IAAmB3I,OAAnB,EAA4B;AAC1ByI,YAAAA,SAAS,CAACJ,IAAV,CAAe;AAGbjG,cAAAA,UAAU,EAAEpC,OAAO,CAAC2I,MAAD,CAAP,CAAgBvG,UAHf;AAKbuD,cAAAA,QAAQ,EAAE3F,OAAO,CAAC2I,MAAD,CAAP,CAAgBhD,QALb;AAMbiD,cAAAA,aAAa,EAAE5I,OAAO,CAAC2I,MAAD,CAAP,CAAgBC,aANlB;AAObC,cAAAA,aAAa,EAAE7I,OAAO,CAAC2I,MAAD,CAAP,CAAgBE,aAPlB;AAQbC,cAAAA,aAAa,EAAE9I,OAAO,CAAC2I,MAAD,CAAP,CAAgBG;AARlB,aAAf;AAaD;;AACDL,UAAAA,SAAS,CAACM,IAAV,CAAe,UAASvD,CAAT,EAAYC,CAAZ,EAAe;AAE5B,gBAAID,CAAC,CAACpD,UAAF,KAAiBqD,CAAC,CAACrD,UAAvB,EAAmC;AACjC,qBAAO,CAAP;AACD;;AACD,mBAAOoD,CAAC,CAACpD,UAAF,GAAeqD,CAAC,CAACrD,UAAjB,GAA8B,CAA9B,GAAkC,CAAC,CAA1C;AACH,WANC;AAOF4F,UAAAA,QAAQ,CAACe,IAAT,CAAc,UAASvD,CAAT,EAAYC,CAAZ,EAAe;AAE3B,gBAAIA,CAAC,CAACrD,UAAF,KAAiBoD,CAAC,CAACpD,UAAvB,EAAmC;AACjC,qBAAO,CAAP;AACD;;AACD,mBAAOqD,CAAC,CAACrD,UAAF,GAAeoD,CAAC,CAACpD,UAAjB,GAA8B,CAA9B,GAAkC,CAAC,CAA1C;AACH,WANC;;AAUE,UAAA,MAAI,CAACmB,QAAL,CAAc;AACZsD,YAAAA,MAAM,EAAEmB,QADI;AAEZhI,YAAAA,OAAO,EAAEgI,QAFG;AAGZtC,YAAAA,QAAQ,EAAEsC;AAHE,WAAd;;AASA7B,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACrG,KAAL,CAAW2F,QAAvB;AAMD,SAnFC;AAqFH,OAvF2B,CAA1B;AA0FH;;;+BAIUjE,M,EAAQ;AAAA;;AACjB,UAAIkF,IAAI,GAAG,EAAX;AACA,WAAKjF,kBAAL,GAA0B1D,IAAI,CAAC2D,IAAL,GAAYC,kBAAZ,CAA+B,UAAAC,IAAI,EAAE;AAC/D,YAAMC,SAAS,GAAG9D,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,2BAAuCgC,IAAI,CAACG,GAA5C,cAAmDP,MAAnD,EAAlB;AAEAK,QAAAA,SAAS,CAACwG,EAAV,CAAa,OAAb,EAAsB,UAACC,QAAD,EAAc;AAElC,UAAA,MAAI,CAAChF,QAAL,CAAc;AACZnB,YAAAA,UAAU,EAAE,EADA;AAEZC,YAAAA,WAAW,EAAE,EAFD;AAGZC,YAAAA,IAAI,EAAE,EAHM;AAIZC,YAAAA,EAAE,EAAE,EAJQ;AAKZC,YAAAA,YAAY,EAAE,EALF;AAMZC,YAAAA,GAAG,EAAE,EANO;AAOZC,YAAAA,QAAQ,EAAE,EAPE;AAQZC,YAAAA,EAAE,EAAE,EARQ;AASZC,YAAAA,SAAS,EAAE,EATC;AAUZC,YAAAA,QAAQ,EAAE,EAVE;AAWZC,YAAAA,UAAU,EAAE,EAXA;AAYZC,YAAAA,aAAa,EAAE,EAZH;AAaZC,YAAAA,GAAG,EAAE;AAbO,WAAd;;AAiBF,cAAI6D,MAAM,GAAG0B,QAAQ,CAACC,GAAT,EAAb;AACA,cAAIvG,EAAE,GAAGjE,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,GAAsBqC,KAAtB,2BAA+CL,IAAI,CAACG,GAApD,cAA2DP,MAA3D,GAAqE+E,GAA9E;AAEA,cAAIwB,QAAQ,GAAG,EAAf;;AACA,eAAK,IAAI9E,KAAT,IAAkB2D,MAAlB,EAA0B;AACxBmB,YAAAA,QAAQ,CAACK,IAAT,CAAc;AACZpG,cAAAA,EAAE,EAAEiB,KADQ;AAGZd,cAAAA,UAAU,EAAEyE,MAAM,CAAC3D,KAAD,CAAN,CAAcd,UAHd;AAIZC,cAAAA,WAAW,EAAEwE,MAAM,CAAC3D,KAAD,CAAN,CAAcb,WAJf;AAKZC,cAAAA,IAAI,EAAEuE,MAAM,CAAC3D,KAAD,CAAN,CAAcZ,IALR;AAMZC,cAAAA,EAAE,EAAEsE,MAAM,CAAC3D,KAAD,CAAN,CAAcX,EANN;AAOZC,cAAAA,YAAY,EAAEqE,MAAM,CAAC3D,KAAD,CAAN,CAAcV,YAPhB;AAQZC,cAAAA,GAAG,EAAEoE,MAAM,CAAC3D,KAAD,CAAN,CAAcT,GARP;AASZC,cAAAA,QAAQ,EAAEmE,MAAM,CAAC3D,KAAD,CAAN,CAAcR,QATZ;AAUZC,cAAAA,EAAE,EAAEkE,MAAM,CAAC3D,KAAD,CAAN,CAAcP,EAVN;AAWZC,cAAAA,SAAS,EAAEiE,MAAM,CAAC3D,KAAD,CAAN,CAAcN,SAXb;AAYZC,cAAAA,QAAQ,EAAEgE,MAAM,CAAC3D,KAAD,CAAN,CAAcL,QAZZ;AAaZC,cAAAA,UAAU,EAAE+D,MAAM,CAAC3D,KAAD,CAAN,CAAcJ,UAbd;AAcZC,cAAAA,aAAa,EAAE8D,MAAM,CAAC3D,KAAD,CAAN,CAAcH,aAdjB;AAeZC,cAAAA,GAAG,EAAE6D,MAAM,CAAC3D,KAAD,CAAN,CAAcF;AAfP,aAAd;AAkBD;;AACD,UAAA,MAAI,CAACO,QAAL,CAAc;AAEZtB,YAAAA,EAAE,EAAEA,EAFQ;AAGZuE,YAAAA,GAAG,EAAE,CAHO;AAKZpE,YAAAA,UAAU,EAAEmG,QAAQ,CAACrG,KAAT,CAAe,YAAf,EAA6BsG,GAA7B,EALA;AAMZnG,YAAAA,WAAW,EAAEkG,QAAQ,CAACrG,KAAT,CAAe,aAAf,EAA8BsG,GAA9B,EAND;AAOZlG,YAAAA,IAAI,EAAEiG,QAAQ,CAACrG,KAAT,CAAe,MAAf,EAAuBsG,GAAvB,EAPM;AAQZjG,YAAAA,EAAE,EAAEgG,QAAQ,CAACrG,KAAT,CAAe,IAAf,EAAqBsG,GAArB,EARQ;AASZhG,YAAAA,YAAY,EAAE+F,QAAQ,CAACrG,KAAT,CAAe,cAAf,EAA+BsG,GAA/B,EATF;AAUZ/F,YAAAA,GAAG,EAAE8F,QAAQ,CAACrG,KAAT,CAAe,KAAf,EAAsBsG,GAAtB,EAVO;AAWZ9F,YAAAA,QAAQ,EAAE6F,QAAQ,CAACrG,KAAT,CAAe,UAAf,EAA2BsG,GAA3B,EAXE;AAYZ7F,YAAAA,EAAE,EAAE4F,QAAQ,CAACrG,KAAT,CAAe,IAAf,EAAqBsG,GAArB,EAZQ;AAaZ5F,YAAAA,SAAS,EAAE2F,QAAQ,CAACrG,KAAT,CAAe,WAAf,EAA4BsG,GAA5B,EAbC;AAcZ3F,YAAAA,QAAQ,EAAE0F,QAAQ,CAACrG,KAAT,CAAe,UAAf,EAA2BsG,GAA3B,EAdE;AAeZ1F,YAAAA,UAAU,EAAEyF,QAAQ,CAACrG,KAAT,CAAe,YAAf,EAA6BsG,GAA7B,EAfA;AAgBZzF,YAAAA,aAAa,EAAEwF,QAAQ,CAACrG,KAAT,CAAe,eAAf,EAAgCsG,GAAhC,EAhBH;AAiBZxF,YAAAA,GAAG,EAAEuF,QAAQ,CAACrG,KAAT,CAAe,KAAf,EAAsBsG,GAAtB;AAjBO,WAAd;AA6BL,SAxEK;AA0ED,OA7E2B,CAA1B;AA8EH;;;8BAmCS/G,M,EAAQ;AAAA;;AAChB,UAAIkF,IAAI,GAAG,EAAX;AACA,WAAKjF,kBAAL,GAA0B1D,IAAI,CAAC2D,IAAL,GAAYC,kBAAZ,CAA+B,UAAAC,IAAI,EAAE;AAC/D,YAAMC,SAAS,GAAG9D,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,2BAAuCgC,IAAI,CAACG,GAA5C,cAAmDP,MAAnD,EAAlB;AAGAK,QAAAA,SAAS,CAACwG,EAAV,CAAa,OAAb,EAAsB,UAACC,QAAD,EAAc;AAEpC,cAAI1B,MAAM,GAAG0B,QAAQ,CAACC,GAAT,EAAb;AAEA,cAAIR,QAAQ,GAAG,EAAf;;AACA,eAAK,IAAI9E,KAAT,IAAkB2D,MAAlB,EAA0B;AACxBmB,YAAAA,QAAQ,CAACK,IAAT,CAAc;AACZpG,cAAAA,EAAE,EAAEiB,KADQ;AAGZd,cAAAA,UAAU,EAAEyE,MAAM,CAAC3D,KAAD,CAAN,CAAcd,UAHd;AAIZC,cAAAA,WAAW,EAAEwE,MAAM,CAAC3D,KAAD,CAAN,CAAcb,WAJf;AAKZC,cAAAA,IAAI,EAAEuE,MAAM,CAAC3D,KAAD,CAAN,CAAcZ,IALR;AAMZC,cAAAA,EAAE,EAAEsE,MAAM,CAAC3D,KAAD,CAAN,CAAcX,EANN;AAOZC,cAAAA,YAAY,EAAEqE,MAAM,CAAC3D,KAAD,CAAN,CAAcV,YAPhB;AAQZC,cAAAA,GAAG,EAAEoE,MAAM,CAAC3D,KAAD,CAAN,CAAcT,GARP;AASZC,cAAAA,QAAQ,EAAEmE,MAAM,CAAC3D,KAAD,CAAN,CAAcR,QATZ;AAUZC,cAAAA,EAAE,EAAEkE,MAAM,CAAC3D,KAAD,CAAN,CAAcP,EAVN;AAWZC,cAAAA,SAAS,EAAEiE,MAAM,CAAC3D,KAAD,CAAN,CAAcN,SAXb;AAYZC,cAAAA,QAAQ,EAAEgE,MAAM,CAAC3D,KAAD,CAAN,CAAcL,QAZZ;AAaZC,cAAAA,UAAU,EAAE+D,MAAM,CAAC3D,KAAD,CAAN,CAAcJ,UAbd;AAcZC,cAAAA,aAAa,EAAE8D,MAAM,CAAC3D,KAAD,CAAN,CAAcH,aAdjB;AAeZC,cAAAA,GAAG,EAAE6D,MAAM,CAAC3D,KAAD,CAAN,CAAcF;AAfP,aAAd;AAkBD;;AACD,UAAA,MAAI,CAACO,QAAL,CAAc;AAEZtB,YAAAA,EAAE,EAAE,EAFQ;AAGZuE,YAAAA,GAAG,EAAE,CAHO;AAIZpE,YAAAA,UAAU,EAAE,EAJA;AAKZC,YAAAA,WAAW,EAAE,EALD;AAMZC,YAAAA,IAAI,EAAE,EANM;AAOZC,YAAAA,EAAE,EAAE,EAPQ;AAQZC,YAAAA,YAAY,EAAE,EARF;AASZC,YAAAA,GAAG,EAAE,EATO;AAUZC,YAAAA,QAAQ,EAAE,EAVE;AAWZC,YAAAA,EAAE,EAAE,EAXQ;AAYZC,YAAAA,SAAS,EAAE,EAZC;AAaZC,YAAAA,QAAQ,EAAE,EAbE;AAcZC,YAAAA,UAAU,EAAE,EAdA;AAeZC,YAAAA,aAAa,EAAE,EAfH;AAgBZC,YAAAA,GAAG,EAAE;AAhBO,WAAd;AAsBH,SA/CG;AAgDD,OApD2B,CAA1B;AAqDH;;;uCAEqBvB,M,EAAQ;AAAA;;AAExB,UAAIkF,IAAI,GAAG,EAAX;AACA,WAAKjF,kBAAL,GAA0B1D,IAAI,CAAC2D,IAAL,GAAYC,kBAAZ,CAA+B,UAAAC,IAAI,EAAE;AAC/D,YAAMC,SAAS,GAAG9D,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,2BAAuCgC,IAAI,CAACG,GAA5C,cAAmDP,MAAnD,EAAlB;AAEAK,QAAAA,SAAS,CAACwG,EAAV,CAAa,OAAb,EAAsB,UAACC,QAAD,EAAc;AAEpC,cAAI1B,MAAM,GAAG0B,QAAQ,CAACC,GAAT,EAAb;AAEA,cAAIR,QAAQ,GAAG,EAAf;;AACA,eAAK,IAAI9E,KAAT,IAAkB2D,MAAlB,EAA0B;AACxBmB,YAAAA,QAAQ,CAACK,IAAT,CAAc;AACZpG,cAAAA,EAAE,EAAEiB,KADQ;AAGZd,cAAAA,UAAU,EAAEyE,MAAM,CAAC3D,KAAD,CAAN,CAAcd,UAHd;AAIZC,cAAAA,WAAW,EAAEwE,MAAM,CAAC3D,KAAD,CAAN,CAAcb,WAJf;AAKZC,cAAAA,IAAI,EAAEuE,MAAM,CAAC3D,KAAD,CAAN,CAAcZ,IALR;AAMZC,cAAAA,EAAE,EAAEsE,MAAM,CAAC3D,KAAD,CAAN,CAAcX,EANN;AAOZC,cAAAA,YAAY,EAAEqE,MAAM,CAAC3D,KAAD,CAAN,CAAcV,YAPhB;AAQZC,cAAAA,GAAG,EAAEoE,MAAM,CAAC3D,KAAD,CAAN,CAAcT,GARP;AASZC,cAAAA,QAAQ,EAAEmE,MAAM,CAAC3D,KAAD,CAAN,CAAcR,QATZ;AAUZC,cAAAA,EAAE,EAAEkE,MAAM,CAAC3D,KAAD,CAAN,CAAcP,EAVN;AAWZC,cAAAA,SAAS,EAAEiE,MAAM,CAAC3D,KAAD,CAAN,CAAcN,SAXb;AAYZC,cAAAA,QAAQ,EAAEgE,MAAM,CAAC3D,KAAD,CAAN,CAAcL,QAZZ;AAaZC,cAAAA,UAAU,EAAE+D,MAAM,CAAC3D,KAAD,CAAN,CAAcJ,UAbd;AAcZC,cAAAA,aAAa,EAAE8D,MAAM,CAAC3D,KAAD,CAAN,CAAcH,aAdjB;AAeZC,cAAAA,GAAG,EAAE6D,MAAM,CAAC3D,KAAD,CAAN,CAAcF;AAfP,aAAd;AAkBD;;AACD,UAAA,MAAI,CAACO,QAAL,CAAc;AAEZtB,YAAAA,EAAE,EAAEsG,QAAQ,CAACrG,KAAT,CAAe,IAAf,EAAqBsG,GAArB,EAFQ;AAGZhC,YAAAA,GAAG,EAAE,CAHO;AAKZpE,YAAAA,UAAU,EAAEmG,QAAQ,CAACrG,KAAT,CAAe,YAAf,EAA6BsG,GAA7B,EALA;AAMZnG,YAAAA,WAAW,EAAEkG,QAAQ,CAACrG,KAAT,CAAe,aAAf,EAA8BsG,GAA9B,EAND;AAOZlG,YAAAA,IAAI,EAAEiG,QAAQ,CAACrG,KAAT,CAAe,MAAf,EAAuBsG,GAAvB,EAPM;AAQZjG,YAAAA,EAAE,EAAEgG,QAAQ,CAACrG,KAAT,CAAe,IAAf,EAAqBsG,GAArB,EARQ;AASZhG,YAAAA,YAAY,EAAE+F,QAAQ,CAACrG,KAAT,CAAe,cAAf,EAA+BsG,GAA/B,EATF;AAUZ/F,YAAAA,GAAG,EAAE8F,QAAQ,CAACrG,KAAT,CAAe,KAAf,EAAsBsG,GAAtB,EAVO;AAWZ9F,YAAAA,QAAQ,EAAE6F,QAAQ,CAACrG,KAAT,CAAe,UAAf,EAA2BsG,GAA3B,EAXE;AAYZ7F,YAAAA,EAAE,EAAE4F,QAAQ,CAACrG,KAAT,CAAe,IAAf,EAAqBsG,GAArB,EAZQ;AAaZ5F,YAAAA,SAAS,EAAE2F,QAAQ,CAACrG,KAAT,CAAe,WAAf,EAA4BsG,GAA5B,EAbC;AAcZ3F,YAAAA,QAAQ,EAAE0F,QAAQ,CAACrG,KAAT,CAAe,UAAf,EAA2BsG,GAA3B,EAdE;AAeZ1F,YAAAA,UAAU,EAAEyF,QAAQ,CAACrG,KAAT,CAAe,YAAf,EAA6BsG,GAA7B,EAfA;AAgBZzF,YAAAA,aAAa,EAAEwF,QAAQ,CAACrG,KAAT,CAAe,eAAf,EAAgCsG,GAAhC,EAhBH;AAiBZxF,YAAAA,GAAG,EAAEuF,QAAQ,CAACrG,KAAT,CAAe,KAAf,EAAsBsG,GAAtB;AAjBO,WAAd;AAwBL,SAjDK;AAkDD,OArD2B,CAA1B;AA0DH;;;iCAEc/G,M,EAAQ;AACnB,WAAKC,kBAAL,GAA0B1D,IAAI,CAAC2D,IAAL,GAAYC,kBAAZ,CAA+B,UAAAC,IAAI,EAAE;AAC/D,YAAMC,SAAS,GAAG9D,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,2BAAuCgC,IAAI,CAACG,GAA5C,cAAmDP,MAAnD,EAAlB;AACAK,QAAAA,SAAS,CAACkH,MAAV;AACD,OAH2B,CAA1B;AAID;;;iCAEYxC,G,EAAK;AAEpB,WAAKjD,QAAL,CAAc;AAACiD,QAAAA,GAAG,EAAHA;AAAD,OAAd;AACD;;;8BAGUc,C,EAAG;AAAA;;AACZA,MAAAA,CAAC,CAACW,cAAF,GADY,CAEZ;;AACA,WAAKvG,kBAAL,GAA0B1D,IAAI,CAAC2D,IAAL,GAAYC,kBAAZ,CAA+B,UAAAC,IAAI,EAAE;AAC/D,YAAMqG,UAAU,GAAGlK,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,0BAAsCgC,IAAI,CAACG,GAA3C,EAAnB;AACA,YAAMmG,OAAO,GAAGnK,IAAI,CAAC+D,QAAL,GAAgBlC,GAAhB,2BAAuCgC,IAAI,CAACG,GAA5C,cAAmD,MAAI,CAACjC,KAAL,CAAWkC,EAA9D,EAAhB;AACA,YAAMgH,cAAc,GAAGnL,QAAQ,CAACiE,QAAT,GAAoBlC,GAApB,GAA0BqC,KAA1B,CAAgC,UAAhC,EAA4CmG,IAA5C,GAAmD7B,GAA1E;AAEA,YAAIvE,EAAE,GAAGgH,cAAT;AACA,YAAIC,GAAG,GAAGjH,EAAV;AAGA,YAAMmG,MAAM,GAAG;AAEbnG,UAAAA,EAAE,EAAE,MAAI,CAAClC,KAAL,CAAWkC,EAFF;AAGbG,UAAAA,UAAU,EAAE,MAAI,CAACrC,KAAL,CAAWqC,UAHV;AAIbC,UAAAA,WAAW,EAAE,MAAI,CAACtC,KAAL,CAAWsC,WAJX;AAKbC,UAAAA,IAAI,EAAE,MAAI,CAACvC,KAAL,CAAWuC,IALJ;AAMbC,UAAAA,EAAE,EAAE,MAAI,CAACxC,KAAL,CAAWwC,EANF;AAObC,UAAAA,YAAY,EAAE,MAAI,CAACzC,KAAL,CAAWyC,YAPZ;AAQbC,UAAAA,GAAG,EAAE,MAAI,CAAC1C,KAAL,CAAW0C,GARH;AASbC,UAAAA,QAAQ,EAAE,MAAI,CAAC3C,KAAL,CAAW2C,QATR;AAUbC,UAAAA,EAAE,EAAE,MAAI,CAAC5C,KAAL,CAAW4C,EAVF;AAWbC,UAAAA,SAAS,EAAE,MAAI,CAAC7C,KAAL,CAAW6C,SAXT;AAYbC,UAAAA,QAAQ,EAAE,MAAI,CAAC9C,KAAL,CAAW8C,QAZR;AAabC,UAAAA,UAAU,EAAE,MAAI,CAAC/C,KAAL,CAAW+C,UAbV;AAcbC,UAAAA,aAAa,EAAE,MAAI,CAAChD,KAAL,CAAWgD,aAdb;AAebC,UAAAA,GAAG,EAAE,MAAI,CAACjD,KAAL,CAAWiD;AAfH,SAAf;AAkBAkF,QAAAA,UAAU,CAAChG,KAAX,CAAiB,MAAI,CAACnC,KAAL,CAAWkC,EAA5B,EAAgCE,GAAhC,CAAoCiG,MAApC,EA3B+D,CAkC/D;AAED,OApC2B,CAA1B;AAqCD;;;gCA+BU;AACT,UAAIe,SAAS,GAAG,KAAK5H,KAAL,CAAW6H,OAA3B;AACA,aAAO;AAAEC,QAAAA,MAAM,EAAEF;AAAV,OAAP;AACD;;;4BA8EOG,G,EAAKC,U,EAAYjC,C,EAAGrF,E,EAAI;AAAA;;AAC9BkE,MAAAA,OAAO,CAACC,GAAR,WAAemD,UAAU,CAACtH,EAA1B;AACA,aACE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,QAAf;AACA,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACuH,UAAL,WAAmBD,UAAU,CAACtH,EAA9B,EAAN;AAAA,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAMD;;;8BAESqH,G,EAAKC,U,EAAYjC,C,EAAGrF,E,EAAI;AAAA;;AAChCkE,MAAAA,OAAO,CAACC,GAAR,WAAemD,UAAU,CAACtH,EAA1B;AACA,aACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,QAAd;AACA,QAAA,OAAO,EAAE;AAAA,iBAAM,OAAI,CAACwH,YAAL,WAAqBF,UAAU,CAACtH,EAAhC,EAAN;AAAA,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAMD;;;2BAoBK;AAAA,wBACiC,KAAKlC,KADtC;AAAA,UACGW,WADH,eACGA,WADH;AAAA,UACgBC,YADhB,eACgBA,YADhB;AAEF,UAAIrB,IAAI,GAAG,KAAKS,KAAL,CAAWC,OAAtB;;AAEF,UAAKU,WAAW,KAAKC,YAAhB,IAAgCA,YAAY,KAAK,EAAtD,EAA2D;AACxD,aAAK4C,QAAL,CAAe;AAAA,iBAAO;AACpB7C,YAAAA,WAAW,EAAG,EADM;AAEnBC,YAAAA,YAAY,EAAG;AAFI,WAAP;AAAA,SAAf;AAIA;AACA,OAVC,CAYJ;;;AACC,UAAKD,WAAW,GAAGC,YAAnB;AAAA,oBACmC,CAAEA,YAAF,EAAgBD,WAAhB,CADnC;AACKA,QAAAA,WADL;AACkBC,QAAAA,YADlB;AAAA,OAbG,CAgBJ;;;AAhBI,4BAiBsBjB,cAAc,CAAEgB,WAAF,EAAeC,YAAf,CAjBpC;AAAA;AAAA,UAiBMR,MAjBN;AAAA,UAiBcC,GAjBd;;AAAA,6BAkBwBV,cAAc,CAAEgB,WAAF,EAAeC,YAAf,CAlBtC;AAAA;AAAA,UAkBME,OAlBN;AAAA,UAkBeD,IAlBf;;AAoBF,WAAK2C,QAAL,CAAe;AAAA,eAAO;AACpB7C,UAAAA,WAAW,EAAG,EADM;AAEpBC,UAAAA,YAAY,EAAG,EAFK;AAGrBrB,UAAAA,IAAI,EAAGA,IAAI,CAACY,KAAL,EAHc;AAIpBM,UAAAA,IAAI,EAAGE,WAJa;AAKpBD,UAAAA,KAAK,EAAGE,YALY;AAMpBR,UAAAA,MAAM,EAANA,MANoB;AAMZC,UAAAA,GAAG,EAAHA,GANY;AAMPS,UAAAA,OAAO,EAAPA,OANO;AAMED,UAAAA,IAAI,EAAJA;AANF,SAAP;AAAA,OAAf;AAQD;;;8BAEQ;AACR,UAAItB,IAAI,GAAG,KAAKS,KAAL,CAAWC,OAAtB;AACA,WAAKuD,QAAL,CAAe;AAAA;AACZjE,UAAAA,IAAI,EAAGA,IAAI,CAACY,KAAL,EADK;AAEZQ,UAAAA,WAAW,EAAG,EAFF;AAGZC,UAAAA,YAAY,EAAG,EAHH;AAIZH,UAAAA,IAAI,EAAG,SAJK;AAKZC,UAAAA,KAAK,EAAG,SALI;AAMZL,UAAAA,GAAG,EAAG,WANM;AAOZD,UAAAA,MAAM,EAAG,SAPG;AAQZS,UAAAA,IAAI,EAAG;AARK,qBASJ,YATI;AAAA,OAAf;AAWA;;;6BASY;AAAA;;AACP,eAAS8I,eAAT,CAAyBC,IAAzB,EAA+BL,GAA/B,EAAmC;AACzC,eAAO,mDAAP;AACD;;AAHc,yBAIgF,KAAKvJ,KAJrF;AAAA,UAIPT,IAJO,gBAIPA,IAJO;AAAA,UAIDsK,QAJC,gBAIDA,QAJC;AAAA,UAISpJ,IAJT,gBAISA,IAJT;AAAA,UAIeC,KAJf,gBAIeA,KAJf;AAAA,UAIsBC,WAJtB,gBAIsBA,WAJtB;AAAA,UAImCC,YAJnC,gBAImCA,YAJnC;AAAA,UAIiDP,GAJjD,gBAIiDA,GAJjD;AAAA,UAIsDD,MAJtD,gBAIsDA,MAJtD;AAAA,UAI8DS,IAJ9D,gBAI8DA,IAJ9D;AAAA,UAIoEC,OAJpE,gBAIoEA,OAJpE;AAKP,aACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADE,CADF,EAKA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAEE,MAAM,CAACC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,MAAD;AAAS,QAAA,OAAO,EAAE;AAAA,iBAAM,OAAI,CAAC6I,SAAL,EAAN;AAAA,SAAlB;AAA0C,QAAA,QAAQ,EAAE,CAApD;AAAuD,QAAA,MAAM,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADE,CADF,CALA,CADF,EAYE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGJ,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAK9J,KAAL,CAAWyG,GAA5B;AAAiC,QAAA,QAAQ,EAAE,KAAKY,YAAhD;AAA8D,QAAA,gBAAgB,EAAE,CAAhF;AAAmF,QAAA,EAAE,EAAC,0BAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE,GADT;AACc,QAAA,MAAM,EAAE,GADtB;AAC2B,QAAA,IAAI,EAAE,KAAKrH,KAAL,CAAWC,OAD5C;AACqD,QAAA,MAAM,EAAC,OAD5D;AAEE,QAAA,MAAM,EAAE;AAACI,UAAAA,GAAG,EAAE,EAAN;AAAUK,UAAAA,KAAK,EAAE,EAAjB;AAAqBD,UAAAA,IAAI,EAAE,CAA3B;AAA8BL,UAAAA,MAAM,EAAE;AAAtC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGF,oBAAC,aAAD;AAAe,QAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHE,EAIF,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJE,EAKF,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALE,EAMF,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANE,EAQA,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWyD,YAA1C;AAAwD,QAAA,MAAM,EAAC,SAA/D;AAAyE,QAAA,SAAS,EAAE;AAACsG,UAAAA,CAAC,EAAE;AAAJ,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,EASF,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAE,KAAK/J,KAAL,CAAW4D,cAA1C;AAA0D,QAAA,MAAM,EAAC,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATE,EAUD,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAE,KAAK5D,KAAL,CAAW+D,OAA1C;AAAmD,QAAA,MAAM,EAAC,SAA1D;AAAoE,QAAA,SAAS,EAAE;AAACgG,UAAAA,CAAC,EAAE;AAAJ,SAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVC,EAWF,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAE,KAAK/J,KAAL,CAAWsF,MAA1C;AAAkD,QAAA,MAAM,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXE,EAYF,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZE,EAaF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbE,CADA,CAFA,CALF,EA0BA,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,CAApC;AAAuC,QAAA,EAAE,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,OAAO,EAAE,KAAK/B,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEA;AAAQ,QAAA,OAAO,EAAE,KAAKG,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA,EAGA;AAAQ,QAAA,OAAO,EAAE,KAAKC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHA,EAIA;AAAQ,QAAA,OAAO,EAAE,KAAKE,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJA,EAKA;AAAQ,QAAA,OAAO,EAAE,KAAKC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,EAMA;AAAQ,QAAA,OAAO,EAAE,KAAKE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANA,EAOE;AAAQ,QAAA,OAAO,EAAE,KAAKqB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,EAQE;AAAQ,QAAA,OAAO,EAAE,KAAKE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,CA1BA,EAuCA;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACE,QAAA,IAAI,EAAC,sBADP;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,OAAO,EAAE,KAAKyE,OAAL,CAAa7C,IAAb,CAAmB,IAAnB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAVA,EAWE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,IAAI,EAAE,KAAKnH,KAAL,CAAWC,OAHnB;AAIE,QAAA,WAAW,EAAK,qBAACsH,CAAD;AAAA,iBAAO,OAAI,CAAC/D,QAAL,CAAc;AAAC7C,YAAAA,WAAW,EAAC4G,CAAC,CAAC0C;AAAf,WAAd,CAAP;AAAA,SAJlB;AAKE,QAAA,WAAW,EAAK,qBAAC1C,CAAD;AAAA,iBAAO,OAAI,CAACvH,KAAL,CAAWW,WAAX,IAA0B,OAAI,CAAC6C,QAAL,CAAc;AAAC5C,YAAAA,YAAY,EAAC2G,CAAC,CAAC0C;AAAhB,WAAd,CAAjC;AAAA,SALlB;AAME,QAAA,SAAS,EAAK,KAAKC,IAAL,CAAU/C,IAAV,CAAgB,IAAhB,CANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,aAAD;AAAe,QAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAcE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAeE,oBAAC,IAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,EAAC,UAA9B;AAAyC,QAAA,MAAM,EAAC,SAAhD;AAA0D,QAAA,iBAAiB,EAAE,GAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAgBE,oBAAC,IAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,EAAC,YAA9B;AAA2C,QAAA,MAAM,EAAC,SAAlD;AAA4D,QAAA,iBAAiB,EAAE,GAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,EAmBIxG,WAAW,IAAIC,YAAhB,GACC,oBAAC,aAAD;AAAe,QAAA,EAAE,EAAED,WAAnB;AAAgC,QAAA,EAAE,EAAEC,YAApC;AAAmD,QAAA,aAAa,EAAE,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAC+E,IApBlF,CAXF,CAvCA,EA6EF;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7EE,CAFF,EAyFE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAC,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAEI,MAAM,CAACC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAA6B,QAAA,EAAE,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,cAAD;AACA,QAAA,IAAI,EAAG,KAAKjB,KAAL,CAAW2F,QADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMA,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAC,OAAzB;AAAiC,QAAA,SAAS,EAAC,YAA3C;AAAwD,QAAA,KAAK,MAA7D;AAA8D,QAAA,MAAM,EAAG;AAAEwE,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAvE;AAA+G,QAAA,QAAQ,MAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANA,EAOA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,MAAM,EAAG;AAAED,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAA7C;AAAqF,QAAA,QAAQ,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPA,EAQA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,IAA7B;AAAkC,QAAA,MAAM,EAAG;AAAED,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAA3C;AAAmF,QAAA,QAAQ,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARA,EASA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,MAAM,EAAG;AAAED,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAArD;AAA6F,QAAA,QAAQ,MAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATA,EAUA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAmC,QAAA,MAAM,EAAG;AAAED,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAA5C;AAAoF,QAAA,QAAQ,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAVA,EAWA,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,UAA7B;AAAwC,QAAA,MAAM,EAAG;AAAED,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAjD;AAAyF,QAAA,QAAQ,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXA,EAYE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,UAA7B;AAAwC,QAAA,MAAM,EAAG;AAAED,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAjD;AAAyF,QAAA,QAAQ,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAZF,EAaI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAA0C,QAAA,MAAM,EAAG;AAAED,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAnD;AAA2F,QAAA,QAAQ,MAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAbJ,EAcM,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,eAA7B;AAA6C,QAAA,MAAM,EAAG;AAAED,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAtD;AAA8F,QAAA,QAAQ,MAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdN,EAeQ,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAmC,QAAA,MAAM,EAAG;AAAED,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAA5C;AAAoF,QAAA,QAAQ,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfR,EAiBN,oBAAC,iBAAD;AACM,QAAA,SAAS,EAAC,QADhB;AAEM,QAAA,UAAU,EAAE,KAAKC,OAAL,CAAalD,IAAb,CAAkB,IAAlB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBM,EAsBJ,oBAAC,iBAAD;AACM,QAAA,SAAS,EAAC,QADhB;AAEM,QAAA,UAAU,EAAE,KAAKmD,SAAL,CAAenD,IAAf,CAAoB,IAApB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBI,CAHF,CAJF,CAFA,CADF,CAzFF,EA2IA,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAS,QAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,CADF,EAOM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPN,EAQM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEhB,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,SAAS,MAAjC;AAAkC,QAAA,KAAK,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,CADA,CADA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,YAAxB;AAAqC,QAAA,WAAW,EAAC,gBAAjD;AAAkE,QAAA,QAAQ,EAAE,KAAKF,YAAjF;AAA+F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWqC,UAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CADA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,aAAxB;AAAsC,QAAA,WAAW,EAAC,WAAlD;AAA8D,QAAA,QAAQ,EAAE,KAAK6E,YAA7E;AAA2F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWsC,WAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CALA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,WAAW,EAAC,gBAA7C;AAA8D,QAAA,QAAQ,EAAE,KAAK4E,YAA7E;AAA2F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWuC,IAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CATA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,IAA1B;AAA+B,QAAA,WAAW,EAAC,kBAA3C;AAA8D,QAAA,QAAQ,EAAE,KAAK2E,YAA7E;AAA2F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWwC,EAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAbA,EAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,cAA1B;AAAyC,QAAA,WAAW,EAAC,cAArD;AAAoE,QAAA,QAAQ,EAAE,KAAK0E,YAAnF;AAAiG,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWyC,YAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAjBA,EAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,KAA1B;AAAgC,QAAA,WAAW,EAAC,wBAA5C;AAAqE,QAAA,QAAQ,EAAE,KAAKyE,YAApF;AAAkG,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW0C,GAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CArBA,EAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAqC,QAAA,WAAW,EAAC,UAAjD;AAA4D,QAAA,QAAQ,EAAE,KAAKwE,YAA3E;AAAyF,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW2C,QAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAzBA,EA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,IAA1B;AAA+B,QAAA,WAAW,EAAC,IAA3C;AAAgD,QAAA,QAAQ,EAAE,KAAKuE,YAA/D;AAA6E,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW4C,EAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CA7BA,EAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,WAA1B;AAAsC,QAAA,WAAW,EAAC,WAAlD;AAA8D,QAAA,QAAQ,EAAE,KAAKsE,YAA7E;AAA2F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW6C,SAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAjCA,EAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAqC,QAAA,WAAW,EAAC,gBAAjD;AAAkE,QAAA,QAAQ,EAAE,KAAKqE,YAAjF;AAA+F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW8C,QAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CArCA,EAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,YAA1B;AAAuC,QAAA,WAAW,EAAC,kBAAnD;AAAsE,QAAA,QAAQ,EAAE,KAAKoE,YAArF;AAAmG,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW+C,UAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAzCA,EA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,eAA1B;AAA0C,QAAA,WAAW,EAAC,gBAAtD;AAAuE,QAAA,QAAQ,EAAE,KAAKmE,YAAtF;AAAoG,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWgD,aAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CA7CA,EAiDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,KAA1B;AAAgC,QAAA,WAAW,EAAC,wBAA5C;AAAqE,QAAA,QAAQ,EAAE,KAAKkE,YAApF;AAAkG,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWiD,GAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAjDA,CARA,CAFgB,CADF,CARN,EAgFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhFZ,EAiFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjFN,CADF,CADI,CADF,CADF,CADF,CA3IA,EA0OA,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAS,QAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKmE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,CADF,EAOM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPN,EAQM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEhB,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,SAAS,MAAjC;AAAkC,QAAA,KAAK,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,CADA,CADA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,YAAxB;AAAqC,QAAA,WAAW,EAAC,gBAAjD;AAAkE,QAAA,QAAQ,EAAE,KAAKF,YAAjF;AAA+F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWqC,UAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CADA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,aAAxB;AAAsC,QAAA,WAAW,EAAC,WAAlD;AAA8D,QAAA,QAAQ,EAAE,KAAK6E,YAA7E;AAA2F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWsC,WAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CALA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,WAAW,EAAC,gBAA7C;AAA8D,QAAA,QAAQ,EAAE,KAAK4E,YAA7E;AAA2F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWuC,IAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CATA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,IAA1B;AAA+B,QAAA,WAAW,EAAC,kBAA3C;AAA8D,QAAA,QAAQ,EAAE,KAAK2E,YAA7E;AAA2F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWwC,EAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAbA,EAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,cAA1B;AAAyC,QAAA,WAAW,EAAC,cAArD;AAAoE,QAAA,QAAQ,EAAE,KAAK0E,YAAnF;AAAiG,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWyC,YAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAjBA,EAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,KAA1B;AAAgC,QAAA,WAAW,EAAC,wBAA5C;AAAqE,QAAA,QAAQ,EAAE,KAAKyE,YAApF;AAAkG,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW0C,GAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CArBA,EAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAqC,QAAA,WAAW,EAAC,UAAjD;AAA4D,QAAA,QAAQ,EAAE,KAAKwE,YAA3E;AAAyF,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW2C,QAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAzBA,EA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,IAA1B;AAA+B,QAAA,WAAW,EAAC,IAA3C;AAAgD,QAAA,QAAQ,EAAE,KAAKuE,YAA/D;AAA6E,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW4C,EAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CA7BA,EAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,WAA1B;AAAsC,QAAA,WAAW,EAAC,WAAlD;AAA8D,QAAA,QAAQ,EAAE,KAAKsE,YAA7E;AAA2F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW6C,SAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAjCA,EAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAqC,QAAA,WAAW,EAAC,gBAAjD;AAAkE,QAAA,QAAQ,EAAE,KAAKqE,YAAjF;AAA+F,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW8C,QAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CArCA,EAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,YAA1B;AAAuC,QAAA,WAAW,EAAC,kBAAnD;AAAsE,QAAA,QAAQ,EAAE,KAAKoE,YAArF;AAAmG,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAW+C,UAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAzCA,EA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,eAA1B;AAA0C,QAAA,WAAW,EAAC,gBAAtD;AAAuE,QAAA,QAAQ,EAAE,KAAKmE,YAAtF;AAAoG,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWgD,aAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CA7CA,EAiDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,KAA1B;AAAgC,QAAA,WAAW,EAAC,wBAA5C;AAAqE,QAAA,QAAQ,EAAE,KAAKkE,YAApF;AAAkG,QAAA,KAAK,EAAE,KAAKlH,KAAL,CAAWiD,GAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,CAFA,CAjDA,CARA,CAFgB,CADF,CARN,EAgFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhFZ,CADF,CADI,EAsFJ;AAAQ,QAAA,OAAO,EAAE,KAAKqE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAtFI,CADF,CADF,CADF,CA1OA,CAHI,CAZF,CADF,CAFF,CADI;AAyWK;;;;EA3lC+B9K,S;;SAAvB+E,c","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Button, ResponsiveEmbed, ButtonToolbar, Form, Grid, Row, FormGroup, Tab, Radio, Tabs, Col, Table, Popover, ControlLabel, MenuItem, DropdownButton, FormControl, Checkbox } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\nimport { PDFExport } from '@progress/kendo-react-pdf';\nimport { fire } from '../fire';\n\nimport {BootstrapTable, BootstrapButton, TableHeaderColumn} from 'react-bootstrap-table';\nimport { TiArrowSortedDown, TiArrowSortedUp, TiPencil, TiTrash } from \"react-icons/ti\";\n\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\n\n\nimport { LineChart, ReferenceArea, AreaChart, Brush, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label} from 'recharts';\n\n\n\n\n\n\n\n\nconst data = [\n  { name: 1, cost: 4.11, impression: 100 },\n  { name: 2, cost: 2.39, impression: 120 },\n  { name: 3, cost: 1.37, impression: 150 },\n  { name: 4, cost: 1.16, impression: 180 },\n  { name: 5, cost: 2.29, impression: 200 },\n  { name: 6, cost: 3, impression: 499 },\n  { name: 7, cost: 0.53, impression: 50 },\n  { name: 8, cost: 2.52, impression: 100 },\n  { name: 9, cost: 1.79, impression: 200 },\n  { name: 10, cost: 2.94, impression: 222},\n  { name: 11, cost: 4.3, impression: 210 },\n  { name: 12, cost: 4.41, impression: 300 },\n  { name: 13, cost: 2.1, impression: 50 },\n  { name: 14, cost: 8, impression: 190 },\n  { name: 15, cost: 0, impression: 300 },\n  { name: 16, cost: 9, impression: 400 },\n  { name: 17, cost: 3, impression: 200 },\n  { name: 18, cost: 2, impression: 50 },\n  { name: 19, cost: 3, impression: 100 },\n  { name: 20, cost: 7, impression: 100 }\n];\n\nconst getAxisYDomain = (from, to, ref, offset) => {\n  let data = this.state.orders2;\n\tconst refData = data.slice(from-1, to);\n  let [ bottom, top ] = [ refData[0][ref], refData[0][ref] ];\n  refData.forEach( d => {\n  \tif ( d[ref] > top ) top = d[ref];\n    if ( d[ref] < bottom ) bottom = d[ref];\n  });\n  return [ (bottom|0) - offset, (top|0) + offset ]\n};\n\nconst initialState = {\n  data,\n  left : 'dataMin',\n  right : 'dataMax',\n  refAreaLeft : '',\n  refAreaRight : '',\n  top : 'dataMax+1',\n  bottom : 'dataMin-1',\n  top2 : 'dataMax+20',\n  bottom2 : 'dataMin-20',\n  animation : true\n};\n\n\n\n\n\nconst styles = {\n  topPad: {\n    paddingTop: \"20px\"\n  },\n};\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: .8\n        }}\n    />\n);\n\n\n\nexport default class monthlySamples extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n          data,\n          left : 'dataMin',\n          right : 'dataMax',\n          refAreaLeft : '',\n          refAreaRight : '',\n          top : 'dataMax+1',\n          bottom : 'dataMin-1',\n          top2 : 'dataMax+20',\n          bottom2 : 'dataMin-20',\n          animation : true,\n\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n\n          id: '',\n          key: 1,\n          idKey: '',\n          page: '',\n          area: '',\n\n\n\n          samples: [],\n          orders: [],\n          orders2: [],\n          dataList: [],\n          filter: \"\",\n          blobUrl: null,\n\n          ammoniaPlot: 'ammoniaResult',\n\n          tempPlot: 'temp',\n          doPlot: 'do',\n          conductivityPlot: 'conductivity',\n          tdsPlot: 'tds',\n          salinityPlot: 'salinity',\n          pHPlot: 'pH',\n          turbidityPlot: 'turbidity',\n          nitrogenPlot: 'nitrogen',\n          phosphorusPlot: 'phosphorus',\n          totalHardnessPlot: 'totalHardness',\n          tssPlot: 'tss',\n\n\n\n\n        }\n        //these are triggered events.  handleChange is for text box changes\n        //handlesubmit is for the form being submitted.\n        //every event trigger needs to be bound like is below with .bind\n        //we might now have to do this anymore with the newest version of react, but i have it to be safe.\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.writeData = this.writeData.bind(this);\n\n\n\n\n      }\n\n      //event triggered when text boxes of forms, values are changed\n      handleChange(e) {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n        let filter = this.state.filter;\n        let dataList = this.state.orders.filter(function (item) {\n        return Object.values(item).map(function (value) {\n        return String(value);\n              }).find(function (value) {\n                   return value.includes(filter);\n        });\n\n        });\n        let newState = [];\n\n\n\n\n\n      }\n      //event triggered when form is submitted\n      handleSubmit(e) {\n        e.preventDefault();\n        //fire.database().ref('samples') refers to the main title of the fire database.\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n        const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n        const orderID = fire.database().ref(`/monthlySamples/${user.uid}/${orderID}`);\n\n\n        const sample = {\n\n          sampleDate: this.state.sampleDate,\n          sampleTaker: this.state.sampleTaker,\n          temp: this.state.temp,\n          do: this.state.do,\n          conductivity: this.state.conductivity,\n          tds: this.state.tds,\n          salinity: this.state.salinity,\n          pH: this.state.pH,\n          turbidity: this.state.turbidity,\n          nitrogen: this.state.nitrogen,\n          phosphorus: this.state.phosphorus,\n          totalHardness: this.state.totalHardness,\n          tss: this.state.tss,\n\n          id: this.state.id,\n        }\n\n\n\n\n        samplesRef.push(sample);\n        //this.setState is used to clear the text boxes after the form has been submitted.\n        this.setState({\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n\n\n\n        });\n      });\n    }\n\n\n\n\n\n      //this function is constantly running after the initial render.  Snapshot is used to look into the database.\n      //[] indicates an array value\n      //.map(Number) changes an array of strings to an array of integers\n      //snapshot.foreach(ss => {...}) **this looks in each \"Sample\" for the child of \"user\"**\n      //child of user can be child of BOD or child of tss or whatever.  It finds the value that is a child to that label.\n\n      componentDidMount() {\n        this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n          const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n          samplesRef.on('value', (snapshot) => {\n\n\n            let dataList = snapshot.val();\n            let filter = [];\n\n\n\n          let orders = snapshot.val();\n          let orders2 = snapshot.val();\n\n          let newState = [];\n          let newState2 = [];\n          let newState3 = [];\n\n          for (let order in orders) {\n            newState.push({\n              id: order,\n              sampleDate: orders[order].sampleDate,\n              sampleTaker: orders[order].sampleTaker,\n              temp: orders[order].temp,\n              do: orders[order].do,\n              conductivity: orders[order].conductivity,\n              tds: orders[order].tds,\n              salinity: orders[order].salinity,\n              pH: orders[order].pH,\n              turbidity: orders[order].turbidity,\n              nitrogen: orders[order].nitrogen,\n              phosphorus: orders[order].phosphorus,\n              totalHardness: orders[order].totalHardness,\n              tss: orders[order].tss,\n\n\n\n            });\n          }\n          for (let order2 in orders2) {\n            newState2.push({\n\n\n              sampleDate: orders2[order2].sampleDate,\n\n              DOResult: orders2[order2].DOResult,\n              nitrateResult: orders2[order2].nitrateResult,\n              nitriteResult: orders2[order2].nitriteResult,\n              ammoniaResult: orders2[order2].ammoniaResult,\n\n\n\n            });\n          }\n          newState2.sort(function(a, b) {\n\n            if (a.sampleDate === b.sampleDate) {\n              return 0;\n            }\n            return a.sampleDate > b.sampleDate ? 1 : -1;\n        });\n        newState.sort(function(a, b) {\n\n          if (b.sampleDate === a.sampleDate) {\n            return 0;\n          }\n          return b.sampleDate > a.sampleDate ? 1 : -1;\n      });\n\n\n\n          this.setState({\n            orders: newState,\n            orders2: newState,\n            dataList: newState,\n          });\n\n\n\n\n          console.log(this.state.dataList);\n\n\n\n\n\n        });\n\n      });\n\n\n    }\n\n\n\n    fillStates(itemId) {\n      let area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n      sampleRef.on('value', (snapshot) => {\n\n        this.setState({\n          sampleDate: '',\n          sampleTaker: '',\n          temp: '',\n          do: '',\n          conductivity: '',\n          tds: '',\n          salinity: '',\n          pH: '',\n          turbidity: '',\n          nitrogen: '',\n          phosphorus: '',\n          totalHardness: '',\n          tss: '',\n\n        });\n\n      let orders = snapshot.val();\n      let id = fire.database().ref().child(`/monthlySamples/${user.uid}/${itemId}`).key;\n\n      let newState = [];\n      for (let order in orders) {\n        newState.push({\n          id: order,\n\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n\n        });\n      }\n      this.setState({\n\n        id: id,\n        key: 4,\n\n        sampleDate: snapshot.child('sampleDate').val(),\n        sampleTaker: snapshot.child('sampleTaker').val(),\n        temp: snapshot.child('temp').val(),\n        do: snapshot.child('do').val(),\n        conductivity: snapshot.child('conductivity').val(),\n        tds: snapshot.child('tds').val(),\n        salinity: snapshot.child('salinity').val(),\n        pH: snapshot.child('pH').val(),\n        turbidity: snapshot.child('turbidity').val(),\n        nitrogen: snapshot.child('nitrogen').val(),\n        phosphorus: snapshot.child('phosphorus').val(),\n        totalHardness: snapshot.child('totalHardness').val(),\n        tss: snapshot.child('tss').val(),\n\n\n\n\n\n\n      })\n\n\n\n\n});\n\n    });\n  }\n\n\n  writeStates = (itemId) => {\n\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${this.state.id}`);\n\n\n    sampleRef.child(\"id\").set(this.state.id);\n\n\n    sampleRef.child(\"sampleDate\").set(this.state.sampleDate);\n    sampleRef.child(\"sampleTaker\").set(this.state.sampleTaker);\n    sampleRef.child(\"temp\").set(this.state.temp);\n    sampleRef.child(\"do\").set(this.state.do);\n    sampleRef.child(\"conductivity\").set(this.state.conductivity);\n    sampleRef.child(\"tds\").set(this.state.tds);\n    sampleRef.child(\"salinity\").set(this.state.salinity);\n    sampleRef.child(\"pH\").set(this.state.pH);\n    sampleRef.child(\"turbidity\").set(this.state.turbidity);\n    sampleRef.child(\"nitrogen\").set(this.state.nitrogen);\n    sampleRef.child(\"phosphorus\").set(this.state.phosphorus);\n    sampleRef.child(\"totalHardness\").set(this.state.totalHardness);\n    sampleRef.child(\"tss\").set(this.state.tss);\n\n\n\n  });\n\n\n  }\n\n\n\n  fillEmpty(itemId) {\n    let area = '';\n    this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n    const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n\n    sampleRef.on('value', (snapshot) => {\n\n    let orders = snapshot.val();\n\n    let newState = [];\n    for (let order in orders) {\n      newState.push({\n        id: order,\n\n        sampleDate: orders[order].sampleDate,\n        sampleTaker: orders[order].sampleTaker,\n        temp: orders[order].temp,\n        do: orders[order].do,\n        conductivity: orders[order].conductivity,\n        tds: orders[order].tds,\n        salinity: orders[order].salinity,\n        pH: orders[order].pH,\n        turbidity: orders[order].turbidity,\n        nitrogen: orders[order].nitrogen,\n        phosphorus: orders[order].phosphorus,\n        totalHardness: orders[order].totalHardness,\n        tss: orders[order].tss,\n\n      });\n    }\n    this.setState({\n\n      id: '',\n      key: 3,\n      sampleDate: '',\n      sampleTaker: '',\n      temp: '',\n      do: '',\n      conductivity: '',\n      tds: '',\n      salinity: '',\n      pH: '',\n      turbidity: '',\n      nitrogen: '',\n      phosphorus: '',\n      totalHardness: '',\n      tss: '',\n\n\n    })\n\n\n});\n  });\n}\n\n  createNewWorkOrder (itemId) {\n\n      let area = '';\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n\n      sampleRef.on('value', (snapshot) => {\n\n      let orders = snapshot.val();\n\n      let newState = [];\n      for (let order in orders) {\n        newState.push({\n          id: order,\n\n          sampleDate: orders[order].sampleDate,\n          sampleTaker: orders[order].sampleTaker,\n          temp: orders[order].temp,\n          do: orders[order].do,\n          conductivity: orders[order].conductivity,\n          tds: orders[order].tds,\n          salinity: orders[order].salinity,\n          pH: orders[order].pH,\n          turbidity: orders[order].turbidity,\n          nitrogen: orders[order].nitrogen,\n          phosphorus: orders[order].phosphorus,\n          totalHardness: orders[order].totalHardness,\n          tss: orders[order].tss,\n\n        });\n      }\n      this.setState({\n\n        id: snapshot.child('id').val(),\n        key: 3,\n\n        sampleDate: snapshot.child('sampleDate').val(),\n        sampleTaker: snapshot.child('sampleTaker').val(),\n        temp: snapshot.child('temp').val(),\n        do: snapshot.child('do').val(),\n        conductivity: snapshot.child('conductivity').val(),\n        tds: snapshot.child('tds').val(),\n        salinity: snapshot.child('salinity').val(),\n        pH: snapshot.child('pH').val(),\n        turbidity: snapshot.child('turbidity').val(),\n        nitrogen: snapshot.child('nitrogen').val(),\n        phosphorus: snapshot.child('phosphorus').val(),\n        totalHardness: snapshot.child('totalHardness').val(),\n        tss: snapshot.child('tss').val(),\n\n\n\n      })\n\n\n});\n    });\n\n\n\n\n  }\n\n    removesample(itemId) {\n      this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n      const sampleRef = fire.database().ref(`/monthlySamples/${user.uid}/${itemId}`);\n      sampleRef.remove();\n    });\n    }\n\n    handleSelect(key) {\n\n  this.setState({key});\n}\n\n\nwriteData (e) {\n  e.preventDefault();\n  //fire.database().ref('samples') refers to the main title of the fire database.\n  this.removeAuthListener = fire.auth().onAuthStateChanged(user=>{\n  const samplesRef = fire.database().ref(`monthlySamples/${user.uid}`);\n  const orderID = fire.database().ref(`/monthlySamples/${user.uid}/${this.state.id}`);\n  const newCheckboxKey = firebase.database().ref().child('checkbox').push().key;\n\n  let id = newCheckboxKey;\n  let box = id;\n\n\n  const sample = {\n\n    id: this.state.id,\n    sampleDate: this.state.sampleDate,\n    sampleTaker: this.state.sampleTaker,\n    temp: this.state.temp,\n    do: this.state.do,\n    conductivity: this.state.conductivity,\n    tds: this.state.tds,\n    salinity: this.state.salinity,\n    pH: this.state.pH,\n    turbidity: this.state.turbidity,\n    nitrogen: this.state.nitrogen,\n    phosphorus: this.state.phosphorus,\n    totalHardness: this.state.totalHardness,\n    tss: this.state.tss,\n  }\n\n  samplesRef.child(this.state.id).set(sample);\n\n\n\n\n\n\n  //this.setState is used to clear the text boxes after the form has been submitted.\n\n});\n}\n\n\n\nhandleBtnClick = () => {\n\n  let order = 'desc';\n  if (order === 'desc') {\n    this.refs.table.handleSort('asc', 'name');\n    order = 'asc';\n  } else {\n    this.refs.table.handleSort('desc', 'name');\n    order = 'desc';\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrawMarkup(){\n  var rawMarkup = this.props.content\n  return { __html: rawMarkup };\n}\n\n\nnitrogenOn = () => {\n  let nitrogen = \"nitrogen\"; this.setState({ nitrogenPlot: nitrogen,})\n}\nnitrogenOff = () => {\n  let nitrogen = \"\"; this.setState({ nitrogenPlot: nitrogen,})\n}\nphosphorusOn = () => {\n  let phosphorus = \"phosphorus\"; this.setState({ phosphorusPlot: phosphorus,})\n}\nphosphorusOff = () => {\n  let phosphorus = \"\"; this.setState({ phosphorusPlot: phosphorus,})\n}\ntdsOn = () => {\n  let tds = \"tds\"; this.setState({ tdsPlot: tds,})\n}\ntdsOff = () => {\n  let tds = \"\"; this.setState({ tdsPlot: tds,})\n}\ntssOn = () => {\n  let tss = \"tss\"; this.setState({ tssPlot: tss,})\n}\ntssOff = () => {\n  let tss = \"\"; this.setState({ tssPlot: tss,})\n}\nconductivityOn = () => {\n  let conductivity = \"conductivity\"; this.setState({ conductivityPlot: conductivity,})\n}\nconductivityOff = () => {\n  let conductivity = \"\"; this.setState({ conductivityPlot: conductivity,})\n}\nsalinityOn = () => {\n  let salinity = \"salinity\"; this.setState({ salinityPlot: salinity,})\n}\nsalinityOff = () => {\n  let salinity = \"\"; this.setState({ salinityPlot: salinity,})\n}\ntempOn = () => {\n  let temp = \"temp\"; this.setState({ tempPlot: temp,})\n}\ntempOff = () => {\n  let temp = \"\"; this.setState({ tempPlot: temp,})\n}\ndoOn = () => {\n  let DO = \"do\"; this.setState({ doPlot: DO,})\n}\ndoOff = () => {\n  let DO = \"\"; this.setState({ doPlot: DO,})\n}\nhardnessOn = () => {\n  let hardness = \"totalHardness\"; this.setState({ hardnessPlot: hardness,})\n}\nhardnessOff = () => {\n  let hardness = \"\"; this.setState({ hardnessPlot: hardness,})\n}\npHOn = () => {\n  let pH = \"pH\"; this.setState({ pHPlot: pH,})\n}\npHOff = () => {\n  let pH = \"\"; this.setState({ pHPlot: pH,})\n}\n\n\n\n\n DOSort = (a, b, order) => {\n   let dataList = this.state.dataList;   // order is desc or asc\n  if (order === 'desc') {\n    return a.DOResult - b.DOResult;\n  } else {\n    return b.DOResult - a.DOResult;\n  }\n}\n\n\n\neditRow(row, isSelected, e, id) {\n  console.log(`${isSelected.id}`);\n  return (\n    <TiPencil type=\"button\"\n    onClick={() => this.fillStates(`${isSelected.id}`)}>\n      Click me\n    </TiPencil>\n  )\n}\n\ndeleteRow(row, isSelected, e, id) {\n  console.log(`${isSelected.id}`);\n  return (\n    <TiTrash type=\"button\"\n    onClick={() => this.removesample(`${isSelected.id}`)}>\n      Click me\n    </TiTrash>\n  )\n}\n\n\n\n\nfilter = (url) => {\n\n\n\n  domtoimage.toBlob(document.getElementById('my-node'))\n      .then((blob) => {\n          console.log(blob);\n          const blobUrl = URL.createObjectURL(blob);\n          console.log(blobUrl);\n          this.setState({\n            blobUrl: blobUrl,\n          })\n      });\n}\n\nzoom(){\n  \tlet { refAreaLeft, refAreaRight } = this.state;\n    let data = this.state.orders2;\n\n\t\tif ( refAreaLeft === refAreaRight || refAreaRight === '' ) {\n    \tthis.setState( () => ({\n      \trefAreaLeft : '',\n        refAreaRight : ''\n      }) );\n    \treturn;\n    }\n\n\t\t// xAxis domain\n\t  if ( refAreaLeft > refAreaRight )\n    \t\t[ refAreaLeft, refAreaRight ] = [ refAreaRight, refAreaLeft ];\n\n\t\t// yAxis domain\n    const [ bottom, top ] = getAxisYDomain( refAreaLeft, refAreaRight);\n    const [ bottom2, top2 ] = getAxisYDomain( refAreaLeft, refAreaRight );\n\n    this.setState( () => ({\n      refAreaLeft : '',\n      refAreaRight : '',\n    \tdata : data.slice(),\n      left : refAreaLeft,\n      right : refAreaRight,\n      bottom, top, bottom2, top2\n    } ) );\n  };\n\n\tzoomOut() {\n  \tlet data = this.state.orders2;\n  \tthis.setState( () => ({\n      data : data.slice(),\n      refAreaLeft : '',\n      refAreaRight : '',\n      left : 'dataMin',\n      right : 'dataMax',\n      top : 'dataMax+1',\n      bottom : 'dataMin',\n      top2 : 'dataMax+50',\n      bottom: 'dataMin+50'\n    }) );\n  }\n\n\n\n\n\n\n\n\n      render() {\n        function buttonFormatter(cell, row){\n  return '<BootstrapButton type=\"submit\"></BootstrapButton>';\n}\nconst { data, barIndex, left, right, refAreaLeft, refAreaRight, top, bottom, top2, bottom2 } = this.state;\n        return (\n    <div>\n\n      <Grid>\n        <Row>\n          <Row>\n            <Col xs={6} md={6}>\n          <h3>Monthly Sample Logs</h3>\n\n          </Col>\n          <Col xs={6} md={6}>\n            <ButtonToolbar style={styles.topPad}>\n          <Button  onClick={() => this.fillEmpty()} eventKey={3} bsSize=\"large\">+ Create New Sample Log</Button>\n        </ButtonToolbar>\n          </Col>\n          </Row>\n          <Col xs={12} sm={10} md={10}>\n\n\n      <Tabs activeKey={this.state.key} onSelect={this.handleSelect} defaultActiveKey={1} id=\"uncontrolled-tab-example\">\n\n        <Tab eventKey={1} title=\"+ Graphs\">\n\n\n\n\n          <Col xs={7} sm={7} md={7} lg={7}>\n\n          <div id=\"my-node\">\n          <LineChart\n            width={600} height={200} data={this.state.orders2} syncId=\"anyId\"\n            margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n        <CartesianGrid strokeDasharray=\"3 3\"/>\n        <XAxis dataKey=\"sampleDate\"/>\n        <YAxis/>\n        <Tooltip/>\n\n          <Line type=\"monotone\" dataKey={this.state.nitrogenPlot} stroke=\"#8884d8\" activeDot={{r: 8}}/>\n        <Line type=\"monotone\" dataKey={this.state.phosphorusPlot} stroke=\"#82ca9d\" />\n         <Line type=\"monotone\" dataKey={this.state.tdsPlot} stroke=\"#8884d8\" activeDot={{r: 8}}/>\n        <Line type=\"monotone\" dataKey={this.state.pHPlot} stroke=\"#82ca9d\" />\n        <Brush />\n        <Legend />\n        </LineChart>\n\n        </div>\n      </Col>\n        <Col smOffset={1} xs={2} sm={2} md={2} lg={2}>\n        <button onClick={this.nitrogenOn}>Nitrogen On</button>\n        <button onClick={this.nitrogenOff}>Nitrogen Off</button>\n        <button onClick={this.phosphorusOn}>Phosphorus On</button>\n        <button onClick={this.phosphorusOff}>Phosphorus Off</button>\n        <button onClick={this.tdsOn}>TDS On</button>\n        <button onClick={this.tdsOff}>TDS Off</button>\n          <button onClick={this.pHOn}>TDS On</button>\n          <button onClick={this.pHOff}>TDS Off</button>\n\n\n        </Col>\n\n        <div className=\"highlight-bar-charts\">\n        <a\n          href=\"javascript: void(0);\"\n          className=\"btn update\"\n          onClick={this.zoomOut.bind( this )}\n        >\n          Zoom Out\n        </a>\n\n\n        <p>Highlight / Zoom - able Line Chart</p>\n          <LineChart\n            width={800}\n            height={400}\n            data={this.state.orders2}\n            onMouseDown = { (e) => this.setState({refAreaLeft:e.activeLabel}) }\n            onMouseMove = { (e) => this.state.refAreaLeft && this.setState({refAreaRight:e.activeLabel}) }\n            onMouseUp = { this.zoom.bind( this ) }\n          >\n            <CartesianGrid strokeDasharray=\"3 3\"/>\n            <XAxis dataKey=\"sampleDate\"/>\n            <YAxis\n\n             />\n\n            <Tooltip/>\n            <Line  type='natural' dataKey='nitrogen' stroke='#8884d8' animationDuration={300}/>\n            <Line  type='natural' dataKey='phosphorus' stroke='#82ca9d' animationDuration={300}/>\n\n            {\n            \t(refAreaLeft && refAreaRight) ? (\n              <ReferenceArea x1={refAreaLeft} x2={refAreaRight}  strokeOpacity={0.3} /> ) : null\n\n            }\n\n          </LineChart>\n\n      </div>\n      <div id=\"container\">\n\n</div>\n\n\n\n\n\n        </Tab>\n\n        <Tab eventKey={2} title=\"+ Monthly Samples\">\n          <Grid>\n\n          <Row style={styles.topPad}>\n\n\n\n            <Col xs={10} sm={10} md={10} lg={10}>\n\n\n              <BootstrapTable\n              data={ this.state.dataList }\n\n\n              >\n\n              <TableHeaderColumn width='110px' dataField='sampleDate' isKey filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Sample Date</TableHeaderColumn>\n              <TableHeaderColumn dataField='temp' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Temperature</TableHeaderColumn>\n              <TableHeaderColumn dataField='do' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Dissolved Oxygen</TableHeaderColumn>\n              <TableHeaderColumn dataField='conductivity' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Conductivity</TableHeaderColumn>\n              <TableHeaderColumn dataField='tds' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Total Dissolved Solids</TableHeaderColumn>\n              <TableHeaderColumn dataField='salinity' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Salinity</TableHeaderColumn>\n                <TableHeaderColumn dataField='nitrogen' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Total Nitrogen</TableHeaderColumn>\n                  <TableHeaderColumn dataField='phosphorus' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Total Phosphorus</TableHeaderColumn>\n                    <TableHeaderColumn dataField='totalHardness' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>Hardness</TableHeaderColumn>\n                      <TableHeaderColumn dataField='tss' filter={ { type: 'RegexFilter', delay: 1000 }  } dataSort>TSS</TableHeaderColumn>\n\n        <TableHeaderColumn\n              dataField='button'\n              dataFormat={this.editRow.bind(this)}\n              >Edit</TableHeaderColumn>\n\n          <TableHeaderColumn\n                dataField='button'\n                dataFormat={this.deleteRow.bind(this)}\n                >Delete</TableHeaderColumn>\n\n\n              </BootstrapTable>\n              </Col>\n\n          </Row>\n        </Grid>\n          </Tab>\n\n\n\n\n\n\n      <Tab eventKey={3} >\n        <Grid>\n          <Row>\n            <Col xs={10} md={10}>\n        <section className='add-item'>\n          <form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col xs={4} sm={4} md={4}>\n                <h2>Monthly Sample Log</h2>\n                </Col>\n\n                </Row>\n                <hr></hr>\n                <Row>\n                  <Col xs={8} sm={8} md={8}>\n\n  <Table striped bordered condensed hover>\n  <thead>\n  <tr>\n  <th>Description</th>\n  <th>Results</th>\n\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  <td>Date</td>\n  <td><input type=\"date\" name=\"sampleDate\" placeholder=\"Date of Sample\" onChange={this.handleChange} value={this.state.sampleDate} /></td>\n  </tr>\n  <tr>\n  <td>Name</td>\n  <td><input type=\"text\" name=\"sampleTaker\" placeholder=\"Your Name\" onChange={this.handleChange} value={this.state.sampleTaker} /></td>\n  </tr>\n  <tr>\n  <td>Water Temperature</td>\n  <td><input type=\"number\" name=\"temp\" placeholder=\"Temp of Sample\" onChange={this.handleChange} value={this.state.temp} /></td>\n  </tr>\n  <tr>\n  <td>DO</td>\n  <td><input type=\"number\" name=\"do\" placeholder=\"Dissolved Oxygen\" onChange={this.handleChange} value={this.state.do} /></td>\n  </tr>\n  <tr>\n  <td>Conductivity</td>\n  <td><input type=\"number\" name=\"conductivity\" placeholder=\"Conductivity\" onChange={this.handleChange} value={this.state.conductivity} /></td>\n  </tr>\n  <tr>\n  <td>Total Dissolved Solids</td>\n  <td><input type=\"number\" name=\"tds\" placeholder=\"Total Dissolved Solids\" onChange={this.handleChange} value={this.state.tds} /></td>\n  </tr>\n  <tr>\n  <td>Salinity</td>\n  <td><input type=\"number\" name=\"salinity\" placeholder=\"Salinity\" onChange={this.handleChange} value={this.state.salinity} /></td>\n  </tr>\n  <tr>\n  <td>pH</td>\n  <td><input type=\"number\" name=\"pH\" placeholder=\"pH\" onChange={this.handleChange} value={this.state.pH} /></td>\n  </tr>\n  <tr>\n  <td>Turbidity</td>\n  <td><input type=\"number\" name=\"turbidity\" placeholder=\"Turbidity\" onChange={this.handleChange} value={this.state.turbidity} /></td>\n  </tr>\n  <tr>\n  <td>Total Nitrogen</td>\n  <td><input type=\"number\" name=\"nitrogen\" placeholder=\"Total Nitrogen\" onChange={this.handleChange} value={this.state.nitrogen} /></td>\n  </tr>\n  <tr>\n  <td>Total Phosphorus</td>\n  <td><input type=\"number\" name=\"phosphorus\" placeholder=\"Total Phosphorus\" onChange={this.handleChange} value={this.state.phosphorus} /></td>\n  </tr>\n  <tr>\n  <td>Total Hardness</td>\n  <td><input type=\"number\" name=\"totalHardness\" placeholder=\"Total Hardness\" onChange={this.handleChange} value={this.state.totalHardness} /></td>\n  </tr>\n  <tr>\n  <td>Total Suspended Solids</td>\n  <td><input type=\"number\" name=\"tss\" placeholder=\"Total Suspended Solids\" onChange={this.handleChange} value={this.state.tss} /></td>\n  </tr>\n\n\n  </tbody>\n  </Table>\n\n</Col>\n                  </Row>\n\n                      <hr></hr>\n                <button>Add sample</button>\n              </form>\n        </section>\n\n        </Col>\n        </Row>\n\n        </Grid>\n      </Tab>\n      <Tab eventKey={4} >\n        <Grid>\n          <Row>\n            <Col xs={10} md={10}>\n        <section className='add-item'>\n          <form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col xs={4} sm={4} md={4}>\n                <h2>Monthly Sample Log</h2>\n                </Col>\n\n                </Row>\n                <hr></hr>\n                <Row>\n                  <Col xs={8} sm={8} md={8}>\n\n  <Table striped bordered condensed hover>\n  <thead>\n  <tr>\n  <th>Description</th>\n  <th>Results</th>\n\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  <td>Date</td>\n  <td><input type=\"date\" name=\"sampleDate\" placeholder=\"Date of Sample\" onChange={this.handleChange} value={this.state.sampleDate} /></td>\n  </tr>\n  <tr>\n  <td>Name</td>\n  <td><input type=\"text\" name=\"sampleTaker\" placeholder=\"Your Name\" onChange={this.handleChange} value={this.state.sampleTaker} /></td>\n  </tr>\n  <tr>\n  <td>Water Temperature</td>\n  <td><input type=\"number\" name=\"temp\" placeholder=\"Temp of Sample\" onChange={this.handleChange} value={this.state.temp} /></td>\n  </tr>\n  <tr>\n  <td>DO</td>\n  <td><input type=\"number\" name=\"do\" placeholder=\"Dissolved Oxygen\" onChange={this.handleChange} value={this.state.do} /></td>\n  </tr>\n  <tr>\n  <td>Conductivity</td>\n  <td><input type=\"number\" name=\"conductivity\" placeholder=\"Conductivity\" onChange={this.handleChange} value={this.state.conductivity} /></td>\n  </tr>\n  <tr>\n  <td>Total Dissolved Solids</td>\n  <td><input type=\"number\" name=\"tds\" placeholder=\"Total Dissolved Solids\" onChange={this.handleChange} value={this.state.tds} /></td>\n  </tr>\n  <tr>\n  <td>Salinity</td>\n  <td><input type=\"number\" name=\"salinity\" placeholder=\"Salinity\" onChange={this.handleChange} value={this.state.salinity} /></td>\n  </tr>\n  <tr>\n  <td>pH</td>\n  <td><input type=\"number\" name=\"pH\" placeholder=\"pH\" onChange={this.handleChange} value={this.state.pH} /></td>\n  </tr>\n  <tr>\n  <td>Turbidity</td>\n  <td><input type=\"number\" name=\"turbidity\" placeholder=\"Turbidity\" onChange={this.handleChange} value={this.state.turbidity} /></td>\n  </tr>\n  <tr>\n  <td>Total Nitrogen</td>\n  <td><input type=\"number\" name=\"nitrogen\" placeholder=\"Total Nitrogen\" onChange={this.handleChange} value={this.state.nitrogen} /></td>\n  </tr>\n  <tr>\n  <td>Total Phosphorus</td>\n  <td><input type=\"number\" name=\"phosphorus\" placeholder=\"Total Phosphorus\" onChange={this.handleChange} value={this.state.phosphorus} /></td>\n  </tr>\n  <tr>\n  <td>Total Hardness</td>\n  <td><input type=\"number\" name=\"totalHardness\" placeholder=\"Total Hardness\" onChange={this.handleChange} value={this.state.totalHardness} /></td>\n  </tr>\n  <tr>\n  <td>Total Suspended Solids</td>\n  <td><input type=\"number\" name=\"tss\" placeholder=\"Total Suspended Solids\" onChange={this.handleChange} value={this.state.tss} /></td>\n  </tr>\n\n\n  </tbody>\n  </Table>\n\n</Col>\n                  </Row>\n\n                      <hr></hr>\n\n              </form>\n        </section>\n        <button onClick={this.writeData}>Overwrite Data</button>\n        </Col>\n        </Row>\n\n        </Grid>\n      </Tab>\n\n\n\n\n    </Tabs>\n\n\n    </Col>\n    </Row>\n    </Grid>\n\n    </div>\n        )\n            }\n          }\n"]},"metadata":{},"sourceType":"module"}